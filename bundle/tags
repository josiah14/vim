!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
%	matchit/plugin/matchit.vim	/^nnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'n') <CR>$/;"	m
%	matchit/plugin/matchit.vim	/^onoremap <silent> %  v:<C-U>call <SID>Match_wrapper('',1,'o') <CR>$/;"	m
%	matchit/plugin/matchit.vim	/^vnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'v') <CR>m'gv``$/;"	m
<2-LeftMouse>	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <2-LeftMouse>   \\|:call <SID>DoFoldOrOpenEntry('', 'e')<CR>$/;"	m
<2-RightMouse>	project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <2-RightMouse> <space>$/;"	m
<3-LeftMouse>	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <3-LeftMouse>  <Nop>$/;"	m
<3-RightMouse>	project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <3-RightMouse> <space>$/;"	m
<4-RightMouse>	project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <4-RightMouse> <space>$/;"	m
<C-2-LeftMouse>	project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <C-2-LeftMouse> <C-Return>$/;"	m
<C-Down>	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <C-Down> \\|:silent call <SID>MoveDown()<CR>$/;"	m
<C-G>S	vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-LeftMouse>	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <C-LeftMouse>   <LeftMouse>$/;"	m
<C-Return>	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <C-Return> \\|:call <SID>DoFoldOrOpenEntry('silent! only', 'e')<CR>$/;"	m
<C-S>	vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-Up>	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <C-Up>   \\|:silent call <SID>MoveUp()<CR>$/;"	m
<C-W><C-D>	vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> <C-W><C-D>  :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W><C-F>	vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-F> :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>\\<Lt>C-F>",'split')<CR>$/;"	m
<C-W><C-O>	project-1.4.1/plugin/project.vim	/^                nmap <silent> <unique> <C-W><C-O> <C-W>o$/;"	m
<C-W><C-]>	vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> <C-W><C-]>  :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W><C-]>	vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-]>  :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>]	vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> <C-W>]      :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W>]	vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>]      :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>d	vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> <C-W>d      :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W>f	vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>f     :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>f",'split')<CR>$/;"	m
<C-W>g<C-]>	vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g<C-]> :<C-U>exe        "stjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>g]	vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g]     :<C-U>exe      "stselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>gf	vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>gf    :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>gf",'tabedit')<CR>$/;"	m
<C-W>g}	vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g}     :<C-U>exe        "ptjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>o	project-1.4.1/plugin/project.vim	/^                nmap <silent> <unique> <C-W>o <Plug>ProjectOnly$/;"	m
<C-W>}	vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> <C-W>}      :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
<C-W>}	vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>}      :<C-U>exe          "ptag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-X><CR>	vim-endwise/plugin/endwise.vim	/^    imap <C-X><CR> <CR><Plug>AlwaysEnd$/;"	m
<C-]>	vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> <C-]>       :<C-U>exe <SID>jump('edit',v:count)<CR>$/;"	m
<C-]>	vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-]>       :<C-U>exe  v:count1."tag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-^>	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <C-^> <Nop>$/;"	m
<CR>	vim-endwise/plugin/endwise.vim	/^    imap <CR>      <CR><Plug>DiscretionaryEnd$/;"	m
<F12>	project-1.4.1/plugin/project.vim	/^        nmap <silent> <F12> <Plug>ToggleProject$/;"	m
<F1>	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <F1> :let g:proj_doinghelp = 1<CR><F1>$/;"	m
<F5>	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent>           <F5> :call <SID>RefreshEntriesFromDir(1)<CR>$/;"	m
<LocalLeader>0	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer>          <LocalLeader>0 \\|:call <SID>ListSpawn("")<CR>$/;"	m
<LocalLeader><Down>	project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <LocalLeader><Down> <C-Down>$/;"	m
<LocalLeader><Up>	project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <LocalLeader><Up> <C-Up>$/;"	m
<LocalLeader>C	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>C :call <SID>CreateEntriesFromDir(1)<CR>$/;"	m
<LocalLeader>E	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>E :call <SID>OpenEntry(line('.'), '', 'e', 1)<CR>$/;"	m
<LocalLeader>F0	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer>          <LocalLeader>F0 \\|:call <SID>ListSpawn("_fold")<CR>$/;"	m
<LocalLeader>G	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>G \\|:call <SID>GrepAll(1, line('.'), "")<CR>$/;"	m
<LocalLeader>I	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>I :echo Project_GetFname(line('.'))<CR>$/;"	m
<LocalLeader>L	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>L \\|:call <SID>LoadAll(1, line('.'))<CR>$/;"	m
<LocalLeader>R	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>R :call <SID>RefreshEntriesFromDir(1)<CR>$/;"	m
<LocalLeader>S	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>S \\|:call <SID>LoadAllSplit(0, line('.'))<CR>$/;"	m
<LocalLeader>T	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>T \\|:call <SID>DoFoldOrOpenEntry('', 'tabe')<CR>$/;"	m
<LocalLeader>W	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>W \\|:call <SID>WipeAll(1, line('.'))<CR>$/;"	m
<LocalLeader>c	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>c :call <SID>CreateEntriesFromDir(0)<CR>$/;"	m
<LocalLeader>e	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>e :call <SID>OpenEntry(line('.'), '', '', 0)<CR>$/;"	m
<LocalLeader>f0	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer>          <LocalLeader>f0 \\|:call <SID>ListSpawn("_fold")<CR>$/;"	m
<LocalLeader>g	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>g \\|:call <SID>GrepAll(0, line('.'), "")<CR>$/;"	m
<LocalLeader>i	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>i :echo <SID>RecursivelyConstructDirectives(line('.'))<CR>$/;"	m
<LocalLeader>l	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>l \\|:call <SID>LoadAll(0, line('.'))<CR>$/;"	m
<LocalLeader>o	project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <LocalLeader>o <C-Return>$/;"	m
<LocalLeader>r	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>r :call <SID>RefreshEntriesFromDir(0)<CR>$/;"	m
<LocalLeader>s	project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <LocalLeader>s <S-Return>$/;"	m
<LocalLeader>v	project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <LocalLeader>v <M-CR>$/;"	m
<LocalLeader>w	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>w \\|:call <SID>WipeAll(0, line('.'))<CR>$/;"	m
<M-2-LeftMouse>	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <M-2-LeftMouse> <M-CR>$/;"	m
<M-CR>	project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <M-CR> <Return><C-W>p$/;"	m
<P	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <P :call <SID>putline('[p')<CR><']$/;"	m
<Plug>(a)	vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(a) <C-o>:call <SID>apply_user_input_next('i')<CR>$/;"	m
<Plug>(a)	vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(a) :call <SID>apply_user_input_next('n')<CR>$/;"	m
<Plug>(d)	vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(d) <C-o>:call <SID>detect_bad_input()<CR>$/;"	m
<Plug>(d)	vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(d) :call <SID>detect_bad_input()<CR>$/;"	m
<Plug>(i)	vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(i) <C-o>:call <SID>process_user_input()<CR>$/;"	m
<Plug>(i)	vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(i) :call <SID>process_user_input()<CR>$/;"	m
<Plug>(n)	vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(n) :<C-u>call multiple_cursors#new('v')<CR>$/;"	m
<Plug>(p)	vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(p) :<C-u>call multiple_cursors#prev()<CR>$/;"	m
<Plug>(s)	vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(s) :<C-u>call multiple_cursors#skip()<CR>$/;"	m
<Plug>(w)	vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(w) <C-o>:call <SID>wait_for_user_input('')<CR>$/;"	m
<Plug>(w)	vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(w) :call <SID>wait_for_user_input('')<CR>$/;"	m
<Plug>AlwaysEnd	vim-endwise/plugin/endwise.vim	/^  imap    <script> <Plug>AlwaysEnd        <SID>AlwaysEnd$/;"	m
<Plug>Csurround	vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>DBDescribeProcedure	dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBDescribeProcedure :DBDescribeProcedure<CR>$/;"	m
<Plug>DBDescribeProcedureAskName	dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBDescribeProcedureAskName$/;"	m
<Plug>DBDescribeTable	dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBDescribeTable :DBDescribeTable<CR>$/;"	m
<Plug>DBDescribeTableAskName	dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBDescribeTableAskName$/;"	m
<Plug>DBExecSQL	dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBExecSQL :DBExecSQL<CR>$/;"	m
<Plug>DBExecSQLUnderCursor	dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBExecSQLUnderCursor :DBExecSQLUnderCursor<CR>$/;"	m
<Plug>DBExecSQLUnderTopXCursor	dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBExecSQLUnderTopXCursor :DBExecSQLUnderCursorTopX<CR>$/;"	m
<Plug>DBHistory	dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBHistory :DBHistory<CR>$/;"	m
<Plug>DBListColumn	dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBListColumn :DBListColumn<CR>$/;"	m
<Plug>DBListProcedure	dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBListProcedure$/;"	m
<Plug>DBListTable	dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBListTable$/;"	m
<Plug>DBListView	dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBListView$/;"	m
<Plug>DBOrientationToggle	dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBOrientationToggle :DBOrientationToggle<CR>$/;"	m
<Plug>DBPromptForBufferParameters	dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBPromptForBufferParameters$/;"	m
<Plug>DBSelectFromTable	dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBSelectFromTable :DBSelectFromTable<CR>$/;"	m
<Plug>DBSelectFromTableAskName	dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBSelectFromTableAskName$/;"	m
<Plug>DBSelectFromTableWithWhere	dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBSelectFromTableWithWhere$/;"	m
<Plug>DBSelectFromTopXTable	dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBSelectFromTopXTable :DBSelectFromTableTopX<CR>$/;"	m
<Plug>DiscretionaryEnd	vim-endwise/plugin/endwise.vim	/^  imap    <script> <Plug>DiscretionaryEnd <SID>DiscretionaryEnd$/;"	m
<Plug>Dsurround	vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>ISurround	vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>NERDTreeMirrorOpen	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeMirrorOpen   :call <SID>NERDTreeMirrorOrCreate()$/;"	m
<Plug>NERDTreeMirrorToggle	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeMirrorToggle :call <SID>NERDTreeMirrorToggle()$/;"	m
<Plug>NERDTreeSteppedClose	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeSteppedClose :call <SID>NERDTreeSteppedClose()$/;"	m
<Plug>NERDTreeSteppedOpen	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeSteppedOpen  :call <SID>NERDTreeSteppedOpen()$/;"	m
<Plug>NERDTreeTabsClose	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeTabsClose    :call <SID>NERDTreeCloseAllTabs()$/;"	m
<Plug>NERDTreeTabsOpen	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeTabsOpen     :call <SID>NERDTreeOpenAllTabs()$/;"	m
<Plug>NERDTreeTabsToggle	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeTabsToggle   :call <SID>NERDTreeToggleAllTabs()$/;"	m
<Plug>ProjectOnly	project-1.4.1/plugin/project.vim	/^        nnoremap <script> <Plug>ProjectOnly :call <SID>DoProjectOnly()<CR>$/;"	m
<Plug>ScripteaseFilter	vim-scriptease/plugin/scriptease.vim	/^nnoremap <silent> <Plug>ScripteaseFilter :<C-U>set opfunc=<SID>filterop<CR>g@$/;"	m
<Plug>ScripteaseSynnames	vim-scriptease/plugin/scriptease.vim	/^nnoremap <silent> <Plug>ScripteaseSynnames :<C-U>exe <SID>zS(v:count)<CR>$/;"	m
<Plug>SuperTabBackward	supertab/plugin/supertab.vim	/^  imap <script> <Plug>SuperTabBackward <c-r>=SuperTab('p')<cr>$/;"	m
<Plug>SuperTabForward	supertab/plugin/supertab.vim	/^  imap <script> <Plug>SuperTabForward <c-r>=SuperTab('n')<cr>$/;"	m
<Plug>SurroundRepeat	vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>ToggleBackground	vim-colors-solarized/autoload/togglebg.vim	/^inoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>a$/;"	m
<Plug>ToggleBackground	vim-colors-solarized/autoload/togglebg.vim	/^nnoremap <unique> <script> <Plug>ToggleBackground <SID>TogBG$/;"	m
<Plug>ToggleBackground	vim-colors-solarized/autoload/togglebg.vim	/^vnoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>gv$/;"	m
<Plug>ToggleProject	project-1.4.1/plugin/project.vim	/^nnoremap <script> <Plug>ToggleProject :call <SID>DoToggleProject()<CR>$/;"	m
<Plug>VSurround	vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>$/;"	m
<Plug>VgSurround	vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>$/;"	m
<Plug>YSsurround	vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSsurround :<C-U>call <SID>opfunc2(v:count1)<CR>$/;"	m
<Plug>YSurround	vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSurround  :<C-U>set opfunc=<SID>opfunc2<CR>g@$/;"	m
<Plug>Yssurround	vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Yssurround :<C-U>call <SID>opfunc(v:count1)<CR>$/;"	m
<Plug>Ysurround	vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Ysurround  :<C-U>set opfunc=<SID>opfunc<CR>g@$/;"	m
<Plug>unimpairedBlankDown	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedBlankDown :<C-U>call <SID>BlankDown(v:count1)<CR>$/;"	m
<Plug>unimpairedBlankUp	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedBlankUp   :<C-U>call <SID>BlankUp(v:count1)<CR>$/;"	m
<Plug>unimpairedContextNext	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedContextNext     :call <SID>Context(0)<CR>$/;"	m
<Plug>unimpairedContextNext	vim-unimpaired/plugin/unimpaired.vim	/^onoremap <silent> <Plug>unimpairedContextNext     :call <SID>ContextMotion(0)<CR>$/;"	m
<Plug>unimpairedContextPrevious	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedContextPrevious :call <SID>Context(1)<CR>$/;"	m
<Plug>unimpairedContextPrevious	vim-unimpaired/plugin/unimpaired.vim	/^onoremap <silent> <Plug>unimpairedContextPrevious :call <SID>ContextMotion(1)<CR>$/;"	m
<Plug>unimpairedDirectoryNext	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedDirectoryNext     :<C-U>edit <C-R>=<SID>fnameescape(<SID>FileByOffset(v:count1))<CR><CR>$/;"	m
<Plug>unimpairedDirectoryPrevious	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedDirectoryPrevious :<C-U>edit <C-R>=<SID>fnameescape(<SID>FileByOffset(-v:count1))<CR><CR>$/;"	m
<Plug>unimpairedMoveDown	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedMoveDown :<C-U>call <SID>Move('+',v:count1,'Down')<CR>$/;"	m
<Plug>unimpairedMoveUp	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedMoveUp   :<C-U>call <SID>Move('--',v:count1,'Up')<CR>$/;"	m
<Plug>unimpairedONext	vim-unimpaired/plugin/unimpaired.vim	/^nmap <silent> <Plug>unimpairedONext     <Plug>unimpairedDirectoryNext:echohl WarningMSG<Bar>echo "]o is deprecated. Use ]f"<Bar>echohl NONE<CR>$/;"	m
<Plug>unimpairedOPrevious	vim-unimpaired/plugin/unimpaired.vim	/^nmap <silent> <Plug>unimpairedOPrevious <Plug>unimpairedDirectoryPrevious:echohl WarningMSG<Bar>echo "[o is deprecated. Use [f"<Bar>echohl NONE<CR>$/;"	m
<Plug>unimpairedPaste	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPaste :call <SID>setup_paste()<CR>$/;"	m
<Plug>unimpairedPutAbove	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPutAbove :call <SID>putline('[p')<CR>$/;"	m
<Plug>unimpairedPutBelow	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPutBelow :call <SID>putline(']p')<CR>$/;"	m
<Return>	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <Return>   \\|:call <SID>DoFoldOrOpenEntry('', 'e')<CR>$/;"	m
<RightMouse>	project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <RightMouse>   <space>$/;"	m
<S-2-LeftMouse>	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <S-2-LeftMouse> \\|:call <SID>DoFoldOrOpenEntry('', 'sp')<CR>$/;"	m
<S-LeftMouse>	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <S-LeftMouse>   <LeftMouse>$/;"	m
<S-Return>	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <S-Return> \\|:call <SID>DoFoldOrOpenEntry('', 'sp')<CR>$/;"	m
<SID>AlwaysEnd	vim-endwise/plugin/endwise.vim	/^  inoremap <silent> <SID>AlwaysEnd        <C-R>=<SID>crend(1)<CR>$/;"	m
<SID>DiscretionaryEnd	vim-endwise/plugin/endwise.vim	/^  inoremap <silent> <SID>DiscretionaryEnd <C-R>=<SID>crend(0)<CR>$/;"	m
<SID>TogBG	vim-colors-solarized/autoload/togglebg.vim	/^noremap <SID>TogBG  :call <SID>TogBG()<CR>$/;"	m
<SID>xx	taglist_46/plugin/taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
<SID>xx	vim-rails/autoload/rails.vim	/^map <SID>xx <SID>xx$/;"	m
<c-r><tab>	snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <c-r><tab> <c-r>=ShowAvailableSnips()<cr>$/;"	m
<c-x>	supertab/plugin/supertab.vim	/^  imap <silent> <c-x> <c-r>=<SID>ManualCompletionEnter()<cr>$/;"	m
<cr>	supertab/plugin/supertab.vim	/^      inoremap <silent> <cr> <c-r>=<SID>SelectCompletion(1)<cr>$/;"	m
<leader>rap	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  nnoremap <leader>rap  :RAddParameter<cr>$/;"	m
<leader>rapn	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  nnoremap <leader>rapn :RAddParameterNB<cr>$/;"	m
<leader>rcpc	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  nnoremap <leader>rcpc :RConvertPostConditional<cr>$/;"	m
<leader>rec	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  vnoremap <leader>rec  :RExtractConstant<cr>$/;"	m
<leader>rel	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  nnoremap <leader>rel  :RExtractLet<cr>$/;"	m
<leader>relv	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  vnoremap <leader>relv :RExtractLocalVariable<cr>$/;"	m
<leader>rem	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  vnoremap <leader>rem  :RExtractMethod<cr>$/;"	m
<leader>rit	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  nnoremap <leader>rit  :RInlineTemp<cr>$/;"	m
<leader>riv	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  nnoremap <leader>riv  :RIntroduceVariable<cr>$/;"	m
<leader>rriv	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  vnoremap <leader>rriv :RRenameInstanceVariable<cr>$/;"	m
<leader>rrlv	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  vnoremap <leader>rrlv :RRenameLocalVariable<cr>$/;"	m
<p	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <p :call <SID>putline(']p')<CR><']$/;"	m
<s-tab>	snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <s-tab> <c-r>=BackwardsSnippet()<cr>$/;"	m
<space>	project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <space>  \\|:silent exec 'vertical resize '.(match(g:proj_flags, '\\Ct')!=-1 && winwidth('.') > g:proj_window_width?(g:proj_window_width):(winwidth('.') + g:proj_window_increment))<CR>$/;"	m
<tab>	snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <tab> <c-r>=TriggerSnippet()<cr>$/;"	m
=P	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> =P :call <SID>putline('[p')<CR>=']$/;"	m
=p	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> =p :call <SID>putline(']p')<CR>=']$/;"	m
>P	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> >P :call <SID>putline('[p')<CR>>']$/;"	m
>p	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> >p :call <SID>putline(']p')<CR>>']$/;"	m
AR	command-t/ruby/command-t/Makefile	/^AR = ar$/;"	m
Abbrev	vim-rails/autoload/rails.vim	/^function! s:Abbrev(bang,...) abort$/;"	f
Add	vim-cucumber/syntax/cucumber.vim	/^function! s:Add(name)$/;"	f
AddBracketExpand	vim-rails/autoload/rails.vim	/^function! s:AddBracketExpand(abbr,expn)$/;"	f
AddColonExpand	vim-rails/autoload/rails.vim	/^function! s:AddColonExpand(abbr,expn)$/;"	f
AddModeExtra	tcomment_vim/autoload/tcomment.vim	/^function! s:AddModeExtra(mode, extra, beg, end) "{{{3$/;"	f
AddParameter	vim-ruby-refactoring/plugin/refactorings/general/addparameter.vim	/^function! AddParameter()$/;"	f
AddParameterNB	vim-ruby-refactoring/plugin/refactorings/general/addparameternb.vim	/^function! AddParameterNB()$/;"	f
AddParenExpand	vim-rails/autoload/rails.vim	/^function! s:AddParenExpand(abbr,expn,...)$/;"	f
AddSelectiveExpand	vim-rails/autoload/rails.vim	/^function! s:AddSelectiveExpand(abbr,pat,expn,...)$/;"	f
AddTabExpand	vim-rails/autoload/rails.vim	/^function! s:AddTabExpand(abbr,expn)$/;"	f
AltFiletype	tcomment_vim/autoload/tcomment.vim	/^function! s:AltFiletype(filetype) "{{{3$/;"	f
Alter	dbext_2000/plugin/dbext.vim	/^command! -nargs=+ -complete=customlist,dbext#DB_completeTables Alter             :call dbext#DB_execSql("alter " . <q-args>)$/;"	c
Alternate	vim-rails/autoload/rails.vim	/^function! s:Alternate(cmd,line1,line2,count,...)$/;"	f
Asyncer	vim-l9/autoload/l9/async.py	/^class Asyncer:$/;"	c
AutoUpdate	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>AutoUpdate(curBufNum,force)$/;"	f
BINDIR	command-t/ruby/command-t/Makefile	/^BINDIR        = $(bindir)$/;"	m
BackupDir	vim-ruby/bin/vim-ruby-install.rb	/^  class BackupDir$/;"	c	class:VimRubyInstaller
BackwardsSnippet	snipmate.vim/plugin/snipMate.vim	/^fun! BackwardsSnippet()$/;"	f
BinSearchToAppend	genutils-2.5/autoload/genutils.vim	/^function! s:BinSearchToAppend(start, end, line, cmp, direction)$/;"	f
BinSearchToAppend2	genutils-2.5/autoload/genutils.vim	/^function! s:BinSearchToAppend2(start, end, line, cmp, direction, accessor,$/;"	f
Blame	vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
BlankDown	vim-unimpaired/plugin/unimpaired.vim	/^function! s:BlankDown(count) abort$/;"	f
BlankUp	vim-unimpaired/plugin/unimpaired.vim	/^function! s:BlankUp(count) abort$/;"	f
BlockGetCommentRx	tcomment_vim/autoload/tcomment.vim	/^function! s:BlockGetCommentRx(cdef)$/;"	f
BlockGetCommentString	tcomment_vim/autoload/tcomment.vim	/^function! s:BlockGetCommentString(cdef)$/;"	f
BlockGetMiddleString	tcomment_vim/autoload/tcomment.vim	/^function! s:BlockGetMiddleString(cdef)$/;"	f
Bookmark.AddBookmark	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot)$/;"	f
Bookmark.GetSelected	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name)$/;"	f
Bookmark.Write	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(...)$/;"	f
Bookmark.compareTo	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(...)$/;"	f
Bookmark.openInNewTab	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot()$/;"	f
Bookmark.validate	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
Browse	vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufAbbreviations	vim-rails/autoload/rails.vim	/^function! s:BufAbbreviations()$/;"	f
BufAddHandler	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>BufAddHandler()$/;"	f
BufCommands	vim-rails/autoload/rails.vim	/^function! s:BufCommands()$/;"	f
BufDatabase	vim-rails/autoload/rails.vim	/^function! s:BufDatabase(...)$/;"	f
BufDeleteHandler	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>BufDeleteHandler()$/;"	f
BufEnterHandler	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>BufEnterHandler() abort$/;"	f
BufInit	vim-rails/plugin/rails.vim	/^function! s:BufInit(path)$/;"	f
BufLineAccessor	genutils-2.5/autoload/genutils.vim	/^function! s:BufLineAccessor(line, context)$/;"	f
BufLineMover	genutils-2.5/autoload/genutils.vim	/^function! s:BufLineMover(from, to, context)$/;"	f
BufLineSwapper	genutils-2.5/autoload/genutils.vim	/^function! s:BufLineSwapper(line1, line2, context)$/;"	f
BufMappings	vim-rails/autoload/rails.vim	/^function! s:BufMappings()$/;"	f
BufNavCommands	vim-rails/autoload/rails.vim	/^function! s:BufNavCommands()$/;"	f
BufProjectionCommands	vim-rails/autoload/rails.vim	/^function! s:BufProjectionCommands()$/;"	f
BufReadIndex	vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex()$/;"	f
BufReadIndexFile	vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile()$/;"	f
BufReadObject	vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject()$/;"	f
BufScriptWrappers	vim-rails/autoload/rails.vim	/^function! s:BufScriptWrappers()$/;"	f
BufSettings	vim-rails/autoload/rails.vim	/^function! s:BufSettings()$/;"	f
BufSyntax	vim-rails/autoload/rails.vim	/^function! s:BufSyntax()$/;"	f
BufWinEnterHandler	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:BufWinEnterHandler()$/;"	f
BufWriteIndexFile	vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile()$/;"	f
Buffer	command-t/spec/spec_helper.rb	/^  class Buffer; end$/;"	c
BufferFinder	command-t/ruby/command-t/finder/buffer_finder.rb	/^  class BufferFinder < Finder$/;"	c	class:CommandT
BufferScanner	command-t/ruby/command-t/scanner/buffer_scanner.rb	/^  class BufferScanner < Scanner$/;"	c	class:CommandT
BuildAllBufferDicts	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>BuildAllBufferDicts()$/;"	f
BuildBufferFinalDict	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>BuildBufferFinalDict(arg,deleted)$/;"	f
BuildBufferList	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>BuildBufferList(curBufNum)$/;"	f
BuildBufferPathSignDict	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>BuildBufferPathSignDict(bufnrs, ...)$/;"	f
BuildBufferUniqNameDict	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>BuildBufferUniqNameDict(bufnrs)$/;"	f
BuildTabStops	snipmate.vim/autoload/snipMate.vim	/^fun s:BuildTabStops(snip, lnum, col, indent)$/;"	f
Bundle	vim-bundler/plugin/bundler.vim	/^function! s:Bundle(bang,arg)$/;"	f
BundleComplete	vim-bundler/plugin/bundler.vim	/^function! s:BundleComplete(A,L,P)$/;"	f
CC	command-t/ruby/command-t/Makefile	/^CC = xcrun cc$/;"	m
CFLAGS	command-t/ruby/command-t/Makefile	/^CFLAGS   =  -fno-common -arch i386 -arch x86_64 -g -Os -pipe -fno-common -DENABLE_DTRACE  -fno-common  -pipe -fno-common $(cflags) $/;"	m
CLEANFILES	command-t/ruby/command-t/Makefile	/^CLEANFILES = mkmf.log$/;"	m
CLEANLIBS	command-t/ruby/command-t/Makefile	/^CLEANLIBS     = $(TARGET).bundle $(TARGET).il? $(TARGET).tds $(TARGET).map$/;"	m
CLEANOBJS	command-t/ruby/command-t/Makefile	/^CLEANOBJS     = *.o *.a *.s[ol] *.pdb *.exp *.bak$/;"	m
CMiniBufExplorer	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! CMiniBufExplorer echoe 'CMiniBufExplorer is depreciated, please use MBEClose instead.'$/;"	c
COPY	command-t/ruby/command-t/Makefile	/^COPY = cp$/;"	m
CPPFLAGS	command-t/ruby/command-t/Makefile	/^CPPFLAGS = -DHAVE_RUBY_H  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE $(DEFS) $(cppflags)$/;"	m
CXXFLAGS	command-t/ruby/command-t/Makefile	/^CXXFLAGS = $(CFLAGS) $/;"	m
Call	dbext_2000/plugin/dbext.vim	/^command! -nargs=+ Call              :call dbext#DB_execSql("call " . <q-args>)$/;"	c
CaptureKeyPresses	supertab/plugin/supertab.vim	/^function! s:CaptureKeyPresses() " {{{$/;"	f
Char2Num	genutils-2.5/autoload/genutils.vim	/^function! s:Char2Num(c)$/;"	f
Choose	matchit/plugin/matchit.vim	/^fun! s:Choose(patterns, string, comma, branch, prefix, suffix, ...)$/;"	f
ChooseSnippet	snipmate.vim/plugin/snipMate.vim	/^fun s:ChooseSnippet(scope, trigger)$/;"	f
CleanUp	matchit/plugin/matchit.vim	/^fun! s:CleanUp(options, mode, startline, startcol, ...)$/;"	f
Close	snipmate.vim/ftplugin/html_snip_helper.vim	/^fun! Close()$/;"	f
CloseIfOnlyNerdTreeLeft	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:CloseIfOnlyNerdTreeLeft()$/;"	f
ClosePreview	supertab/plugin/supertab.vim	/^function! s:ClosePreview() " {{{$/;"	f
CommandEdit	vim-rails/autoload/rails.vim	/^function! s:CommandEdit(cmd, name, projections, ...)$/;"	f
CommandLineCompletion	supertab/plugin/supertab.vim	/^function! s:CommandLineCompletion() " {{{$/;"	f
CommandList	vim-rails/autoload/rails.vim	/^function! s:CommandList(A,L,P)$/;"	f
CommandT	command-t/plugin/command-t.vim	/^command -nargs=? -complete=dir CommandT call <SID>CommandTShowFileFinder(<q-args>)$/;"	c
CommandT	command-t/ruby/command-t/controller.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/finder.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/finder/buffer_finder.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/finder/file_finder.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/finder/jump_finder.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/finder/tag_finder.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/match_window.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/prompt.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/scanner.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/scanner/buffer_scanner.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/scanner/file_scanner.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/scanner/jump_scanner.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/scanner/tag_scanner.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/settings.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/stub.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/vim.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/vim/path_utilities.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/vim/screen.rb	/^module CommandT$/;"	m
CommandT	command-t/ruby/command-t/vim/window.rb	/^module CommandT$/;"	m
CommandTAcceptSelection	command-t/plugin/command-t.vim	/^function CommandTAcceptSelection()$/;"	f
CommandTAcceptSelectionSplit	command-t/plugin/command-t.vim	/^function CommandTAcceptSelectionSplit()$/;"	f
CommandTAcceptSelectionTab	command-t/plugin/command-t.vim	/^function CommandTAcceptSelectionTab()$/;"	f
CommandTAcceptSelectionVSplit	command-t/plugin/command-t.vim	/^function CommandTAcceptSelectionVSplit()$/;"	f
CommandTBackspace	command-t/plugin/command-t.vim	/^function CommandTBackspace()$/;"	f
CommandTBuffer	command-t/plugin/command-t.vim	/^command CommandTBuffer call <SID>CommandTShowBufferFinder()$/;"	c
CommandTCancel	command-t/plugin/command-t.vim	/^function CommandTCancel()$/;"	f
CommandTClear	command-t/plugin/command-t.vim	/^function CommandTClear()$/;"	f
CommandTCursorEnd	command-t/plugin/command-t.vim	/^function CommandTCursorEnd()$/;"	f
CommandTCursorLeft	command-t/plugin/command-t.vim	/^function CommandTCursorLeft()$/;"	f
CommandTCursorRight	command-t/plugin/command-t.vim	/^function CommandTCursorRight()$/;"	f
CommandTCursorStart	command-t/plugin/command-t.vim	/^function CommandTCursorStart()$/;"	f
CommandTDelete	command-t/plugin/command-t.vim	/^function CommandTDelete()$/;"	f
CommandTFlush	command-t/plugin/command-t.vim	/^command CommandTFlush call <SID>CommandTFlush()$/;"	c
CommandTFlush	command-t/plugin/command-t.vim	/^function s:CommandTFlush()$/;"	f
CommandTHandleKey	command-t/plugin/command-t.vim	/^function CommandTHandleKey(arg)$/;"	f
CommandTJump	command-t/plugin/command-t.vim	/^command CommandTJump call <SID>CommandTShowJumpFinder()$/;"	c
CommandTMatch_initialize	command-t/ruby/command-t/match.c	/^VALUE CommandTMatch_initialize(int argc, VALUE *argv, VALUE self)$/;"	f
CommandTMatch_matches	command-t/ruby/command-t/match.c	/^VALUE CommandTMatch_matches(VALUE self)$/;"	f
CommandTMatch_to_s	command-t/ruby/command-t/match.c	/^VALUE CommandTMatch_to_s(VALUE self)$/;"	f
CommandTMatcher_initialize	command-t/ruby/command-t/matcher.c	/^VALUE CommandTMatcher_initialize(int argc, VALUE *argv, VALUE self)$/;"	f
CommandTMatcher_matches_for	command-t/ruby/command-t/matcher.c	/^VALUE CommandTMatcher_matches_for(VALUE self, VALUE abbrev)$/;"	f
CommandTMatcher_sorted_matches_for	command-t/ruby/command-t/matcher.c	/^VALUE CommandTMatcher_sorted_matches_for(VALUE self, VALUE abbrev, VALUE options)$/;"	f
CommandTQuickfix	command-t/plugin/command-t.vim	/^function CommandTQuickfix()$/;"	f
CommandTRefresh	command-t/plugin/command-t.vim	/^function CommandTRefresh()$/;"	f
CommandTRubyWarning	command-t/plugin/command-t.vim	/^function s:CommandTRubyWarning()$/;"	f
CommandTSelectNext	command-t/plugin/command-t.vim	/^function CommandTSelectNext()$/;"	f
CommandTSelectPrev	command-t/plugin/command-t.vim	/^function CommandTSelectPrev()$/;"	f
CommandTShowBufferFinder	command-t/plugin/command-t.vim	/^function s:CommandTShowBufferFinder()$/;"	f
CommandTShowFileFinder	command-t/plugin/command-t.vim	/^function s:CommandTShowFileFinder(arg)$/;"	f
CommandTShowJumpFinder	command-t/plugin/command-t.vim	/^function s:CommandTShowJumpFinder()$/;"	f
CommandTShowTagFinder	command-t/plugin/command-t.vim	/^function s:CommandTShowTagFinder()$/;"	f
CommandTTag	command-t/plugin/command-t.vim	/^command CommandTTag call <SID>CommandTShowTagFinder()$/;"	c
CommandTToggleFocus	command-t/plugin/command-t.vim	/^function CommandTToggleFocus()$/;"	f
CommandT_option_from_hash	command-t/ruby/command-t/ext.c	/^VALUE CommandT_option_from_hash(const char *option, VALUE hash)$/;"	f
CommentBlock	tcomment_vim/autoload/tcomment.vim	/^function! s:CommentBlock(beg, end, commentMode, uncomment, checkRx, cdef, indentStr)$/;"	f
CommentDef	tcomment_vim/autoload/tcomment.vim	/^function! s:CommentDef(beg, end, checkRx, commentMode, cstart, cend)$/;"	f
Commit	vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(args) abort$/;"	f
CommitComplete	vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
CompilerSet	vim-cucumber/compiler/cucumber.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	vim-haml/compiler/haml.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	vim-haml/compiler/sass.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	vim-ruby/compiler/eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	vim-ruby/compiler/rake.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	vim-ruby/compiler/rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	vim-ruby/compiler/ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	vim-ruby/compiler/rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
Complete	vim-scriptease/plugin/scriptease.vim	/^function! s:Complete(A,L,P)$/;"	f
Complete_breakadd	vim-scriptease/plugin/scriptease.vim	/^function! s:Complete_breakadd(A, L, P)$/;"	f
Complete_breakdel	vim-scriptease/plugin/scriptease.vim	/^function! s:Complete_breakdel(A, L, P)$/;"	f
Complete_cd	vim-rails/autoload/rails.vim	/^function! s:Complete_cd(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_console	vim-rails/autoload/rails.vim	/^function! s:Complete_console(A,L,P)$/;"	f
Complete_destroy	vim-rails/autoload/rails.vim	/^function! s:Complete_destroy(A,L,P)$/;"	f
Complete_edit	vim-rails/autoload/rails.vim	/^function! s:Complete_edit(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_environments	vim-rails/autoload/rails.vim	/^function! s:Complete_environments(...)$/;"	f
Complete_find	vim-rails/autoload/rails.vim	/^function! s:Complete_find(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_generate	vim-rails/autoload/rails.vim	/^function! s:Complete_generate(A,L,P)$/;"	f
Complete_preview	vim-rails/autoload/rails.vim	/^function! s:Complete_preview(A,L,P)$/;"	f
Complete_related	vim-rails/autoload/rails.vim	/^function! s:Complete_related(A,L,P)$/;"	f
Complete_ruby	vim-rails/autoload/rails.vim	/^function! s:Complete_ruby(A,L,P)$/;"	f
Complete_script	vim-rails/autoload/rails.vim	/^function! s:Complete_script(ArgLead,CmdLine,P)$/;"	f
Complete_server	vim-rails/autoload/rails.vim	/^function! s:Complete_server(A,L,P)$/;"	f
CompletionReset	supertab/plugin/supertab.vim	/^function! s:CompletionReset(char) " {{{$/;"	f
ConstructFromComments	tcomment_vim/autoload/tcomment.vim	/^function! s:ConstructFromComments(commentMode)$/;"	f
ConstructInfo	project-1.4.1/plugin/project.vim	/^    function! s:ConstructInfo(home, c_d, scriptin, scriptout, flags, filter)$/;"	f
Context	vim-unimpaired/plugin/unimpaired.vim	/^function! s:Context(reverse)$/;"	f
ContextCompletion	supertab/plugin/supertab.vim	/^function! s:ContextCompletion() " {{{$/;"	f
ContextDiscover	supertab/plugin/supertab.vim	/^function! s:ContextDiscover() " {{{$/;"	f
ContextMotion	vim-unimpaired/plugin/unimpaired.vim	/^function! s:ContextMotion(reverse)$/;"	f
ContextText	supertab/plugin/supertab.vim	/^function! s:ContextText() " {{{$/;"	f
Controller	command-t/ruby/command-t/controller.rb	/^  class Controller$/;"	c	class:CommandT
ConvertPostConditional	vim-ruby-refactoring/plugin/refactorings/general/postconditional.vim	/^function! ConvertPostConditional()$/;"	f
Copen	vim-dispatch/plugin/dispatch.vim	/^command! -bang Copen call dispatch#copen(<bang>0)$/;"	c
Count	matchit/plugin/matchit.vim	/^fun! s:Count(string, pattern, ...)$/;"	f
Count	snipmate.vim/autoload/snipMate.vim	/^fun s:Count(haystack, needle)$/;"	f
Create	dbext_2000/plugin/dbext.vim	/^command! -nargs=+ Create            :call dbext#DB_execSql("create " . <q-args>)$/;"	c
CreateBufferUniqName	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>CreateBufferUniqName(bufNum)$/;"	f
CreateEntriesFromDir	project-1.4.1/plugin/project.vim	/^    function! s:CreateEntriesFromDir(recursive)$/;"	f
CreateWindow	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>CreateWindow(bufName, vSplit, brSplit, forceEdge, isPluginWindow, doDebug)$/;"	f
Creator.BufNamePrefix	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreatePrimary	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreatePrimary(name)$/;"	f
Creator.CreateSecondary	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateSecondary(dir)$/;"	f
Creator.New	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.TogglePrimary	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.TogglePrimary(dir)$/;"	f
Creator._bindMappings	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createTreeWin	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._nextBufferName	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._setCommonBufOptions	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator.createMirror	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createPrimary	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createPrimary(name)$/;"	f
Creator.createSecondary	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createSecondary(dir)$/;"	f
Creator.togglePrimary	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.togglePrimary(dir)$/;"	f
CucumberComplete	vim-cucumber/ftplugin/cucumber.vim	/^function! CucumberComplete(findstart,base) abort$/;"	f
Cursor.column	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.column() dict$/;"	f
Cursor.line	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.line() dict$/;"	f
Cursor.move	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.move(line, column) dict$/;"	f
Cursor.new	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.new(position)$/;"	f
Cursor.remove_visual_selection	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.remove_visual_selection() dict$/;"	f
Cursor.update_highlight	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_highlight() dict$/;"	f
Cursor.update_line_length	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_line_length() dict$/;"	f
Cursor.update_position	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_position(pos) dict$/;"	f
Cursor.update_visual_selection	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_visual_selection(region) dict$/;"	f
CursorManager.add	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.add(pos, ...) dict$/;"	f
CursorManager.debug	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.debug() dict$/;"	f
CursorManager.delete_current	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.delete_current() dict$/;"	f
CursorManager.get	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.get(i) dict$/;"	f
CursorManager.get_current	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.get_current() dict$/;"	f
CursorManager.initialize	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.initialize() dict$/;"	f
CursorManager.is_empty	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.is_empty() dict$/;"	f
CursorManager.loop_done	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.loop_done() dict$/;"	f
CursorManager.new	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.new()$/;"	f
CursorManager.next	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.next() dict$/;"	f
CursorManager.reapply_visual_selection	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.reapply_visual_selection() dict$/;"	f
CursorManager.remove_highlight	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.remove_highlight(hi_id) dict$/;"	f
CursorManager.reset	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.reset(restore_view, restore_setting) dict$/;"	f
CursorManager.restore_user_settings	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.restore_user_settings() dict$/;"	f
CursorManager.size	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.size() dict$/;"	f
CursorManager.start_loop	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.start_loop() dict$/;"	f
CursorManager.update_current	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.update_current() dict$/;"	f
CustomComplete	vim-rails/autoload/rails.vim	/^function! s:CustomComplete(A,L,P,cmd)$/;"	f
CycleBuffer	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>CycleBuffer(forward,...)$/;"	f
DBCheckModeline	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBCheckModeline$/;"	c
DBCommit	dbext_2000/plugin/dbext.vim	/^command! -nargs=0 DBCommit          :call dbext#DB_commit()$/;"	c
DBCompleteProcedures	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 -bang DBCompleteProcedures$/;"	c
DBCompleteTables	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 -bang DBCompleteTables$/;"	c
DBCompleteViews	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 -bang DBCompleteViews$/;"	c
DBConnect	dbext_2000/plugin/dbext.vim	/^command! -nargs=0 DBConnect         :call dbext#DB_connect()$/;"	c
DBDescribeProcedure	dbext_2000/plugin/dbext.vim	/^    command! -nargs=* -range DBDescribeProcedure$/;"	c
DBDescribeProcedureAskName	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBDescribeProcedureAskName$/;"	c
DBDescribeTable	dbext_2000/plugin/dbext.vim	/^    command! -nargs=* -range DBDescribeTable$/;"	c
DBDescribeTableAskName	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBDescribeTableAskName$/;"	c
DBDisconnect	dbext_2000/plugin/dbext.vim	/^command! -nargs=* DBDisconnect      :call dbext#DB_disconnect(<q-args>)$/;"	c
DBDisconnectAll	dbext_2000/plugin/dbext.vim	/^command! -nargs=* DBDisconnectAll   :call dbext#DB_disconnectAll()$/;"	c
DBExecRangeSQL	dbext_2000/plugin/dbext.vim	/^command! -range -nargs=0 DBExecRangeSQL <line1>,<line2>call dbext#DB_execRangeSql()$/;"	c
DBExecSQL	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBExecSQL$/;"	c
DBExecSQL	dbext_2000/plugin/dbext.vim	/^command! -nargs=+ DBExecSQL         :call dbext#DB_execSql(<q-args>)$/;"	c
DBExecSQLTopX	dbext_2000/plugin/dbext.vim	/^command! -nargs=+ DBExecSQLTopX     :call dbext#DB_execSqlTopX(<q-args>)$/;"	c
DBExecSQLUnderCursor	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBExecSQLUnderCursor$/;"	c
DBExecSQLUnderCursorTopX	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBExecSQLUnderCursorTopX$/;"	c
DBExecVisualSQL	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 -range DBExecVisualSQL :call dbext#DB_execSql(DB_getVisualBlock())$/;"	c
DBExecVisualSQLTopX	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 -range DBExecVisualSQLTopX :call dbext#DB_execSqlTopX(DB_getVisualBlock())$/;"	c
DBGetOption	dbext_2000/plugin/dbext.vim	/^command! -nargs=* -complete=customlist,dbext#DB_completeSettings DBGetOption :echo DB_listOption(<q-args>)$/;"	c
DBGetOption	dbext_2000/plugin/dbext.vim	/^command! -nargs=? DBGetOption       :echo DB_listOption(<q-args>)$/;"	c
DBHistory	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBHistory$/;"	c
DBListColumn	dbext_2000/plugin/dbext.vim	/^    command! -nargs=* DBListColumn$/;"	c
DBListConnections	dbext_2000/plugin/dbext.vim	/^command! -nargs=0 DBListConnections :call dbext#DB_getListConnections()$/;"	c
DBListProcedure	dbext_2000/plugin/dbext.vim	/^    command! -nargs=? DBListProcedure$/;"	c
DBListTable	dbext_2000/plugin/dbext.vim	/^    command! -nargs=? DBListTable$/;"	c
DBListVar	dbext_2000/plugin/dbext.vim	/^command! -nargs=0 DBListVar         :call dbext#DB_sqlVarList()$/;"	c
DBListView	dbext_2000/plugin/dbext.vim	/^    command! -nargs=? DBListView$/;"	c
DBOrientationToggle	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBOrientationToggle$/;"	c
DBPromptForBufferParameters	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBPromptForBufferParameters$/;"	c
DBResultsClose	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBResultsClose$/;"	c
DBResultsOpen	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBResultsOpen$/;"	c
DBResultsRefresh	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBResultsRefresh$/;"	c
DBResultsToggleResize	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBResultsToggleResize$/;"	c
DBRollback	dbext_2000/plugin/dbext.vim	/^command! -nargs=0 DBRollback        :call dbext#DB_rollback()$/;"	c
DBSelectFromTable	dbext_2000/plugin/dbext.vim	/^    command! -nargs=* -range DBSelectFromTable$/;"	c
DBSelectFromTableAskName	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBSelectFromTableAskName$/;"	c
DBSelectFromTableTopX	dbext_2000/plugin/dbext.vim	/^    command! -nargs=* -range DBSelectFromTableTopX$/;"	c
DBSelectFromTableWithWhere	dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBSelectFromTableWithWhere$/;"	c
DBSetOption	dbext_2000/plugin/dbext.vim	/^command! -nargs=* -complete=customlist,dbext#DB_completeSettings DBSetOption :call dbext#DB_setMultipleOptions(<q-args>)$/;"	c
DBSetOption	dbext_2000/plugin/dbext.vim	/^command! -nargs=1 DBSetOption       :call dbext#DB_setMultipleOptions(<q-args>)$/;"	c
DBSetVar	dbext_2000/plugin/dbext.vim	/^command! -nargs=* -complete=customlist,dbext#DB_completeVariable DBSetVar :call dbext#DB_sqlVarAssignment(<bang>0, 'set '.<q-args>)$/;"	c
DBSetVar	dbext_2000/plugin/dbext.vim	/^command! -nargs=1 -bang DBSetVar    :call dbext#DB_sqlVarAssignment(<bang>0, 'set '.<q-args>)$/;"	c
DBVarRangeAssign	dbext_2000/plugin/dbext.vim	/^command! -range -nargs=0 -bang DBVarRangeAssign <line1>,<line2>call dbext#DB_sqlVarRangeAssignment(<bang>0)$/;"	c
DB_ASA_describeProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_describeProcedure(proc_name)$/;"	f
DB_ASA_describeTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_describeTable(table_name)$/;"	f
DB_ASA_execSql	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_execSql(str)$/;"	f
DB_ASA_getDictionaryProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_getDictionaryProcedure() $/;"	f
DB_ASA_getDictionaryTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_getDictionaryTable() $/;"	f
DB_ASA_getDictionaryView	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_getDictionaryView() $/;"	f
DB_ASA_getListColumn	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_getListColumn(table_name) $/;"	f
DB_ASA_getListProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_getListProcedure(proc_prefix)$/;"	f
DB_ASA_getListTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_getListTable(table_prefix)$/;"	f
DB_ASA_getListView	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_getListView(view_prefix)$/;"	f
DB_ASA_stripHeaderFooter	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_stripHeaderFooter(result)$/;"	f
DB_ASE_describeProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_describeProcedure(procedure_name)$/;"	f
DB_ASE_describeTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_describeTable(table_name)$/;"	f
DB_ASE_execSql	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_execSql(str)$/;"	f
DB_ASE_getDictionaryProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_getDictionaryProcedure() "{{{$/;"	f
DB_ASE_getDictionaryTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_getDictionaryTable() "{{{$/;"	f
DB_ASE_getDictionaryView	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_getDictionaryView() "{{{$/;"	f
DB_ASE_getListColumn	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_getListColumn(table_name) "{{{$/;"	f
DB_ASE_getListProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_getListProcedure(proc_prefix)$/;"	f
DB_ASE_getListTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_getListTable(table_prefix)$/;"	f
DB_ASE_getListView	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_getListView(view_prefix)$/;"	f
DB_ASE_stripHeaderFooter	dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_stripHeaderFooter(result) "{{{$/;"	f
DB_DB2_describeProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_describeProcedure(procedure_name)$/;"	f
DB_DB2_describeTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_describeTable(table_name)$/;"	f
DB_DB2_execSql	dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_execSql(str)$/;"	f
DB_DB2_getDictionaryProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_getDictionaryProcedure()$/;"	f
DB_DB2_getDictionaryTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_getDictionaryTable()$/;"	f
DB_DB2_getDictionaryView	dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_getDictionaryView() $/;"	f
DB_DB2_getListColumn	dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_getListColumn(table_name) $/;"	f
DB_DB2_getListProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_getListProcedure(proc_prefix)$/;"	f
DB_DB2_getListTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_getListTable(table_prefix)$/;"	f
DB_DB2_getListView	dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_getListView(view_prefix)$/;"	f
DB_DB2_stripHeaderFooter	dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_stripHeaderFooter(result) $/;"	f
DB_DBI_Autoload	dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_Autoload()$/;"	f
DB_DBI_describeProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_describeProcedure(procedure_name)$/;"	f
DB_DBI_describeTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_describeTable(table_name)$/;"	f
DB_DBI_execSql	dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_execSql(str)$/;"	f
DB_DBI_execStr	dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_execStr(str)$/;"	f
DB_DBI_getDictionaryProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_getDictionaryProcedure() "{{{$/;"	f
DB_DBI_getDictionaryTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_getDictionaryTable() "{{{$/;"	f
DB_DBI_getDictionaryView	dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_getDictionaryView() "{{{$/;"	f
DB_DBI_getListColumn	dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_getListColumn(table_name)$/;"	f
DB_DBI_getListProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_getListProcedure(proc_prefix)$/;"	f
DB_DBI_getListTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_getListTable(table_prefix)$/;"	f
DB_DBI_getListView	dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_getListView(view_prefix)$/;"	f
DB_DBI_setOption	dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_setOption(option_name, value) "{{{$/;"	f
DB_DBI_stripHeaderFooter	dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_stripHeaderFooter(result)$/;"	f
DB_DictionaryCreate	dbext_2000/plugin/dbext.vim	/^function! DB_DictionaryCreate( drop_dict, which ) $/;"	f
DB_DictionaryDelete	dbext_2000/autoload/dbext.vim	/^function! s:DB_DictionaryDelete( which ) "{{{$/;"	f
DB_FIREBIRD_describeProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_describeProcedure(procedure_name)$/;"	f
DB_FIREBIRD_describeTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_describeTable(table_name)$/;"	f
DB_FIREBIRD_execSql	dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_execSql(str)$/;"	f
DB_FIREBIRD_getDictionaryProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_getDictionaryProcedure() "{{{$/;"	f
DB_FIREBIRD_getDictionaryTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_getDictionaryTable() "{{{$/;"	f
DB_FIREBIRD_getDictionaryView	dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_getDictionaryView() "{{{$/;"	f
DB_FIREBIRD_getListColumn	dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_getListColumn(table_name) "{{{$/;"	f
DB_FIREBIRD_getListProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_getListProcedure(proc_prefix)$/;"	f
DB_FIREBIRD_getListTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_getListTable(table_prefix)$/;"	f
DB_FIREBIRD_getListView	dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_getListView(view_prefix)$/;"	f
DB_FIREBIRD_stripHeaderFooter	dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_stripHeaderFooter(result) "{{{$/;"	f
DB_HANA_describeProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_describeProcedure(proc_name)$/;"	f
DB_HANA_describeTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_describeTable(table_name)$/;"	f
DB_HANA_execSql	dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_execSql(str)$/;"	f
DB_HANA_getDictionaryProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_getDictionaryProcedure() $/;"	f
DB_HANA_getDictionaryTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_getDictionaryTable() $/;"	f
DB_HANA_getDictionaryView	dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_getDictionaryView() $/;"	f
DB_HANA_getListColumn	dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_getListColumn(table_name) $/;"	f
DB_HANA_getListProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_getListProcedure(proc_prefix)$/;"	f
DB_HANA_getListTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_getListTable(table_prefix)$/;"	f
DB_HANA_getListView	dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_getListView(view_prefix)$/;"	f
DB_HANA_stripHeaderFooter	dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_stripHeaderFooter(result)$/;"	f
DB_INGRES_describeProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_describeProcedure(procedure_name)$/;"	f
DB_INGRES_describeTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_describeTable(table_name)$/;"	f
DB_INGRES_execSql	dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_execSql(str)$/;"	f
DB_INGRES_getDictionaryProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_getDictionaryProcedure() $/;"	f
DB_INGRES_getDictionaryTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_getDictionaryTable() $/;"	f
DB_INGRES_getDictionaryView	dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_getDictionaryView() $/;"	f
DB_INGRES_getListColumn	dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_getListColumn(table_name) $/;"	f
DB_INGRES_getListProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_getListProcedure(proc_prefix)$/;"	f
DB_INGRES_getListTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_getListTable(table_prefix)$/;"	f
DB_INGRES_getListView	dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_getListView(view_prefix)$/;"	f
DB_INGRES_stripHeaderFooter	dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_stripHeaderFooter(result)$/;"	f
DB_INTERBASE_describeProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_describeProcedure(procedure_name)$/;"	f
DB_INTERBASE_describeTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_describeTable(table_name)$/;"	f
DB_INTERBASE_execSql	dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_execSql(str)$/;"	f
DB_INTERBASE_getDictionaryProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_getDictionaryProcedure() $/;"	f
DB_INTERBASE_getDictionaryTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_getDictionaryTable() $/;"	f
DB_INTERBASE_getDictionaryView	dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_getDictionaryView() $/;"	f
DB_INTERBASE_getListColumn	dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_getListColumn(table_name) $/;"	f
DB_INTERBASE_getListProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_getListProcedure(proc_prefix)$/;"	f
DB_INTERBASE_getListTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_getListTable(table_prefix)$/;"	f
DB_INTERBASE_getListView	dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_getListView(view_prefix)$/;"	f
DB_INTERBASE_stripHeaderFooter	dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_stripHeaderFooter(result)$/;"	f
DB_MYSQL_describeProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_describeProcedure(procedure_name)$/;"	f
DB_MYSQL_describeTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_describeTable(table_name)$/;"	f
DB_MYSQL_execSql	dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_execSql(str)$/;"	f
DB_MYSQL_getDictionaryProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_getDictionaryProcedure() "{{{$/;"	f
DB_MYSQL_getDictionaryTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_getDictionaryTable() "{{{$/;"	f
DB_MYSQL_getDictionaryView	dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_getDictionaryView() "{{{$/;"	f
DB_MYSQL_getListColumn	dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_getListColumn(table_name) "{{{$/;"	f
DB_MYSQL_getListProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_getListProcedure(proc_prefix)$/;"	f
DB_MYSQL_getListTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_getListTable(table_prefix)$/;"	f
DB_MYSQL_getListView	dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_getListView(view_prefix)$/;"	f
DB_MYSQL_stripHeaderFooter	dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_stripHeaderFooter(result) "{{{$/;"	f
DB_ODBC_describeProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_describeProcedure(procedure_name)$/;"	f
DB_ODBC_describeTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_describeTable(table_name)$/;"	f
DB_ODBC_execSql	dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_execSql(str)$/;"	f
DB_ODBC_getDictionaryProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_getDictionaryProcedure() "{{{$/;"	f
DB_ODBC_getDictionaryTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_getDictionaryTable() "{{{$/;"	f
DB_ODBC_getDictionaryView	dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_getDictionaryView() "{{{$/;"	f
DB_ODBC_getListColumn	dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_getListColumn(table_name)$/;"	f
DB_ODBC_getListProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_getListProcedure(proc_prefix)$/;"	f
DB_ODBC_getListTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_getListTable(table_prefix)$/;"	f
DB_ODBC_getListView	dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_getListView(view_prefix)$/;"	f
DB_ODBC_stripHeaderFooter	dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_stripHeaderFooter(result)$/;"	f
DB_ORA_describeProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_describeProcedure(procedure_name)$/;"	f
DB_ORA_describeTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_describeTable(table_name)$/;"	f
DB_ORA_execSql	dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_execSql(str)$/;"	f
DB_ORA_getDictionaryProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_getDictionaryProcedure() "{{{$/;"	f
DB_ORA_getDictionaryTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_getDictionaryTable() "{{{$/;"	f
DB_ORA_getDictionaryView	dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_getDictionaryView() "{{{$/;"	f
DB_ORA_getListColumn	dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_getListColumn(table_name) "{{{$/;"	f
DB_ORA_getListProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_getListProcedure(proc_prefix)$/;"	f
DB_ORA_getListTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_getListTable(table_prefix)$/;"	f
DB_ORA_getListView	dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_getListView(view_prefix)$/;"	f
DB_ORA_stripHeaderFooter	dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_stripHeaderFooter(result) "{{{$/;"	f
DB_PGSQL_check_pgpass	dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_check_pgpass()$/;"	f
DB_PGSQL_describeProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_describeProcedure(procedure_name)$/;"	f
DB_PGSQL_describeTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_describeTable(table_name)$/;"	f
DB_PGSQL_execSql	dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_execSql(str)$/;"	f
DB_PGSQL_getDictionaryProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_getDictionaryProcedure() $/;"	f
DB_PGSQL_getDictionaryTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_getDictionaryTable() $/;"	f
DB_PGSQL_getDictionaryView	dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_getDictionaryView() $/;"	f
DB_PGSQL_getListColumn	dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_getListColumn(table_name) $/;"	f
DB_PGSQL_getListProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_getListProcedure(proc_prefix)$/;"	f
DB_PGSQL_getListTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_getListTable(table_prefix)$/;"	f
DB_PGSQL_getListView	dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_getListView(view_prefix)$/;"	f
DB_PGSQL_stripHeaderFooter	dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_stripHeaderFooter(result)$/;"	f
DB_RDB_describeProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_describeProcedure(procedure_name) "{{{$/;"	f
DB_RDB_describeTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_describeTable(table_name) "{{{$/;"	f
DB_RDB_execSql	dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_execSql(str) "{{{$/;"	f
DB_RDB_getDictionaryProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_getDictionaryProcedure() "{{{$/;"	f
DB_RDB_getDictionaryTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_getDictionaryTable() "{{{$/;"	f
DB_RDB_getDictionaryView	dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_getDictionaryView() "{{{$/;"	f
DB_RDB_getListColumn	dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_getListColumn(table_name) "{{{$/;"	f
DB_RDB_getListProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_getListProcedure(proc_prefix) "{{{$/;"	f
DB_RDB_getListTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_getListTable(table_prefix) "{{{$/;"	f
DB_RDB_getListView	dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_getListView(view_prefix) "{{{$/;"	f
DB_RDB_stripHeaderFooter	dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_stripHeaderFooter(result) "{{{$/;"	f
DB_SQLITE_describeProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_describeProcedure(procedure_name)$/;"	f
DB_SQLITE_describeTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_describeTable(table_name)$/;"	f
DB_SQLITE_execSql	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_execSql(str)$/;"	f
DB_SQLITE_getDictionaryProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_getDictionaryProcedure() $/;"	f
DB_SQLITE_getDictionaryTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_getDictionaryTable()$/;"	f
DB_SQLITE_getDictionaryView	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_getDictionaryView()$/;"	f
DB_SQLITE_getListColumn	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_getListColumn(table_name)$/;"	f
DB_SQLITE_getListProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_getListProcedure(proc_prefix)$/;"	f
DB_SQLITE_getListTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_getListTable(table_prefix)$/;"	f
DB_SQLITE_getListView	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_getListView(view_prefix)$/;"	f
DB_SQLITE_stripHeaderFooter	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_stripHeaderFooter(result)$/;"	f
DB_SQLSRV_describeProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_describeProcedure(procedure_name)$/;"	f
DB_SQLSRV_describeTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_describeTable(table_name)$/;"	f
DB_SQLSRV_execSql	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_execSql(str)$/;"	f
DB_SQLSRV_getDictionaryProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_getDictionaryProcedure() "{{{$/;"	f
DB_SQLSRV_getDictionaryTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_getDictionaryTable() "{{{$/;"	f
DB_SQLSRV_getDictionaryView	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_getDictionaryView() "{{{$/;"	f
DB_SQLSRV_getListColumn	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_getListColumn(table_name)$/;"	f
DB_SQLSRV_getListProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_getListProcedure(proc_prefix)$/;"	f
DB_SQLSRV_getListTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_getListTable(table_prefix)$/;"	f
DB_SQLSRV_getListView	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_getListView(view_prefix)$/;"	f
DB_SQLSRV_stripHeaderFooter	dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_stripHeaderFooter(result)$/;"	f
DB_ULTRALITE_describeProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_describeProcedure(proc_name)$/;"	f
DB_ULTRALITE_describeTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_describeTable(table_name)$/;"	f
DB_ULTRALITE_execSql	dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_execSql(str)$/;"	f
DB_ULTRALITE_getDictionaryProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_getDictionaryProcedure() $/;"	f
DB_ULTRALITE_getDictionaryTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_getDictionaryTable() $/;"	f
DB_ULTRALITE_getDictionaryView	dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_getDictionaryView() $/;"	f
DB_ULTRALITE_getListColumn	dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_getListColumn(table_name) $/;"	f
DB_ULTRALITE_getListProcedure	dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_getListProcedure(proc_prefix)$/;"	f
DB_ULTRALITE_getListTable	dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_getListTable(table_prefix)$/;"	f
DB_ULTRALITE_getListView	dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_getListView(view_prefix)$/;"	f
DB_ULTRALITE_stripHeaderFooter	dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_stripHeaderFooter(result)$/;"	f
DB_addBufDictList	dbext_2000/autoload/dbext.vim	/^function! s:DB_addBufDictList( buf_nbr ) "{{{$/;"	f
DB_addToResultBuffer	dbext_2000/autoload/dbext.vim	/^function! s:DB_addToResultBuffer(output, do_clear)$/;"	f
DB_buildLists	dbext_2000/autoload/dbext.vim	/^function! s:DB_buildLists()$/;"	f
DB_delBufDictList	dbext_2000/autoload/dbext.vim	/^function! s:DB_delBufDictList( buf_nbr ) "{{{$/;"	f
DB_errorMsg	dbext_2000/autoload/dbext.vim	/^function! s:DB_errorMsg(msg)$/;"	f
DB_escapeStr	dbext_2000/autoload/dbext.vim	/^function! s:DB_escapeStr(value)$/;"	f
DB_execCmd	dbext_2000/plugin/dbext.vim	/^function! DB_execCmd(name, ...)$/;"	f
DB_fullPath2Bin	dbext_2000/autoload/dbext.vim	/^function! s:DB_fullPath2Bin(executable_name) $/;"	f
DB_get	dbext_2000/autoload/dbext.vim	/^function! s:DB_get(name, ...)$/;"	f
DB_getCommentChars	dbext_2000/autoload/dbext.vim	/^function! s:DB_getCommentChars()$/;"	f
DB_getDefault	dbext_2000/autoload/dbext.vim	/^function! s:DB_getDefault(name)$/;"	f
DB_getDictionaryName	dbext_2000/plugin/dbext.vim	/^function! DB_getDictionaryName( which ) $/;"	f
DB_getInput	dbext_2000/autoload/dbext.vim	/^function! s:DB_getInput(prompt, default_value, cancel_value)$/;"	f
DB_getListColumn	dbext_2000/plugin/dbext.vim	/^function! DB_getListColumn(...) $/;"	f
DB_getLoginScript	dbext_2000/autoload/dbext.vim	/^function! s:DB_getLoginScript(filename)$/;"	f
DB_getObjectAndQuote	dbext_2000/autoload/dbext.vim	/^function! s:DB_getObjectAndQuote(object) "{{{ $/;"	f
DB_getObjectName	dbext_2000/autoload/dbext.vim	/^function! s:DB_getObjectName(object) "{{{ $/;"	f
DB_getObjectOwner	dbext_2000/autoload/dbext.vim	/^function! s:DB_getObjectOwner(object) "{{{$/;"	f
DB_getParameters	dbext_2000/autoload/dbext.vim	/^function! s:DB_getParameters(scope)$/;"	f
DB_getTblAlias	dbext_2000/autoload/dbext.vim	/^function! s:DB_getTblAlias(table_name) $/;"	f
DB_getTitle	dbext_2000/autoload/dbext.vim	/^function! s:DB_getTitle() $/;"	f
DB_getVisualBlock	dbext_2000/plugin/dbext.vim	/^function! DB_getVisualBlock() range$/;"	f
DB_historyAdd	dbext_2000/autoload/dbext.vim	/^function! s:DB_historyAdd(sql)$/;"	f
DB_historyDel	dbext_2000/autoload/dbext.vim	/^function! s:DB_historyDel(line)$/;"	f
DB_historyOpen	dbext_2000/autoload/dbext.vim	/^function! s:DB_historyOpen()$/;"	f
DB_historySave	dbext_2000/autoload/dbext.vim	/^function! s:DB_historySave(auto_hide)$/;"	f
DB_historyUse	dbext_2000/autoload/dbext.vim	/^function! s:DB_historyUse(line)$/;"	f
DB_listOption	dbext_2000/plugin/dbext.vim	/^function! DB_listOption(...) $/;"	f
DB_option	dbext_2000/autoload/dbext.vim	/^function! s:DB_option(param, value, separator)$/;"	f
DB_pad	dbext_2000/autoload/dbext.vim	/^function! s:DB_pad(side, length, value)$/;"	f
DB_parseHostVariables	dbext_2000/autoload/dbext.vim	/^function! s:DB_parseHostVariables(query)$/;"	f
DB_parseJProperties	dbext_2000/autoload/dbext.vim	/^function! s:DB_parseJProperties(query)$/;"	f
DB_parseJava	dbext_2000/autoload/dbext.vim	/^function! s:DB_parseJava(query)$/;"	f
DB_parsePHP	dbext_2000/autoload/dbext.vim	/^function! s:DB_parsePHP(query)$/;"	f
DB_parsePerl	dbext_2000/autoload/dbext.vim	/^function! s:DB_parsePerl(query)$/;"	f
DB_parseProfile	dbext_2000/autoload/dbext.vim	/^function! s:DB_parseProfile(value)$/;"	f
DB_parseSQL	dbext_2000/autoload/dbext.vim	/^function! s:DB_parseSQL(query)$/;"	f
DB_parseVB	dbext_2000/autoload/dbext.vim	/^function! s:DB_parseVB(query)$/;"	f
DB_parseVim	dbext_2000/autoload/dbext.vim	/^function! s:DB_parseVim(query)$/;"	f
DB_promptForParameters	dbext_2000/autoload/dbext.vim	/^function! s:DB_promptForParameters(...)$/;"	f
DB_removeEmptyLines	dbext_2000/autoload/dbext.vim	/^function! s:DB_removeEmptyLines(sql)$/;"	f
DB_resBufName	dbext_2000/autoload/dbext.vim	/^function! s:DB_resBufName()$/;"	f
DB_resetBufferParameters	dbext_2000/autoload/dbext.vim	/^function! s:DB_resetBufferParameters(use_defaults)$/;"	f
DB_resetGlobalParameters	dbext_2000/autoload/dbext.vim	/^function! s:DB_resetGlobalParameters()$/;"	f
DB_restoreConnParameters	dbext_2000/autoload/dbext.vim	/^function! s:DB_restoreConnParameters()$/;"	f
DB_runCmd	dbext_2000/autoload/dbext.vim	/^function! s:DB_runCmd(cmd, sql, result)$/;"	f
DB_saveConnParameters	dbext_2000/autoload/dbext.vim	/^function! s:DB_saveConnParameters()$/;"	f
DB_saveSize	dbext_2000/autoload/dbext.vim	/^function! s:DB_saveSize(buf_name)$/;"	f
DB_searchReplace	dbext_2000/autoload/dbext.vim	/^function! s:DB_searchReplace(str, exp_find_str, exp_get_value, count_matches)$/;"	f
DB_set	dbext_2000/autoload/dbext.vim	/^function! s:DB_set(name, value)$/;"	f
DB_setGlobal	dbext_2000/autoload/dbext.vim	/^function! s:DB_setGlobal(name, value)$/;"	f
DB_setWType	dbext_2000/autoload/dbext.vim	/^function! s:DB_setWType(name, value)$/;"	f
DB_sqlVarInit	dbext_2000/autoload/dbext.vim	/^function! s:DB_sqlVarInit()$/;"	f
DB_sqlVarRemoveTemp	dbext_2000/autoload/dbext.vim	/^function! s:DB_sqlVarRemoveTemp()$/;"	f
DB_sqlVarSet	dbext_2000/autoload/dbext.vim	/^function! s:DB_sqlVarSet(name, value, temporary)$/;"	f
DB_sqlVarSubstitute	dbext_2000/autoload/dbext.vim	/^function! s:DB_sqlVarSubstitute(sql)$/;"	f
DB_stripComments	dbext_2000/autoload/dbext.vim	/^function! s:DB_stripComments(mdl_options)$/;"	f
DB_stripLeadFollowQuotesSpace	dbext_2000/autoload/dbext.vim	/^function! s:DB_stripLeadFollowQuotesSpace(str)$/;"	f
DB_stripLeadFollowSpaceLines	dbext_2000/autoload/dbext.vim	/^function! s:DB_stripLeadFollowSpaceLines(str)$/;"	f
DB_switchToBuffer	dbext_2000/autoload/dbext.vim	/^function! s:DB_switchToBuffer(buf_name, buf_file, get_buf_nr_name)$/;"	f
DB_validateBufferParameters	dbext_2000/autoload/dbext.vim	/^function! s:DB_validateBufferParameters()$/;"	f
DB_varToString	dbext_2000/autoload/dbext.vim	/^function! s:DB_varToString(name)$/;"	f
DB_warningMsg	dbext_2000/autoload/dbext.vim	/^function! s:DB_warningMsg(msg)$/;"	f
DEBUG	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>DEBUG(msg, level)$/;"	f
DEFFILE	command-t/ruby/command-t/Makefile	/^DEFFILE = $/;"	m
DEFS	command-t/ruby/command-t/Makefile	/^DEFS     = $/;"	m
DISTCLEANFILES	command-t/ruby/command-t/Makefile	/^DISTCLEANFILES = $/;"	m
DLDFLAGS	command-t/ruby/command-t/Makefile	/^DLDFLAGS = $(ldflags) $(dldflags) $(archflag)$/;"	m
DLLIB	command-t/ruby/command-t/Makefile	/^DLLIB = $(TARGET).bundle$/;"	m
DefRuby	vim-ruby/autoload/rubycomplete.vim	/^function! s:DefRuby()$/;"	f
DefaultValue	tcomment_vim/autoload/tcomment.vim	/^function! s:DefaultValue(option)$/;"	f
DefineSnips	snipmate.vim/plugin/snipMate.vim	/^fun s:DefineSnips(dir, aliasft, realft)$/;"	f
Delete	dbext_2000/plugin/dbext.vim	/^command! -nargs=+ -complete=customlist,dbext#DB_completeTables Delete            :call dbext#DB_execSql("delete " . <q-args>)$/;"	c
DeleteBuffer	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>DeleteBuffer(action,bang,...)$/;"	f
DetachBuffer	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>DetachBuffer(bufNum)$/;"	f
Detect	vim-bundler/plugin/bundler.vim	/^function! s:Detect(path)$/;"	f
Detect	vim-rails/plugin/rails.vim	/^function! s:Detect(filename)$/;"	f
Detect	vim-rake/plugin/rake.vim	/^function! s:Detect(path)$/;"	f
Diff	vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(bang,...)$/;"	f
DirComplete	vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
DirComplete	vim-rake/plugin/rake.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
Disarm	vim-scriptease/plugin/scriptease.vim	/^command! -bang -bar -nargs=* -complete=customlist,s:Complete Disarm$/;"	c
Dispatch	vim-dispatch/plugin/dispatch.vim	/^command! -bang -nargs=* -complete=custom,dispatch#command_complete Dispatch$/;"	c
DispatchComplete	vim-dispatch/plugin/dispatch.vim	/^function! DispatchComplete(id)$/;"	f
DisplayBuffers	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>DisplayBuffers(curBufNum)$/;"	f
DisplayInfo	project-1.4.1/plugin/project.vim	/^    function! s:DisplayInfo()$/;"	f
DoEnsurePlacementSize_au	project-1.4.1/plugin/project.vim	/^    function! s:DoEnsurePlacementSize_au()$/;"	f
DoEntryFromDir	project-1.4.1/plugin/project.vim	/^    function! s:DoEntryFromDir(recursive, line, name, absolute_dir, dir, c_d, filter_directive, filter, foldlev, sort)$/;"	f
DoFoldOrOpenEntry	project-1.4.1/plugin/project.vim	/^    function! s:DoFoldOrOpenEntry(cmd0, cmd1)$/;"	f
DoProjectOnly	project-1.4.1/plugin/project.vim	/^        function! s:DoProjectOnly()$/;"	f
DoReplacements	tcomment_vim/autoload/tcomment.vim	/^function! s:DoReplacements(text, tokens, replacements) "{{{3$/;"	f
DoSetup	project-1.4.1/plugin/project.vim	/^    function! s:DoSetup()$/;"	f
DoSetupAndSplit	project-1.4.1/plugin/project.vim	/^    function! s:DoSetupAndSplit()$/;"	f
DoSetupAndSplit_au	project-1.4.1/plugin/project.vim	/^    function! s:DoSetupAndSplit_au()$/;"	f
DoToggleProject	project-1.4.1/plugin/project.vim	/^    function! s:DoToggleProject()$/;"	f
Drop	dbext_2000/plugin/dbext.vim	/^command! -nargs=+ -complete=customlist,dbext#DB_completeTables Drop              :call dbext#DB_execSql("drop " . <q-args>)$/;"	c
EXEEXT	command-t/ruby/command-t/Makefile	/^EXEEXT = $/;"	m
EXTSTATIC	command-t/ruby/command-t/Makefile	/^EXTSTATIC = $/;"	m
Edit	vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
Edit	vim-rails/autoload/rails.vim	/^function! s:Edit(count,cmd,...)$/;"	f
Edit	vim-rake/plugin/rake.vim	/^function! s:Edit(cmd,bang,file)$/;"	f
EditComplete	vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditRunComplete	vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
EnableLongestEnhancement	supertab/plugin/supertab.vim	/^function! s:EnableLongestEnhancement() " {{{$/;"	f
EncodeCommentPart	tcomment_vim/autoload/tcomment.vim	/^function! s:EncodeCommentPart(string)$/;"	f
EndColRx	tcomment_vim/autoload/tcomment.vim	/^function! s:EndColRx(pos)$/;"	f
EndLineRx	tcomment_vim/autoload/tcomment.vim	/^function! s:EndLineRx(pos)$/;"	f
EndPosRx	tcomment_vim/autoload/tcomment.vim	/^function! s:EndPosRx(mode, line, col)$/;"	f
Env	vim-ruby/bin/vim-ruby-install.rb	/^class Env$/;"	c
ErrMsg	vim-ruby/autoload/rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
ExecWinCmdNoEa	genutils-2.5/autoload/genutils.vim	/^function! s:ExecWinCmdNoEa(winCmd)$/;"	f
ExecuteInTree	vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
Executor	vim-l9/autoload/l9/async.py	/^class Executor:$/;"	c
ExpandMap	supertab/plugin/supertab.vim	/^function! s:ExpandMap(map) " {{{$/;"	f
ExtendCDef	tcomment_vim/autoload/tcomment.vim	/^function! s:ExtendCDef(beg, end, commentMode, cdef, args)$/;"	f
ExtraBrackets	vim-ruby/indent/ruby.vim	/^function s:ExtraBrackets(lnum)$/;"	f
Extract	vim-rails/autoload/rails.vim	/^function! s:Extract(bang,...) range abort$/;"	f
ExtractCommentsPart	tcomment_vim/autoload/tcomment.vim	/^function! s:ExtractCommentsPart(key)$/;"	f
ExtractConstant	vim-ruby-refactoring/plugin/refactorings/general/extractconstant.vim	/^function! ExtractConstant()$/;"	f
ExtractIntoRspecLet	vim-ruby-refactoring/plugin/refactorings/general/rspec_extractlet.vim	/^function! ExtractIntoRspecLet()$/;"	f
ExtractLocalVariable	vim-ruby-refactoring/plugin/refactorings/general/extractvariable.vim	/^function! ExtractLocalVariable()$/;"	f
ExtractMethod	vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! ExtractMethod() range$/;"	f
ExtractSnips	snipmate.vim/plugin/snipMate.vim	/^fun! ExtractSnips(dir, ft)$/;"	f
ExtractSnipsFile	snipmate.vim/plugin/snipMate.vim	/^fun! ExtractSnipsFile(file, ft)$/;"	f
FileByOffset	vim-unimpaired/plugin/unimpaired.vim	/^function! s:FileByOffset(num)$/;"	f
FileFinder	command-t/ruby/command-t/finder/file_finder.rb	/^  class FileFinder < Finder$/;"	c	class:CommandT
FileLimitExceeded	command-t/ruby/command-t/scanner/file_scanner.rb	/^    class FileLimitExceeded < ::RuntimeError; end$/;"	c	class:CommandT.FileScanner
FileRead	vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead()$/;"	f
FileScanner	command-t/ruby/command-t/scanner/file_scanner.rb	/^  class FileScanner < Scanner$/;"	c	class:CommandT
FileWriter	vim-ruby/bin/vim-ruby-install.rb	/^class FileWriter$/;"	c
Filename	snipmate.vim/autoload/snipMate.vim	/^fun! Filename(...)$/;"	f
Filetype	tcomment_vim/autoload/tcomment.vim	/^function! s:Filetype(...) "{{{3$/;"	f
Find	vim-rails/autoload/rails.vim	/^function! s:Find(count,cmd,...)$/;"	f
FindBufferForName	genutils-2.5/autoload/genutils.vim	/^function! s:FindBufferForName(fileName)$/;"	f
FindBundlerRoot	vim-bundler/plugin/bundler.vim	/^function! s:FindBundlerRoot(path) abort$/;"	f
FindCreateWindow	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>FindCreateWindow(bufName, vSplit, brSplit, forceEdge, isPluginWindow, doDebug)$/;"	f
FindFoldBottom	project-1.4.1/plugin/project.vim	/^    function! s:FindFoldBottom(line)$/;"	f
FindFoldTop	project-1.4.1/plugin/project.vim	/^    function! s:FindFoldTop(line)$/;"	f
FindWindow	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>FindWindow(bufName, doDebug)$/;"	f
Finder	command-t/ruby/command-t/finder.rb	/^  class Finder$/;"	c	class:CommandT
FinishCommit	vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit()$/;"	f
FocusDispatch	vim-dispatch/plugin/dispatch.vim	/^command! -bang -nargs=* -complete=custom,dispatch#command_complete FocusDispatch$/;"	c
FocusExplorer	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>FocusExplorer()$/;"	f
Foo	vim-ruby-refactoring/test/testcases.rb	/^class Foo$/;"	c
Formatter	command-t/spec/vim_formatter.rb	/^    module Formatter$/;"	m	class:Spec.Runner
FufGlobal	FuzzyFinder/autoload/fuf.vim	/^augroup FufGlobal$/;"	a
GF	vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GUDebugEcho	genutils-2.5/autoload/genutils.vim	/^command! -complete=file -nargs=* GUDebugEcho :echo <q-args>$/;"	c
GenerateEntry	project-1.4.1/plugin/project.vim	/^    function! s:GenerateEntry(recursive, line, name, absolute_dir, dir, c_d, filter_directive, filter, foldlev, sort)$/;"	f
GetActiveBuffer	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>GetActiveBuffer()$/;"	f
GetBufferRubyClass	vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
GetBufferRubyEntity	vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
GetBufferRubyModule	vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
GetBufferRubySingletonMethods	vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
GetCd	project-1.4.1/plugin/project.vim	/^    function! s:GetCd(info, home)$/;"	f
GetCommentDefinition	tcomment_vim/autoload/tcomment.vim	/^function! s:GetCommentDefinition(beg, end, commentMode, ...)$/;"	f
GetCommentDefinitionForType	tcomment_vim/autoload/tcomment.vim	/^function! s:GetCommentDefinitionForType(beg, end, commentMode, filetype) "{{{3$/;"	f
GetCommentReplace	tcomment_vim/autoload/tcomment.vim	/^function! s:GetCommentReplace(cdef, cms0)$/;"	f
GetCucumberIndent	vim-cucumber/indent/cucumber.vim	/^function! GetCucumberIndent()$/;"	f
GetCustomCommentString	tcomment_vim/autoload/tcomment.vim	/^function! s:GetCustomCommentString(ft, commentMode, ...)$/;"	f
GetErubyIndent	vim-ruby/indent/eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetFilter	project-1.4.1/plugin/project.vim	/^    function! s:GetFilter(info, parent_filter)$/;"	f
GetFlags	project-1.4.1/plugin/project.vim	/^    function! s:GetFlags(info)$/;"	f
GetHamlIndent	vim-haml/indent/haml.vim	/^function! GetHamlIndent()$/;"	f
GetHome	project-1.4.1/plugin/project.vim	/^    function! s:GetHome(info, parent_home)$/;"	f
GetIndentString	tcomment_vim/autoload/tcomment.vim	/^function! s:GetIndentString(line, start)$/;"	f
GetMSL	vim-ruby/indent/ruby.vim	/^function s:GetMSL(lnum)$/;"	f
GetNextWinnrInStack	genutils-2.5/autoload/genutils.vim	/^function! s:GetNextWinnrInStack(dir)$/;"	f
GetRubyIndent	vim-ruby/indent/ruby.vim	/^function GetRubyIndent(...)$/;"	f
GetRubyVarType	vim-ruby/autoload/rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
GetSassIndent	vim-haml/indent/sass.vim	/^function! GetSassIndent()$/;"	f
GetScriptin	project-1.4.1/plugin/project.vim	/^    function! s:GetScriptin(info, home)$/;"	f
GetScriptout	project-1.4.1/plugin/project.vim	/^    function! s:GetScriptout(info, home)$/;"	f
GetSelectedBuffer	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>GetSelectedBuffer()$/;"	f
GetSnippet	snipmate.vim/plugin/snipMate.vim	/^fun s:GetSnippet(word, scope)$/;"	f
GetSnippets	snipmate.vim/plugin/snipMate.vim	/^fun! GetSnippets(dir, filetypes)$/;"	f
GetStartEnd	tcomment_vim/autoload/tcomment.vim	/^function! s:GetStartEnd(beg, end, commentMode) "{{{3$/;"	f
GetSyntaxName	tcomment_vim/autoload/tcomment.vim	/^function! s:GetSyntaxName(lnum, col) "{{{3$/;"	f
GetWinDim	genutils-2.5/autoload/genutils.vim	/^function! s:GetWinDim(dir, win)$/;"	f
Git	vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang,cmd) abort$/;"	f
GitComplete	vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A,L,P) abort$/;"	f
Grep	vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
GrepAll	project-1.4.1/plugin/project.vim	/^    function! s:GrepAll(recurse, lineno, pattern)$/;"	f
GuessCommentMode	tcomment_vim/autoload/tcomment.vim	/^function! s:GuessCommentMode(commentMode) "{{{3$/;"	f
GuessCurrentCommentString	tcomment_vim/autoload/tcomment.vim	/^function! s:GuessCurrentCommentString(commentMode)$/;"	f
GuessFileType	tcomment_vim/autoload/tcomment.vim	/^function! s:GuessFileType(beg, end, commentMode, filetype, ...)$/;"	f
HasEligibleBuffers	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>HasEligibleBuffers()$/;"	f
HiDefaults	vim-rails/autoload/rails.vim	/^function! s:HiDefaults()$/;"	f
INCFLAGS	command-t/ruby/command-t/Makefile	/^INCFLAGS = -I. -I$(topdir) -I$(hdrdir) -I$(srcdir)$/;"	m
INSTALL	command-t/ruby/command-t/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	command-t/ruby/command-t/Makefile	/^INSTALL_DATA = $(INSTALL) -m 644$/;"	m
INSTALL_PROG	command-t/ruby/command-t/Makefile	/^INSTALL_PROG = $(INSTALL) -m 0755$/;"	m
IfFocusOnStartup	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IfFocusOnStartup()$/;"	f
Init	supertab/plugin/supertab.vim	/^function! s:Init() " {{{$/;"	f
InitBuffer	supertab/plugin/supertab.vim	/^function! s:InitBuffer() " {{{$/;"	f
Init_ext	command-t/ruby/command-t/ext.c	/^void Init_ext()$/;"	f
InlineReplacement	tcomment_vim/autoload/tcomment.vim	/^function! s:InlineReplacement(text, rx, tokens, replacements) "{{{3$/;"	f
InlineTemp	vim-ruby-refactoring/plugin/refactorings/general/inlinetemp.vim	/^function! InlineTemp()$/;"	f
Insert	dbext_2000/plugin/dbext.vim	/^command! -nargs=+ -complete=customlist,dbext#DB_completeTables Insert            :call dbext#DB_execSql("insert " . <q-args>)$/;"	c
InsertRefs	matchit/plugin/matchit.vim	/^fun! s:InsertRefs(groupBR, prefix, group, suffix, matchline)$/;"	f
IntroduceVariable	vim-ruby-refactoring/plugin/refactorings/general/introducevariable.vim	/^function! IntroduceVariable()$/;"	f
Invert	vim-rails/autoload/rails.vim	/^function! s:Invert(bang)$/;"	f
InvokeFuncs	genutils-2.5/autoload/genutils.vim	/^function! s:InvokeFuncs(funcList)$/;"	f
IsAbsolutePath	project-1.4.1/plugin/project.vim	/^    function! s:IsAbsolutePath(path)$/;"	f
IsBufferIgnored	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>IsBufferIgnored(buf)$/;"	f
IsBundlerProject	vim-bundler/plugin/bundler.vim	/^function! s:IsBundlerProject()$/;"	f
IsCurrentWindowNERDTree	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IsCurrentWindowNERDTree()$/;"	f
IsInClassDef	vim-ruby/autoload/rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
IsInString	vim-ruby/indent/ruby.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInStringDelimiter	vim-ruby/indent/ruby.vim	/^function s:IsInStringDelimiter(lnum, col)$/;"	f
IsInStringOrComment	vim-ruby/indent/ruby.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrDocumentation	vim-ruby/indent/ruby.vim	/^function s:IsInStringOrDocumentation(lnum, col)$/;"	f
IsNERDTreeOpenInCurrentTab	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IsNERDTreeOpenInCurrentTab()$/;"	f
IsNERDTreePresentInCurrentTab	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IsNERDTreePresentInCurrentTab()$/;"	f
IsPosInClassDef	vim-ruby/autoload/rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
IsPreviewOpen	supertab/plugin/supertab.vim	/^function! s:IsPreviewOpen() " {{{$/;"	f
JumpFinder	command-t/ruby/command-t/finder/jump_finder.rb	/^  class JumpFinder < Finder$/;"	c	class:CommandT
JumpInit	vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit() abort$/;"	f
JumpScanner	command-t/ruby/command-t/scanner/jump_scanner.rb	/^  class JumpScanner < Scanner$/;"	c	class:CommandT
KeyMap.Add	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
L9Assert	vim-l9/plugin/l9.vim	/^  command -nargs=* L9Assert :$/;"	c
L9Assert	vim-l9/plugin/l9.vim	/^  command -nargs=* L9Assert call eval((<args>) ? 0 : s:handleFailedAssersion(<q-args>))$/;"	c
L9GrepBuffer	vim-l9/plugin/l9.vim	/^command -nargs=? L9GrepBuffer    call l9#grepBuffers(<q-args>, [bufnr('%')])$/;"	c
L9GrepBufferAll	vim-l9/plugin/l9.vim	/^command -nargs=? L9GrepBufferAll call l9#grepBuffers(<q-args>, range(1, bufnr('$')))$/;"	c
L9Timer	vim-l9/plugin/l9.vim	/^  command -nargs=1 L9Timer :$/;"	c
L9Timer	vim-l9/plugin/l9.vim	/^  command -nargs=1 L9Timer call s:timerBegin(<q-args>)$/;"	c
L9TimerDump	vim-l9/plugin/l9.vim	/^  command -nargs=0 L9TimerDump :$/;"	c
L9TimerDump	vim-l9/plugin/l9.vim	/^  command -nargs=0 L9TimerDump call s:timerDump()$/;"	c
L9TimerStop	vim-l9/plugin/l9.vim	/^  command -nargs=0 L9TimerStop :$/;"	c
L9TimerStop	vim-l9/plugin/l9.vim	/^  command -nargs=0 L9TimerStop call s:timerStop()$/;"	c
LDSHARED	command-t/ruby/command-t/Makefile	/^LDSHARED = cc -arch i386 -arch x86_64 -pipe -bundle -undefined dynamic_lookup$/;"	m
LIBPATH	command-t/ruby/command-t/Makefile	/^LIBPATH =  -L. -L$(libdir)$/;"	m
LIBRUBY	command-t/ruby/command-t/Makefile	/^LIBRUBY = $(LIBRUBY_SO)$/;"	m
LIBRUBYARG_SHARED	command-t/ruby/command-t/Makefile	/^LIBRUBYARG_SHARED = -l$(RUBY_SO_NAME)$/;"	m
LIBRUBYARG_STATIC	command-t/ruby/command-t/Makefile	/^LIBRUBYARG_STATIC = -l$(RUBY_SO_NAME)$/;"	m
LIBRUBY_A	command-t/ruby/command-t/Makefile	/^LIBRUBY_A = lib$(RUBY_SO_NAME)-static.a$/;"	m
LIBS	command-t/ruby/command-t/Makefile	/^LIBS = $(LIBRUBYARG_SHARED)  -lpthread -ldl -lobjc  $/;"	m
LOCAL_LIBS	command-t/ruby/command-t/Makefile	/^LOCAL_LIBS = $/;"	m
LegacyCommandEdit	vim-rails/autoload/rails.vim	/^function! s:LegacyCommandEdit(cmd,name,target,prefix,suffix)$/;"	f
ListAdd	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>ListAdd(list,val)$/;"	f
ListPop	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>ListPop(list,val)$/;"	f
ListPush	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>ListPush(list,val)$/;"	f
ListSpawn	project-1.4.1/plugin/project.vim	/^    function! s:ListSpawn(varnamesegment)$/;"	f
LoadAll	project-1.4.1/plugin/project.vim	/^    function! s:LoadAll(recurse, line)$/;"	f
LoadAllSplit	project-1.4.1/plugin/project.vim	/^    function! s:LoadAllSplit(recurse, line)$/;"	f
LoadPlugin	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:LoadPlugin()$/;"	f
Log	vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd,...)$/;"	f
Log	vim-rails/autoload/rails.vim	/^function! s:Log(bang,arg)$/;"	f
MAKEDIRS	command-t/ruby/command-t/Makefile	/^MAKEDIRS = mkdir -p$/;"	m
MBEClose	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang MBEClose     let t:skipEligibleBuffersCheck = 0 | call <SID>StopExplorer('<bang>' == '!')$/;"	c
MBECloseAll	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang MBECloseAll  tabdo let t:skipEligibleBuffersCheck = 0 | call <SID>StopExplorer('<bang>' == '!') | let s:TabsMBEState = 0$/;"	c
MBEDeleteBuffer	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>MBEDeleteBuffer()$/;"	f
MBEFocus	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! MBEFocus           call <SID>FocusExplorer()$/;"	c
MBEFocusAll	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! MBEFocusAll        tabdo call <SID>FocusExplorer()$/;"	c
MBEOpen	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang MBEOpen      let t:skipEligibleBuffersCheck = 1 | if '<bang>' == '!' | call <SID>StopExplorer(0) | endif | call <SID>StartExplorer(bufnr("%"))$/;"	c
MBEOpenAll	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang MBEOpenAll   tabdo let t:skipEligibleBuffersCheck = 1 | if '<bang>' == '!' | call <SID>StopExplorer(0) | endif | call <SID>StartExplorer(bufnr("%")) | let s:TabsMBEState = 1$/;"	c
MBESelectBuffer	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>MBESelectBuffer(split)$/;"	f
MBEToggle	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang MBEToggle    call <SID>ToggleExplorer(0,'<bang>'=='!')$/;"	c
MBEToggleAll	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang MBEToggleAll call <SID>ToggleExplorer(1,'<bang>'=='!')$/;"	c
MBEToggleMRU	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang MBEToggleMRU       call <SID>ToggleMRU()$/;"	c
MBEToggleMRUAll	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang MBEToggleMRUAll    tabdo call <SID>ToggleMRU()$/;"	c
MBEbb	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! MBEbb call <SID>CycleBuffer(0,1)$/;"	c
MBEbd	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang -nargs=* MBEbd call <SID>DeleteBuffer(0,'<bang>'=='!',<f-args>)$/;"	c
MBEbf	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! MBEbf call <SID>CycleBuffer(1,1)$/;"	c
MBEbn	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! MBEbn call <SID>CycleBuffer(1)$/;"	c
MBEbp	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! MBEbp call <SID>CycleBuffer(0)$/;"	c
MBEbun	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang -nargs=* MBEbun call <SID>DeleteBuffer(2,'<bang>'=='!',<f-args>)$/;"	c
MBEbw	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang -nargs=* MBEbw call <SID>DeleteBuffer(1,'<bang>'=='!',<f-args>)$/;"	c
MRU	mru.vim/plugin/mru.vim	/^command! -nargs=? -complete=customlist,s:MRU_Complete MRU$/;"	c
MRUCmp	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>MRUCmp(tab1, tab2)$/;"	f
MRU_AddFile	mru.vim/plugin/mru.vim	/^function! s:MRU_AddFile(acmd_bufnr)$/;"	f
MRU_Add_Menu	mru.vim/plugin/mru.vim	/^    let MRU_Add_Menu = 1$/;"	v
MRU_Auto_Close	mru.vim/plugin/mru.vim	/^    let MRU_Auto_Close = 1$/;"	v
MRU_Cmd	mru.vim/plugin/mru.vim	/^function! s:MRU_Cmd(pat)$/;"	f
MRU_Complete	mru.vim/plugin/mru.vim	/^function! s:MRU_Complete(ArgLead, CmdLine, CursorPos)$/;"	f
MRU_Edit_File	mru.vim/plugin/mru.vim	/^function! s:MRU_Edit_File(filename, sanitized)$/;"	f
MRU_Exclude_Files	mru.vim/plugin/mru.vim	/^    let MRU_Exclude_Files = ''$/;"	v
MRU_File	mru.vim/plugin/mru.vim	/^                let MRU_File = $USERPROFILE . '\\_vim_mru_files'$/;"	v
MRU_File	mru.vim/plugin/mru.vim	/^        let MRU_File = $HOME . '\/.vim_mru_files'$/;"	v
MRU_File	mru.vim/plugin/mru.vim	/^        let MRU_File = $VIM . '\/_vim_mru_files'$/;"	v
MRU_Include_Files	mru.vim/plugin/mru.vim	/^    let MRU_Include_Files = ''$/;"	v
MRU_LoadList	mru.vim/plugin/mru.vim	/^function! s:MRU_LoadList()$/;"	f
MRU_Max_Entries	mru.vim/plugin/mru.vim	/^    let MRU_Max_Entries = 100$/;"	v
MRU_Max_Menu_Entries	mru.vim/plugin/mru.vim	/^    let MRU_Max_Menu_Entries = 10$/;"	v
MRU_Max_Submenu_Entries	mru.vim/plugin/mru.vim	/^    let MRU_Max_Submenu_Entries = 10$/;"	v
MRU_Open_File_In_Tab	mru.vim/plugin/mru.vim	/^function! s:MRU_Open_File_In_Tab(fname, esc_fname)$/;"	f
MRU_Open_File_Use_Tabs	mru.vim/plugin/mru.vim	/^    let MRU_Open_File_Use_Tabs = 0$/;"	v
MRU_Open_Window	mru.vim/plugin/mru.vim	/^function! s:MRU_Open_Window(...)$/;"	f
MRU_Refresh_Menu	mru.vim/plugin/mru.vim	/^function! s:MRU_Refresh_Menu()$/;"	f
MRU_SaveList	mru.vim/plugin/mru.vim	/^function! s:MRU_SaveList()$/;"	f
MRU_Select_File_Cmd	mru.vim/plugin/mru.vim	/^function! s:MRU_Select_File_Cmd(opt) range$/;"	f
MRU_Use_Current_Window	mru.vim/plugin/mru.vim	/^    let MRU_Use_Current_Window = 0$/;"	v
MRU_Warn_Msg	mru.vim/plugin/mru.vim	/^function! s:MRU_Warn_Msg(msg)$/;"	f
MRU_Window_Edit_File	mru.vim/plugin/mru.vim	/^function! s:MRU_Window_Edit_File(fname, multi, edit_type, open_type)$/;"	f
MRU_Window_Height	mru.vim/plugin/mru.vim	/^    let MRU_Window_Height = 8$/;"	v
MRU_Window_Open_Always	mru.vim/plugin/mru.vim	/^    let MRU_Window_Open_Always = 0$/;"	v
MRU_add_files_to_menu	mru.vim/plugin/mru.vim	/^function! s:MRU_add_files_to_menu(prefix, file_list)$/;"	f
MRU_escape_filename	mru.vim/plugin/mru.vim	/^function! s:MRU_escape_filename(fname)$/;"	f
Make	vim-dispatch/plugin/dispatch.vim	/^command! -bang -nargs=* -complete=file Make$/;"	c
MakeSnip	snipmate.vim/plugin/snipMate.vim	/^fun! MakeSnip(scope, trigger, content, ...)$/;"	f
ManualCompletionEnter	supertab/plugin/supertab.vim	/^function! s:ManualCompletionEnter() " {{{$/;"	f
MapNextFamily	vim-unimpaired/plugin/unimpaired.vim	/^function! s:MapNextFamily(map,cmd)$/;"	f
Match	genutils-2.5/autoload/genutils.vim	/^function! s:Match(expr, pat, start)$/;"	f
Match	vim-ruby/indent/ruby.vim	/^function s:Match(lnum, regex)$/;"	f
MatchDebug	matchit/plugin/matchit.vim	/^  command! -nargs=0 MatchDebug call s:Match_debug()$/;"	c
MatchLast	vim-ruby/indent/ruby.vim	/^function s:MatchLast(lnum, regex)$/;"	f
MatchWindow	command-t/ruby/command-t/match_window.rb	/^  class MatchWindow$/;"	c	class:CommandT
Match_debug	matchit/plugin/matchit.vim	/^fun! s:Match_debug()$/;"	f
Match_wrapper	matchit/plugin/matchit.vim	/^function! s:Match_wrapper(word, forward, mode) range$/;"	f
MenuController.New	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
MiniBufExpl	minibufexpl.vim/plugin/minibufexpl.vim	/^augroup MiniBufExpl$/;"	a
MiniBufExplorer	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! MiniBufExplorer echoe 'MiniBufExplorer is depreciated, please use MBEOpen instead.'$/;"	c
Move	vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination)$/;"	f
Move	vim-unimpaired/plugin/unimpaired.vim	/^function! s:Move(cmd, count, map) abort$/;"	f
MoveComplete	vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P)$/;"	f
MoveDown	project-1.4.1/plugin/project.vim	/^    function! s:MoveDown()$/;"	f
MoveUp	project-1.4.1/plugin/project.vim	/^    function! s:MoveUp()$/;"	f
Mru	mru.vim/plugin/mru.vim	/^command! -nargs=? -complete=customlist,s:MRU_Complete Mru$/;"	c
MultiMatch	matchit/plugin/matchit.vim	/^fun! s:MultiMatch(spflag, mode)$/;"	f
MultipleCursorsFind	vim-multiple-cursors/plugin/multiple_cursors.vim	/^command! -nargs=1 -range=% MultipleCursorsFind $/;"	c
NERDTree	nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree	nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTree :call g:NERDTreeCreator.CreatePrimary('<args>')$/;"	c
NERDTreeAddKeyMap	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddSubmenu	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeCWD call NERDTreeCWD()$/;"	c
NERDTreeCWD	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeClose	nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeClose :call nerdtree#closeTreeIfOpen()$/;"	c
NERDTreeCloseAllTabs	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeCloseAllTabs()$/;"	f
NERDTreeCopyNode	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeFind	nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFind call nerdtree#findAndRevealPath()$/;"	c
NERDTreeFocus	nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFocus call NERDTreeFocus()$/;"	c
NERDTreeFocus	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeFocus	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeFocus()$/;"	f
NERDTreeFromBookmark	nerdtree/plugin/NERD_tree.vim	/^command! -n=1 -complete=customlist,nerdtree#completeBookmarks -bar NERDTreeFromBookmark call g:NERDTreeCreator.CreatePrimary('<args>')$/;"	c
NERDTreeHijackNetrw	nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeMirror	nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeMirror call g:NERDTreeCreator.CreateMirror()$/;"	c
NERDTreeMirrorOpen	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeMirrorOpen   call <SID>NERDTreeMirrorOrCreate()$/;"	c
NERDTreeMirrorOrCreate	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeMirrorOrCreate()$/;"	f
NERDTreeMirrorToggle	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeMirrorToggle call <SID>NERDTreeMirrorToggle()$/;"	c
NERDTreeMirrorToggle	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeMirrorToggle()$/;"	f
NERDTreeMoveNode	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeOpenAllTabs	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeOpenAllTabs()$/;"	f
NERDTreeQuickLook	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRestoreFocus	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeRestoreFocus()$/;"	f
NERDTreeRevealInFinder	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeSteppedClose	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeSteppedClose call <SID>NERDTreeSteppedClose()$/;"	c
NERDTreeSteppedClose	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeSteppedClose()$/;"	f
NERDTreeSteppedOpen	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeSteppedOpen  call <SID>NERDTreeSteppedOpen()$/;"	c
NERDTreeSteppedOpen	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeSteppedOpen()$/;"	f
NERDTreeTabsClose	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeTabsClose    call <SID>NERDTreeCloseAllTabs()$/;"	c
NERDTreeTabsOpen	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeTabsOpen     call <SID>NERDTreeOpenAllTabs()$/;"	c
NERDTreeTabsToggle	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeTabsToggle   call <SID>NERDTreeToggleAllTabs()$/;"	c
NERDTreeToggle	nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTreeToggle :call g:NERDTreeCreator.TogglePrimary('<args>')$/;"	c
NERDTreeToggleAllTabs	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeToggleAllTabs()$/;"	f
NERDTreeUnfocus	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeUnfocus()$/;"	f
NameCmp	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>NameCmp(tab1, tab2)$/;"	f
Navcommand	vim-rails/autoload/rails.vim	/^function! s:Navcommand(bang,...)$/;"	f
NextNormalWindow	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>NextNormalWindow()$/;"	f
NextNormalWindow	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NextNormalWindow()$/;"	f
OBJS	command-t/ruby/command-t/Makefile	/^OBJS = ext.o match.o matcher.o$/;"	m
Open	vim-bundler/plugin/bundler.vim	/^function! s:Open(cmd,gem,lcd)$/;"	f
OpenComplete	vim-bundler/plugin/bundler.vim	/^function! s:OpenComplete(A,L,P)$/;"	f
OpenEntry	project-1.4.1/plugin/project.vim	/^    function! s:OpenEntry(line, precmd, editcmd, dir)$/;"	f
OpenEntry2	project-1.4.1/plugin/project.vim	/^    function! s:OpenEntry2(line, infoline, fname, editcmd)$/;"	f
Opener.New	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._checkToCloseTree	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._gotoTargetWin	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._newSplit	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
PP	vim-scriptease/plugin/scriptease.vim	/^command! -bang -range=999998 -nargs=1 -complete=expression PP$/;"	c
PPmsg	vim-scriptease/plugin/scriptease.vim	/^command! -bang -range=0      -nargs=1 -complete=expression PPmsg$/;"	c
ParseArgs	tcomment_vim/autoload/tcomment.vim	/^function! s:ParseArgs(beg, end, commentMode, arglist) "{{{3$/;"	f
ParseSkip	matchit/plugin/matchit.vim	/^fun! s:ParseSkip(str)$/;"	f
ParseWords	matchit/plugin/matchit.vim	/^fun! s:ParseWords(groups)$/;"	f
Path.AbsolutePathFor	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(path)$/;"	f
Path.Resolve	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.Slash	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._ignorePatternMatches	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._str	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString()$/;"	f
Path.changeToDir	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.delete	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortOrderIndex	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore()$/;"	f
Path.isUnder	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.isUnixHiddenFile	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh()$/;"	f
Path.rename	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
PathUtilities	command-t/ruby/command-t/vim/path_utilities.rb	/^    module PathUtilities$/;"	m	class:CommandT.VIM
PersistentVarName	genutils-2.5/autoload/genutils.vim	/^function! s:PersistentVarName(pluginName, persistentVar)$/;"	f
PrevNonBlankNonString	vim-ruby/indent/ruby.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
Preview	vim-rails/autoload/rails.vim	/^function! s:Preview(bang, lnum, uri) abort$/;"	f
ProcessFile	snipmate.vim/plugin/snipMate.vim	/^fun s:ProcessFile(file, ft, ...)$/;"	f
ProcessLine	tcomment_vim/autoload/tcomment.vim	/^function! s:ProcessLine(uncomment, match, checkRx, replace)$/;"	f
ProcessSnippet	snipmate.vim/autoload/snipMate.vim	/^fun s:ProcessSnippet(snip)$/;"	f
Project	project-1.4.1/plugin/project.vim	/^    command -nargs=? -complete=file Project call <SID>Project('<args>')$/;"	c
Project	project-1.4.1/plugin/project.vim	/^function! s:Project(filename) " <<<$/;"	f
Project_ForEach	project-1.4.1/plugin/project.vim	/^    function! Project_ForEach(recurse, lineno, cmd, data, match)$/;"	f
Project_ForEachR	project-1.4.1/plugin/project.vim	/^    function! s:Project_ForEachR(recurse, lineno, info, cmd, data, match)$/;"	f
Project_GetAllFnames	project-1.4.1/plugin/project.vim	/^    function! Project_GetAllFnames(recurse, lineno, separator)$/;"	f
Project_GetFname	project-1.4.1/plugin/project.vim	/^    function! Project_GetFname(line)$/;"	f
Prompt	command-t/ruby/command-t/prompt.rb	/^  class Prompt$/;"	c	class:CommandT
QSortR	genutils-2.5/autoload/genutils.vim	/^function! s:QSortR(start, end, cmp, direction, accessor, swapper, context)$/;"	f
Queue	vim-l9/autoload/l9/async.py	/^import Queue$/;"	i
QuickFixCmdPostMake	vim-bundler/plugin/bundler.vim	/^function! s:QuickFixCmdPostMake()$/;"	f
QuickFixCmdPreMake	vim-bundler/plugin/bundler.vim	/^function! s:QuickFixCmdPreMake()$/;"	f
QuitIfLastOpen	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>QuitIfLastOpen() abort$/;"	f
R	vim-rake/plugin/rake.vim	/^function! s:R(cmd,bang,...) abort$/;"	f
RARRAY_LEN	command-t/ruby/command-t/ruby_compat.h	/^#define RARRAY_LEN(/;"	d
RARRAY_PTR	command-t/ruby/command-t/ruby_compat.h	/^#define RARRAY_PTR(/;"	d
RAddParameter	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! RAddParameter                  call AddParameter()$/;"	c
RAddParameterNB	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! RAddParameterNB                call AddParameterNB()$/;"	c
RComplete	vim-rake/plugin/rake.vim	/^function! s:RComplete(A,L,P) abort$/;"	f
RConvertPostConditional	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! RConvertPostConditional        call ConvertPostConditional()$/;"	c
RExtractConstant	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! -range RExtractConstant        call ExtractConstant()$/;"	c
RExtractLet	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! RExtractLet                    call ExtractIntoRspecLet()$/;"	c
RExtractLocalVariable	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! -range RExtractLocalVariable   call ExtractLocalVariable()$/;"	c
RExtractMethod	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! -range RExtractMethod          call ExtractMethod()$/;"	c
RFLOAT_VALUE	command-t/ruby/command-t/ruby_compat.h	/^#define RFLOAT_VALUE(/;"	d
RInlineTemp	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! RInlineTemp                    call InlineTemp()$/;"	c
RIntroduceVariable	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! RIntroduceVariable             call IntroduceVariable()$/;"	c
RM	command-t/ruby/command-t/Makefile	/^RM = rm -f$/;"	m
RRenameInstanceVariable	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! -range RRenameInstanceVariable call RenameInstanceVariable()$/;"	c
RRenameLocalVariable	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! -range RRenameLocalVariable    call RenameLocalVariable()$/;"	c
RSTRING_LEN	command-t/ruby/command-t/ruby_compat.h	/^#define RSTRING_LEN(/;"	d
RSTRING_PTR	command-t/ruby/command-t/ruby_compat.h	/^#define RSTRING_PTR(/;"	d
RUBY	command-t/ruby/command-t/Makefile	/^RUBY = $(ruby)$/;"	m
RUBYARCHDIR	command-t/ruby/command-t/Makefile	/^RUBYARCHDIR   = $(sitearchdir)$(target_prefix)$/;"	m
RUBYCOMMONDIR	command-t/ruby/command-t/Makefile	/^RUBYCOMMONDIR = $(sitedir)$(target_prefix)$/;"	m
RUBYLIBDIR	command-t/ruby/command-t/Makefile	/^RUBYLIBDIR    = $(sitelibdir)$(target_prefix)$/;"	m
RUBY_EXTCONF_H	command-t/ruby/command-t/Makefile	/^RUBY_EXTCONF_H = $/;"	m
RUBY_INSTALL_NAME	command-t/ruby/command-t/Makefile	/^RUBY_INSTALL_NAME = ruby$/;"	m
RUBY_SO_NAME	command-t/ruby/command-t/Makefile	/^RUBY_SO_NAME = ruby$/;"	m
Rails	vim-rails/plugin/rails.vim	/^command! -bar -bang -nargs=* -complete=dir Rails :if s:autoload()|execute rails#new_app_command(<bang>0,<f-args>)|endif$/;"	c
RailsBufInit	vim-rails/autoload/rails.vim	/^function! RailsBufInit(path)$/;"	f
RailsFile	vim-rails/autoload/rails.vim	/^function! RailsFile()$/;"	f
RailsFilePath	vim-rails/autoload/rails.vim	/^function! RailsFilePath()$/;"	f
RailsFileType	vim-rails/autoload/rails.vim	/^function! RailsFileType()$/;"	f
RailsFind	vim-rails/autoload/rails.vim	/^function! s:RailsFind()$/;"	f
RailsIncludeexpr	vim-rails/autoload/rails.vim	/^function! RailsIncludeexpr()$/;"	f
RailsIncludefind	vim-rails/autoload/rails.vim	/^function! s:RailsIncludefind(str,...)$/;"	f
RailsNamedRoutes	vim-rails/autoload/rails.vim	/^function! RailsNamedRoutes()$/;"	f
RailsRevision	vim-rails/autoload/rails.vim	/^function! RailsRevision()$/;"	f
RailsRoot	vim-rails/autoload/rails.vim	/^function! RailsRoot()$/;"	f
Rake	vim-rails/autoload/rails.vim	/^function! s:Rake(bang,lnum,arg)$/;"	f
Rake	vim-rake/plugin/rake.vim	/^function! s:Rake(bang,arg)$/;"	f
RakeComplete	vim-rake/plugin/rake.vim	/^function! s:RakeComplete(A,L,P)$/;"	f
RecordPrevBuffer_au	project-1.4.1/plugin/project.vim	/^    function! s:RecordPrevBuffer_au()$/;"	f
RecursivelyConstructDirectives	project-1.4.1/plugin/project.vim	/^    function! s:RecursivelyConstructDirectives(lineno)$/;"	f
Ref	matchit/plugin/matchit.vim	/^fun! s:Ref(string, d, ...)$/;"	f
Refresh	vim-rails/autoload/rails.vim	/^function! s:Refresh(bang)$/;"	f
RefreshBuffer	vim-rails/autoload/rails.vim	/^function! s:RefreshBuffer()$/;"	f
RefreshEntriesFromDir	project-1.4.1/plugin/project.vim	/^    function! s:RefreshEntriesFromDir(recursive)$/;"	f
Related	vim-rails/autoload/rails.vim	/^function! s:Related(cmd,line1,line2,count,...)$/;"	f
ReleaseKeyPresses	supertab/plugin/supertab.vim	/^function! s:ReleaseKeyPresses() " {{{$/;"	f
ReloadAllSnippets	snipmate.vim/plugin/snipMate.vim	/^fun! ReloadAllSnippets()$/;"	f
ReloadSnippets	snipmate.vim/plugin/snipMate.vim	/^fun! ReloadSnippets(ft)$/;"	f
Remove	vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(force)$/;"	f
RemoveSnippet	snipmate.vim/autoload/snipMate.vim	/^fun s:RemoveSnippet()$/;"	f
RenameInstanceVariable	vim-ruby-refactoring/plugin/refactorings/general/renameinstancevariable.vim	/^function! RenameInstanceVariable()$/;"	f
RenameLocalVariable	vim-ruby-refactoring/plugin/refactorings/general/renamelocalvariable.vim	/^function! RenameLocalVariable()$/;"	f
RenderSyntax	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>RenderSyntax()$/;"	f
RepeatCommentstring	tcomment_vim/autoload/tcomment.vim	/^function! s:RepeatCommentstring(cdef) "{{{3$/;"	f
ReplaceCmd	vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
ReplaceInLine	tcomment_vim/autoload/tcomment.vim	/^function! s:ReplaceInLine(text) "{{{3$/;"	f
ResetAllSnippets	snipmate.vim/plugin/snipMate.vim	/^fun! ResetAllSnippets()$/;"	f
ResetSnippets	snipmate.vim/plugin/snipMate.vim	/^fun! ResetSnippets(ft)$/;"	f
ResizeWindow	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>ResizeWindow()$/;"	f
Resolve	matchit/plugin/matchit.vim	/^fun! s:Resolve(source, target, output)$/;"	f
RestoreNERDTreeViewIfPossible	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:RestoreNERDTreeViewIfPossible()$/;"	f
RestoreWindowSettings2	genutils-2.5/autoload/genutils.vim	/^function! s:RestoreWindowSettings2(id)$/;"	f
Rlib	vim-rake/plugin/rake.vim	/^function! s:Rlib(file)$/;"	f
RlibComplete	vim-rake/plugin/rake.vim	/^function! s:RlibComplete(A,L,P)$/;"	f
Rspec	vim-rake/plugin/rake.vim	/^function! s:Rspec(...)$/;"	f
RspecComplete	vim-rake/plugin/rake.vim	/^function! s:RspecComplete(A,L,P)$/;"	f
Rtask	vim-rake/plugin/rake.vim	/^function! s:Rtask(file)$/;"	f
RtaskComplete	vim-rake/plugin/rake.vim	/^function! s:RtaskComplete(A,L,P)$/;"	f
Rtest	vim-rake/plugin/rake.vim	/^function! s:Rtest(...)$/;"	f
RtestComplete	vim-rake/plugin/rake.vim	/^function! s:RtestComplete(A,L,P)$/;"	f
Rtestorspec	vim-rake/plugin/rake.vim	/^function! s:Rtestorspec(order,file)$/;"	f
RubyBalloonexpr	vim-ruby/ftplugin/ruby.vim	/^function! RubyBalloonexpr()$/;"	f
RubyCursorIdentifier	vim-ruby/ftplugin/ruby.vim	/^function! RubyCursorIdentifier()$/;"	f
RubyExtract	vim-rails/autoload/rails.vim	/^function! s:RubyExtract(bang, root, before, name) range abort$/;"	f
Runner	command-t/spec/vim_formatter.rb	/^  module Runner$/;"	m	class:Spec
Runtime	vim-scriptease/plugin/scriptease.vim	/^command! -bang -bar -nargs=* -complete=customlist,s:Complete Runtime$/;"	c
SHELL	command-t/ruby/command-t/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	supertab/Makefile	/^SHELL=\/bin\/bash$/;"	m
SID	nerdtree/autoload/nerdtree.vim	/^function s:SID()$/;"	f
SNR	genutils-2.5/autoload/genutils.vim	/^function! s:SNR()$/;"	f
SRCS	command-t/ruby/command-t/Makefile	/^SRCS = ext.c match.c matcher.c$/;"	m
STATIC_LIB	command-t/ruby/command-t/Makefile	/^STATIC_LIB = $/;"	m
SaveGlobalFocus	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:SaveGlobalFocus()$/;"	f
SaveNERDTreeViewIfPossible	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:SaveNERDTreeViewIfPossible()$/;"	f
Scanner	command-t/ruby/command-t/scanner.rb	/^  class Scanner; end$/;"	c	class:CommandT
Screen	command-t/ruby/command-t/vim/screen.rb	/^    module Screen$/;"	m	class:CommandT.VIM
Scriptnames	vim-scriptease/plugin/scriptease.vim	/^command! -bar Scriptnames call setqflist(s:names())|copen$/;"	c
Select	dbext_2000/plugin/dbext.vim	/^command! -nargs=+ -complete=customlist,dbext#DB_completeTables Select            :call dbext#DB_execSql("select " . <q-args>)$/;"	c
SelectCompletion	supertab/plugin/supertab.vim	/^    function! s:SelectCompletion(cr)$/;"	f
SelectWord	snipmate.vim/autoload/snipMate.vim	/^fun s:SelectWord()$/;"	f
Set	vim-rails/autoload/rails.vim	/^function! s:Set(bang,...)$/;"	f
SetBasePath	vim-rails/autoload/rails.vim	/^function! s:SetBasePath() abort$/;"	f
SetCompletionType	supertab/plugin/supertab.vim	/^function! s:SetCompletionType() " {{{$/;"	f
SetDefaultCompletionType	supertab/plugin/supertab.vim	/^function! s:SetDefaultCompletionType() " {{{$/;"	f
SetOption	vim-colors-solarized/colors/solarized.vim	/^function! s:SetOption(name,default)$/;"	f
SetWhitespaceMode	tcomment_vim/autoload/tcomment.vim	/^function! s:SetWhitespaceMode(cdef) "{{{3$/;"	f
Settings	command-t/ruby/command-t/settings.rb	/^  class Settings$/;"	c	class:CommandT
SetupAutoCommand	project-1.4.1/plugin/project.vim	/^    function! s:SetupAutoCommand(cwd)$/;"	f
SetupMake	vim-bundler/plugin/bundler.vim	/^function! s:SetupMake() abort$/;"	f
SetupScriptAutoCommand	project-1.4.1/plugin/project.vim	/^    function! s:SetupScriptAutoCommand(bufcmd, script)$/;"	f
ShowAvailableSnips	snipmate.vim/plugin/snipMate.vim	/^fun! ShowAvailableSnips()$/;"	f
ShowBuffers	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>ShowBuffers()$/;"	f
SolarizedHiTrail	vim-colors-solarized/colors/solarized.vim	/^augroup SolarizedHiTrail$/;"	a
SolarizedHiTrail	vim-colors-solarized/colors/solarized.vim	/^function! s:SolarizedHiTrail()$/;"	f
SolarizedMenu	vim-colors-solarized/colors/solarized.vim	/^function! SolarizedMenu()$/;"	f
SolarizedOptions	vim-colors-solarized/colors/solarized.vim	/^    command SolarizedOptions :call s:SolarizedOptions()$/;"	c
SolarizedOptions	vim-colors-solarized/colors/solarized.vim	/^function! s:SolarizedOptions()$/;"	f
SortR	project-1.4.1/plugin/project.vim	/^    function! s:SortR(start, end)$/;"	f
Spawn	project-1.4.1/plugin/project.vim	/^    function! s:Spawn(number)$/;"	f
SpawnAll	project-1.4.1/plugin/project.vim	/^    function! s:SpawnAll(recurse, number)$/;"	f
Spec	command-t/spec/vim_formatter.rb	/^module Spec$/;"	m
StageDiff	vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageNext	vim-fugitive/plugin/fugitive.vim	/^function! s:StageNext(count)$/;"	f
StagePatch	vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StagePrevious	vim-fugitive/plugin/fugitive.vim	/^function! s:StagePrevious(count)$/;"	f
StageReloadSeek	vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2)$/;"	f
StageToggle	vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
Start	vim-dispatch/plugin/dispatch.vim	/^command! -bang -nargs=* -complete=custom,dispatch#command_complete Start$/;"	c
StartColRx	tcomment_vim/autoload/tcomment.vim	/^function! s:StartColRx(pos)$/;"	f
StartExplorer	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>StartExplorer(curBufNum)$/;"	f
StartLineRx	tcomment_vim/autoload/tcomment.vim	/^function! s:StartLineRx(pos)$/;"	f
StartPosRx	tcomment_vim/autoload/tcomment.vim	/^function! s:StartPosRx(mode, line, col)$/;"	f
Status	vim-fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
StopExplorer	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>StopExplorer(force)$/;"	f
Stub	command-t/ruby/command-t/stub.rb	/^  class Stub$/;"	c	class:CommandT
SuperTab	supertab/plugin/supertab.vim	/^function! SuperTab(command) " {{{$/;"	f
SuperTabAlternateCompletion	supertab/plugin/supertab.vim	/^function! SuperTabAlternateCompletion(type) " {{{$/;"	f
SuperTabChain	supertab/plugin/supertab.vim	/^function! SuperTabChain(completefunc, completekeys) " {{{$/;"	f
SuperTabCodeComplete	supertab/plugin/supertab.vim	/^function! SuperTabCodeComplete(findstart, base) " {{{$/;"	f
SuperTabHelp	supertab/plugin/supertab.vim	/^    command SuperTabHelp :call <SID>SuperTabHelp()$/;"	c
SuperTabHelp	supertab/plugin/supertab.vim	/^function! s:SuperTabHelp() " {{{$/;"	f
SuperTabLongestHighlight	supertab/plugin/supertab.vim	/^function! SuperTabLongestHighlight(dir) " {{{$/;"	f
SuperTabSetCompletionType	supertab/plugin/supertab.vim	/^function! SuperTabSetCompletionType(type) " {{{$/;"	f
SuperTabSetDefaultCompletionType	supertab/plugin/supertab.vim	/^function! SuperTabSetDefaultCompletionType(type) " {{{$/;"	f
Support	vim-ruby/spec/spec_helper.rb	/^module Support$/;"	m
SwitchWindow	minibufexpl.vim/plugin/minibufexpl.vim	/^function! s:SwitchWindow(action, ...)$/;"	f
TARGET	command-t/ruby/command-t/Makefile	/^TARGET = ext$/;"	m
TARGET_SO	command-t/ruby/command-t/Makefile	/^TARGET_SO     = $(DLLIB)$/;"	m
TComment	tcomment_vim/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TComment$/;"	c
TCommentAs	tcomment_vim/plugin/tcomment.vim	/^command! -bang -complete=customlist,tcomment#Complete -range -nargs=+ TCommentAs $/;"	c
TCommentBlock	tcomment_vim/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentBlock$/;"	c
TCommentInline	tcomment_vim/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentInline$/;"	c
TCommentMaybeInline	tcomment_vim/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentMaybeInline$/;"	c
TCommentRight	tcomment_vim/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentRight$/;"	c
TMiniBufExplorer	minibufexpl.vim/plugin/minibufexpl.vim	/^  command! TMiniBufExplorer echoe 'TMiniBufExplorer is depreciated, please use MBEToggle instead.'$/;"	c
TabEnterHandler	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>TabEnterHandler()$/;"	f
TabEnterHandler	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:TabEnterHandler()$/;"	f
TabLeaveHandler	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:TabLeaveHandler()$/;"	f
TagFinder	command-t/ruby/command-t/finder/tag_finder.rb	/^  class TagFinder < Finder$/;"	c	class:CommandT
TagList_IsValid	taglist_46/plugin/taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	taglist_46/plugin/taglist.vim	/^function! TagList_Start()$/;"	f
TagList_WrapUp	taglist_46/plugin/taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_title	taglist_46/plugin/taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
TagScanner	command-t/ruby/command-t/scanner/tag_scanner.rb	/^  class TagScanner < Scanner$/;"	c	class:CommandT
Tags	vim-rake/plugin/rake.vim	/^function! s:Tags(args)$/;"	f
TagsGenerate	vim-tags/plugin/tags.vim	/^command! -nargs=0 TagsGenerate :call s:generate_tags(1)$/;"	c
TargetDirectory	vim-ruby/bin/vim-ruby-install.rb	/^class TargetDirectory$/;"	c
TargetDirectory	vim-ruby/bin/vim-ruby-install.rb	/^class TargetDirectory::Finder$/;"	c
TestSuperTabCodeComplete	supertab/plugin/supertab.vim	/^function! TestSuperTabCodeComplete(findstart, base) " {{{$/;"	f
Time	vim-scriptease/plugin/scriptease.vim	/^command! -nargs=? -complete=command Time :exe s:time(<q-args>)$/;"	c
Tlist	taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	taglist_46/plugin/taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	taglist_46/plugin/taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	taglist_46/plugin/taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	taglist_46/plugin/taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	taglist_46/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	taglist_46/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	taglist_46/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	taglist_46/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	taglist_46/plugin/taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Add_Files	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files_Recursive	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Auto_Highlight_Tag	taglist_46/plugin/taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	taglist_46/plugin/taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	taglist_46/plugin/taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	taglist_46/plugin/taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Buffer_Removed	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Change_Sort	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Close_On_Select	taglist_46/plugin/taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	taglist_46/plugin/taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Create_Folds_For_File	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Create_Folds_For_File(fidx)$/;"	f
Tlist_Ctags_Cmd	taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Debug_Disable	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Enable	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Show	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Detect_Filetype	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
Tlist_Discard_FileInfo	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Prototype	taglist_46/plugin/taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	taglist_46/plugin/taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	taglist_46/plugin/taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exe_Cmd_No_Acmds	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exit_OnlyWindow	taglist_46/plugin/taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Extract_Tag_Scope	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_Extract_Tagtype	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_FileType_Init	taglist_46/plugin/taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	taglist_46/plugin/taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Nearest_Tag_Idx	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_GainFocus_On_ToggleOpen	taglist_46/plugin/taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Buffer_Filetype	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_File_Index	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_Filenames	taglist_46/plugin/taglist.vim	/^function! Tlist_Get_Filenames()$/;"	f
Tlist_Get_Tag_Linenum	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	taglist_46/plugin/taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_Scope	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Scope(fidx, tidx)$/;"	f
Tlist_Get_Tag_SearchPat	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Get_Tagname_By_Line	taglist_46/plugin/taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	taglist_46/plugin/taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	taglist_46/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	taglist_46/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Init_File	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Log_Msg	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Max_Submenu_Items	taglist_46/plugin/taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	taglist_46/plugin/taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Menu_Add_Base_Menu	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_File_Refresh	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Init	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Jump_To_Tag	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Refresh	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Remove_File	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Update_File	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Parse_Tagline	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Post_Close_Cleanup	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_Dir	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_File	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_File_Always	taglist_46/plugin/taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Process_Filelist	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Refresh	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh_Folds	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
Tlist_Remove_File	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Session_Load	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	taglist_46/plugin/taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	taglist_46/plugin/taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	taglist_46/plugin/taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Skip_File	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Sort_Type	taglist_46/plugin/taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_Current_File	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_File	taglist_46/plugin/taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_Remove_List	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_Use_Horiz_Window	taglist_46/plugin/taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	taglist_46/plugin/taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	taglist_46/plugin/taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_User_Removed_File	taglist_46/plugin/taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_Vim_Session_Load	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Warning_Msg	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_WinHeight	taglist_46/plugin/taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	taglist_46/plugin/taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
Tlist_Window_Check_Auto_Open	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Width	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Close	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Create	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Display_Help	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Exit_Only_Window	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_Tag_Index	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Goto_Window	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Highlight_Line	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Tag	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Init	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Jump_To_Tag	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Mark_File_Window	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Move_To_File	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Open	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open_File	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File_Fold	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Refresh	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh_File	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Remove_File_From_Display	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Show_Info	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Toggle	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle_Help_Text	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Update_File	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_Line_Offsets	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Zoom	taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
TogBG	vim-colors-solarized/autoload/togglebg.vim	/^function! s:TogBG()$/;"	f
ToggleBG	vim-colors-solarized/autoload/togglebg.vim	/^    command ToggleBG :call s:TogBG()$/;"	c
ToggleBackground	vim-colors-solarized/autoload/togglebg.vim	/^function! ToggleBackground()$/;"	f
ToggleExplorer	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>ToggleExplorer(tabs,force)$/;"	f
ToggleMRU	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>ToggleMRU()$/;"	f
ToolBar.togglebg	vim-colors-solarized/autoload/togglebg.vim	/^inoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>a$/;"	m
ToolBar.togglebg	vim-colors-solarized/autoload/togglebg.vim	/^nnoremenu <script> ToolBar.togglebg <SID>TogBG$/;"	m
ToolBar.togglebg	vim-colors-solarized/autoload/togglebg.vim	/^vnoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>gv$/;"	m
Transform	vim-unimpaired/plugin/unimpaired.vim	/^function! s:Transform(algorithm,type)$/;"	f
TransformOpfunc	vim-unimpaired/plugin/unimpaired.vim	/^function! s:TransformOpfunc(type)$/;"	f
TransformSetup	vim-unimpaired/plugin/unimpaired.vim	/^function! s:TransformSetup(algorithm)$/;"	f
TreeDirNode.AbsoluteTreeRoot	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path)$/;"	f
TreeDirNode._initChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode._openRecursively2	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.activate	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.findNode	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getVisibleChildCount	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.open	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.removeChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path)$/;"	f
TreeDirNode.sortChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetRootLineNum	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootLineNum()$/;"	f
TreeFileNode.GetSelected	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path)$/;"	f
TreeFileNode._renderToString	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText, vertMap, isLastChild)$/;"	f
TreeFileNode.activate	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getLineNum	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getLineNum()$/;"	f
TreeFileNode.isRoot	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.makeRoot	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.makeRoot()$/;"	f
TreeFileNode.open	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openInNewTab	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.rename	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TriggerSnippet	snipmate.vim/plugin/snipMate.vim	/^fun! TriggerSnippet()$/;"	f
UnimpairedMapTransform	vim-unimpaired/plugin/unimpaired.vim	/^function! UnimpairedMapTransform(algorithm, key)$/;"	f
UnreplaceInLine	tcomment_vim/autoload/tcomment.vim	/^function! s:UnreplaceInLine(text) "{{{3$/;"	f
Update	dbext_2000/plugin/dbext.vim	/^command! -nargs=+ -complete=customlist,dbext#DB_completeTables Update            :call dbext#DB_execSql("update " . <q-args>)$/;"	c
UpdateAllBufferDicts	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>UpdateAllBufferDicts(bufNum,deleted)$/;"	f
UpdateBufferNameDict	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>UpdateBufferNameDict(bufNum,deleted)$/;"	f
UpdateBufferPathDict	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>UpdateBufferPathDict(bufNum,deleted)$/;"	f
UpdateBufferPathSignDict	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>UpdateBufferPathSignDict(bufNum,deleted)$/;"	f
UpdateBufferStateDict	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>UpdateBufferStateDict(bufNum,deleted)$/;"	f
UpdateBufferUniqNameDict	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>UpdateBufferUniqNameDict(bufNum,deleted)$/;"	f
UpdateChangedSnip	snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateChangedSnip(entering)$/;"	f
UpdateExplorer	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>UpdateExplorer(curBufNum)$/;"	f
UpdatePlaceholderTabStops	snipmate.vim/autoload/snipMate.vim	/^fun s:UpdatePlaceholderTabStops()$/;"	f
UpdateTabStops	snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateTabStops()$/;"	f
UpdateVars	snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateVars()$/;"	f
VIM	command-t/ruby/command-t/vim.rb	/^  module VIM$/;"	m	class:CommandT
VIM	command-t/ruby/command-t/vim/path_utilities.rb	/^  module VIM$/;"	m	class:CommandT
VIM	command-t/ruby/command-t/vim/screen.rb	/^  module VIM$/;"	m	class:CommandT
VIM	command-t/ruby/command-t/vim/window.rb	/^  module VIM$/;"	m	class:CommandT
VIM	command-t/spec/spec_helper.rb	/^module VIM$/;"	m
VPATH	command-t/ruby/command-t/Makefile	/^VPATH = $(srcdir):$(topdir):$(hdrdir)$/;"	m
Ve	vim-scriptease/plugin/scriptease.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Complete Ve$/;"	c
Vedit	vim-scriptease/plugin/scriptease.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Complete Vedit$/;"	c
Verbose	vim-scriptease/plugin/scriptease.vim	/^command! -range=999998 -nargs=1 -complete=command Verbose$/;"	c
Verbose	vim-scriptease/plugin/scriptease.vim	/^function! s:Verbose(level, excmd)$/;"	f
VimDirListing	project-1.4.1/plugin/project.vim	/^    function! s:VimDirListing(filter, padding, separator, filevariable, filecount, dirvariable, dircount)$/;"	f
VimEnterHandler	minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>VimEnterHandler()$/;"	f
VimEnterHandler	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:VimEnterHandler()$/;"	f
VimFormatter	command-t/spec/vim_formatter.rb	/^      class VimFormatter < BaseTextFormatter$/;"	c	class:Spec.Runner.Formatter
VimRubyInstaller	vim-ruby/bin/vim-ruby-install.rb	/^class VimRubyInstaller$/;"	c
Vopen	vim-scriptease/plugin/scriptease.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Complete Vopen$/;"	c
Vpedit	vim-scriptease/plugin/scriptease.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Complete Vpedit$/;"	c
Vread	vim-scriptease/plugin/scriptease.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Complete Vread$/;"	c
Vsplit	vim-scriptease/plugin/scriptease.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Complete Vsplit$/;"	c
Vtabedit	vim-scriptease/plugin/scriptease.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Complete Vtabedit$/;"	c
Vvsplit	vim-scriptease/plugin/scriptease.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Complete Vvsplit$/;"	c
Wholematch	matchit/plugin/matchit.vim	/^fun! s:Wholematch(string, pat, start)$/;"	f
WillComplete	supertab/plugin/supertab.vim	/^function! s:WillComplete() " {{{$/;"	f
WinEnterHandler	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:WinEnterHandler()$/;"	f
WinLeaveHandler	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:WinLeaveHandler()$/;"	f
Window	command-t/ruby/command-t/vim/window.rb	/^    class Window$/;"	c	class:CommandT.VIM
Window.Toggle\	vim-colors-solarized/autoload/togglebg.vim	/^inoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>a$/;"	m
Window.Toggle\	vim-colors-solarized/autoload/togglebg.vim	/^nnoremenu <script> Window.Toggle\\ Background <SID>TogBG$/;"	m
Window.Toggle\	vim-colors-solarized/autoload/togglebg.vim	/^vnoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>gv$/;"	m
WipeAll	project-1.4.1/plugin/project.vim	/^    function! s:WipeAll(recurse, line)$/;"	f
Worker	vim-l9/autoload/l9/async.py	/^class Worker(threading.Thread):$/;"	c
Wq	vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
Write	vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
X	vim-ruby/spec/indent/blocks_spec.rb	/^      module X$/;"	m
[%	matchit/plugin/matchit.vim	/^nnoremap <silent> [% :<C-U>call <SID>MultiMatch("bW", "n") <CR>$/;"	m
[%	matchit/plugin/matchit.vim	/^onoremap <silent> [% v:<C-U>call <SID>MultiMatch("bW", "o") <CR>$/;"	m
[%	matchit/plugin/matchit.vim	/^vmap [% <Esc>[%m'gv``$/;"	m
[<C-D>	vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> [<C-D>      :<C-U>exe <SID>jump('edit',v:count)<CR>$/;"	m
[<Space>	vim-unimpaired/plugin/unimpaired.vim	/^nmap [<Space> <Plug>unimpairedBlankUp$/;"	m
[M	vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','b','n')<CR>$/;"	m
[[	vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[]	vim-ruby/bin/vim-ruby-install.rb	/^    def [](path)$/;"	f	class:VimRubyInstaller.BackupDir
[]	vim-ruby/bin/vim-ruby-install.rb	/^  def [](path)$/;"	f	class:TargetDirectory
[]	vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[d	vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> [d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
[e	vim-unimpaired/plugin/unimpaired.vim	/^nmap [e <Plug>unimpairedMoveUp$/;"	m
[f	vim-unimpaired/plugin/unimpaired.vim	/^nmap [f <Plug>unimpairedDirectoryPrevious$/;"	m
[m	vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','b','n')<CR>$/;"	m
[n	vim-unimpaired/plugin/unimpaired.vim	/^nmap [n <Plug>unimpairedContextPrevious$/;"	m
[n	vim-unimpaired/plugin/unimpaired.vim	/^omap [n <Plug>unimpairedContextPrevious$/;"	m
[o	vim-unimpaired/plugin/unimpaired.vim	/^nmap [o <Plug>unimpairedOPrevious$/;"	m
[od	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap [od :diffthis<CR>$/;"	m
[ox	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap [ox :set cursorline cursorcolumn<CR>$/;"	m
[p	vim-unimpaired/plugin/unimpaired.vim	/^nmap [p <Plug>unimpairedPutAbove$/;"	m
]%	matchit/plugin/matchit.vim	/^nnoremap <silent> ]% :<C-U>call <SID>MultiMatch("W",  "n") <CR>$/;"	m
]%	matchit/plugin/matchit.vim	/^onoremap <silent> ]% v:<C-U>call <SID>MultiMatch("W",  "o") <CR>$/;"	m
]%	matchit/plugin/matchit.vim	/^vmap ]% <Esc>]%m'gv``$/;"	m
]<C-D>	vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> ]<C-D>      :<C-U>exe <SID>jump('edit',v:count)<CR>$/;"	m
]<Space>	vim-unimpaired/plugin/unimpaired.vim	/^nmap ]<Space> <Plug>unimpairedBlankDown$/;"	m
]M	vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','','n')<CR>$/;"	m
][	vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]]	vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]d	vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> ]d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
]e	vim-unimpaired/plugin/unimpaired.vim	/^nmap ]e <Plug>unimpairedMoveDown$/;"	m
]f	vim-unimpaired/plugin/unimpaired.vim	/^nmap ]f <Plug>unimpairedDirectoryNext$/;"	m
]m	vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','','n')<CR>$/;"	m
]n	vim-unimpaired/plugin/unimpaired.vim	/^nmap ]n <Plug>unimpairedContextNext$/;"	m
]n	vim-unimpaired/plugin/unimpaired.vim	/^omap ]n <Plug>unimpairedContextNext$/;"	m
]o	vim-unimpaired/plugin/unimpaired.vim	/^nmap ]o <Plug>unimpairedONext$/;"	m
]od	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap ]od :diffoff<CR>$/;"	m
]ox	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap ]ox :set nocursorline nocursorcolumn<CR>$/;"	m
]p	vim-unimpaired/plugin/unimpaired.vim	/^nmap ]p <Plug>unimpairedPutBelow$/;"	m
__init__	vim-l9/autoload/l9/async.py	/^    def __init__(self):$/;"	m	class:Asyncer
__init__	vim-l9/autoload/l9/async.py	/^    def __init__(self):$/;"	m	class:Worker
__init__	vim-l9/autoload/l9/async.py	/^    def __init__(self, command, cwd, input, appends):$/;"	m	class:Executor
_ensure_directory_exists	vim-ruby/bin/vim-ruby-install.rb	/^  def _ensure_directory_exists(path)$/;"	f	class:FileWriter
_makeArgumentList	genutils-2.5/autoload/genutils.vim	/^function! s:_makeArgumentList()$/;"	f
_makeArgumentString	genutils-2.5/autoload/genutils.vim	/^function! s:_makeArgumentString()$/;"	f
_potential_directories	vim-ruby/bin/vim-ruby-install.rb	/^  def _potential_directories$/;"	f	class:TargetDirectory
_same_contents?	vim-ruby/bin/vim-ruby-install.rb	/^  def _same_contents?(p1, p2)$/;"	f	class:VimRubyInstaller
_valid_vim_ruby_dir	vim-ruby/bin/vim-ruby-install.rb	/^  def Env._valid_vim_ruby_dir(dir)$/;"	F	class:Env
_vim_system_dir	vim-ruby/bin/vim-ruby-install.rb	/^  def _vim_system_dir$/;"	f	class:TargetDirectory
_vim_user_dir	vim-ruby/bin/vim-ruby-install.rb	/^  def _vim_user_dir$/;"	f	class:TargetDirectory
a%	matchit/plugin/matchit.vim	/^vmap a% <Esc>[%v]%$/;"	m
aM	vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
abbrev_segments	command-t/ruby/command-t/prompt.rb	/^    def abbrev_segments$/;"	f	class:CommandT.Prompt
abolish_l	vim-rails/plugin/rails.vim	/^function! s:abolish_l(word)$/;"	f
abolish_setup	vim-rails/plugin/rails.vim	/^function! s:abolish_setup()$/;"	f
abolish_t	vim-rails/plugin/rails.vim	/^function! s:abolish_t(word)$/;"	f
accept_selection	command-t/ruby/command-t/controller.rb	/^    def accept_selection options = {}$/;"	f	class:CommandT.Controller.quickfix
activateAll	nerdtree/autoload/nerdtree.vim	/^function! s:activateAll()$/;"	f
activateBookmark	nerdtree/autoload/nerdtree.vim	/^function! s:activateBookmark(bm)$/;"	f
activateDirNode	nerdtree/autoload/nerdtree.vim	/^function! s:activateDirNode(node)$/;"	f
activateFileNode	nerdtree/autoload/nerdtree.vim	/^function! s:activateFileNode(node)$/;"	f
activateFufBuffer	FuzzyFinder/autoload/fuf.vim	/^function s:activateFufBuffer()$/;"	f
add!	command-t/ruby/command-t/match_window.rb	/^    def add! char$/;"	f	class:CommandT.MatchWindow
add!	command-t/ruby/command-t/prompt.rb	/^    def add! char$/;"	f	class:CommandT.Prompt
add_methods	vim-bundler/plugin/bundler.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_methods	vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_methods	vim-rails/autoload/rails.vim	/^function! s:add_methods(namespace, method_names)$/;"	f
add_methods	vim-rake/plugin/rake.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_paths_for_directory	command-t/ruby/command-t/scanner/file_scanner.rb	/^    def add_paths_for_directory dir, accumulator$/;"	f	class:CommandT.FileScanner
add_return_key	vim-ruby-refactoring/features/support/shared_methods.rb	/^def add_return_key$/;"	f
add_to_commands	vim-ruby-refactoring/features/support/shared_methods.rb	/^def add_to_commands command$/;"	f
addfilecmds	vim-rails/autoload/rails.vim	/^function! s:addfilecmds(type)$/;"	f
after	vim-multiple-cursors/spec/benchmark_spec.rb	/^def after(string)$/;"	f
after	vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def after(string)$/;"	f
allsteps	vim-cucumber/ftplugin/cucumber.vim	/^function! s:allsteps()$/;"	f
always_show_dot_files	command-t/ruby/command-t/match.c	/^    int     always_show_dot_files;  \/\/ boolean$/;"	m	struct:__anon1	file:
am	vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
app_commands	vim-rails/autoload/rails.vim	/^function! s:app_commands() dict abort$/;"	f
app_dbext_settings	vim-rails/autoload/rails.vim	/^function! s:app_dbext_settings(environment) dict$/;"	f
app_default_locale	vim-rails/autoload/rails.vim	/^function! s:app_default_locale() dict abort$/;"	f
app_engines	vim-rails/autoload/rails.vim	/^function! s:app_engines() dict abort$/;"	f
app_environments	vim-rails/autoload/rails.vim	/^function! s:app_environments() dict$/;"	f
app_eval	vim-rails/autoload/rails.vim	/^function! s:app_eval(ruby,...) dict abort$/;"	f
app_execute_rails_command	vim-rails/autoload/rails.vim	/^function! s:app_execute_rails_command(cmd) dict abort$/;"	f
app_file	vim-rails/autoload/rails.vim	/^function! s:app_file(name) dict abort$/;"	f
app_find_file	vim-rails/autoload/rails.vim	/^function! s:app_find_file(name, ...) dict abort$/;"	f
app_gems	vim-rails/autoload/rails.vim	/^function! s:app_gems() dict abort$/;"	f
app_generator_command	vim-rails/autoload/rails.vim	/^function! s:app_generator_command(bang,...) dict$/;"	f
app_generators	vim-rails/autoload/rails.vim	/^function! s:app_generators() dict abort$/;"	f
app_has	vim-rails/autoload/rails.vim	/^function! s:app_has(feature) dict$/;"	f
app_has_file	vim-rails/autoload/rails.vim	/^function! s:app_has_file(file) dict$/;"	f
app_has_gem	vim-rails/autoload/rails.vim	/^function! s:app_has_gem(gem) dict abort$/;"	f
app_has_path	vim-rails/autoload/rails.vim	/^function! s:app_has_path(path) dict$/;"	f
app_lightweight_ruby_eval	vim-rails/autoload/rails.vim	/^function! s:app_lightweight_ruby_eval(ruby,...) dict abort$/;"	f
app_migration	vim-rails/autoload/rails.vim	/^function! s:app_migration(file) dict$/;"	f
app_named_route_file	vim-rails/autoload/rails.vim	/^function! s:app_named_route_file(route) dict$/;"	f
app_output_command	vim-rails/autoload/rails.vim	/^function! s:app_output_command(count, code) dict$/;"	f
app_path	vim-rails/autoload/rails.vim	/^function! s:app_path(...) dict$/;"	f
app_prepare_rails_command	vim-rails/autoload/rails.vim	/^function! s:app_prepare_rails_command(cmd) dict abort$/;"	f
app_projections	vim-rails/autoload/rails.vim	/^function! s:app_projections() dict abort$/;"	f
app_rake_tasks	vim-rails/autoload/rails.vim	/^function! s:app_rake_tasks() dict$/;"	f
app_relglob	vim-rails/autoload/rails.vim	/^function! s:app_relglob(path,glob,...) dict$/;"	f
app_route_names	vim-rails/autoload/rails.vim	/^function! s:app_route_names() dict$/;"	f
app_ruby_command	vim-rails/autoload/rails.vim	/^function! s:app_ruby_command(cmd) dict abort$/;"	f
app_ruby_script_command	vim-rails/autoload/rails.vim	/^function! s:app_ruby_script_command(cmd) dict abort$/;"	f
app_script_command	vim-rails/autoload/rails.vim	/^function! s:app_script_command(bang,...) dict$/;"	f
app_server_binding	vim-rails/autoload/rails.vim	/^function! s:app_server_binding() dict abort$/;"	f
app_server_command	vim-rails/autoload/rails.vim	/^function! s:app_server_command(bang,arg) dict$/;"	f
app_start_rails_command	vim-rails/autoload/rails.vim	/^function! s:app_start_rails_command(cmd, ...) dict abort$/;"	f
app_tags_command	vim-rails/autoload/rails.vim	/^function! s:app_tags_command() dict$/;"	f
app_test_suites	vim-rails/autoload/rails.vim	/^function! s:app_test_suites() dict$/;"	f
app_user_assertions	vim-rails/autoload/rails.vim	/^function! s:app_user_assertions() dict$/;"	f
app_user_classes	vim-rails/autoload/rails.vim	/^function! s:app_user_classes() dict$/;"	f
apply_highlight_fix	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:apply_highlight_fix()$/;"	f
apply_user_input_next	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:apply_user_input_next(mode)$/;"	f
arch	command-t/ruby/command-t/Makefile	/^arch = universal-darwin12.0$/;"	m
archdir	command-t/ruby/command-t/Makefile	/^archdir = $(rubylibdir)\/$(arch)$/;"	m
archflag	command-t/ruby/command-t/Makefile	/^archflag = $/;"	m
ask_user	vim-ruby/bin/vim-ruby-install.rb	/^  def Env.ask_user(message)$/;"	F	class:Env
assert_correct_indenting	vim-ruby/spec/spec_helper.rb	/^  def assert_correct_indenting(string)$/;"	f	class:Support
autocamelize	vim-rails/autoload/rails.vim	/^function! s:autocamelize(files,test)$/;"	f
autoload	vim-rails/plugin/rails.vim	/^function! s:autoload(...)$/;"	f
b:browsefilter	vim-haml/ftplugin/haml.vim	/^  let b:browsefilter="Haml Files (*.haml)\\t*.haml\\nSass Files (*.sass)\\t*.sass\\n" . s:browsefilter$/;"	v
b:browsefilter	vim-ruby/ftplugin/eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	vim-ruby/ftplugin/ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:cucumber_root	vim-cucumber/ftplugin/cucumber.vim	/^let b:cucumber_root = expand('%:p:h:s?.*[\\\/]\\%(features\\|stories\\)\\zs[\\\/].*??')$/;"	v
b:current_syntax	vim-cucumber/syntax/cucumber.vim	/^let b:current_syntax = "cucumber"$/;"	v
b:current_syntax	vim-haml/syntax/haml.vim	/^let b:current_syntax = "haml"$/;"	v
b:current_syntax	vim-haml/syntax/sass.vim	/^let b:current_syntax = "sass"$/;"	v
b:current_syntax	vim-haml/syntax/scss.vim	/^let b:current_syntax = "scss"$/;"	v
b:current_syntax	vim-less/syntax/less.vim	/^let b:current_syntax = "less"$/;"	v
b:current_syntax	vim-ruby/syntax/eruby.vim	/^let b:current_syntax = 'eruby'$/;"	v
b:current_syntax	vim-ruby/syntax/ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:did_ftplugin	vim-cucumber/ftplugin/cucumber.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	vim-haml/ftplugin/haml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	vim-haml/ftplugin/sass.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	vim-less/ftplugin/less.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	vim-ruby/ftplugin/eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	vim-ruby/ftplugin/ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	vim-cucumber/indent/cucumber.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim-haml/indent/haml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim-haml/indent/sass.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim-ruby/indent/eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim-ruby/indent/ruby.vim	/^let b:did_indent = 1$/;"	v
b:eruby_nest_level	vim-ruby/syntax/eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_nest_level	vim-ruby/syntax/eruby.vim	/^  let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_subtype	vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	vim-ruby/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	vim-ruby/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	vim-ruby/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	vim-ruby/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype_indentexpr	vim-ruby/indent/eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:escape_spaces	project-1.4.1/plugin/project.vim	/^                let b:escape_spaces=1$/;"	v
b:match_ignorecase	vim-ruby/ftplugin/ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_skip	vim-ruby/ftplugin/ruby.vim	/^  let b:match_skip =$/;"	v
b:match_words	vim-haml/ftplugin/haml.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	vim-ruby/ftplugin/eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	vim-ruby/ftplugin/ruby.vim	/^  let b:match_words =$/;"	v
b:ruby_no_expensive	vim-haml/syntax/haml.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	vim-ruby/syntax/ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:ruby_version	vim-ruby/ftplugin/ruby.vim	/^    let b:ruby_version = get(readfile(s:version_file, '', 1), '')$/;"	v
b:undo_ftplugin	vim-cucumber/ftplugin/cucumber.vim	/^  let b:undo_ftplugin .=$/;"	v
b:undo_ftplugin	vim-cucumber/ftplugin/cucumber.vim	/^let b:undo_ftplugin = "setl fo< com< cms< ofu<"$/;"	v
b:undo_ftplugin	vim-haml/ftplugin/haml.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	vim-haml/ftplugin/sass.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	vim-less/ftplugin/less.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	vim-ruby/ftplugin/eruby.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	vim-ruby/ftplugin/ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	vim-ruby/ftplugin/ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	vim-ruby/ftplugin/ruby.vim	/^let b:undo_ftplugin = "setl fo< inc< inex< sua< def< com< cms< path< tags< kp<"$/;"	v
b:undo_indent	vim-cucumber/indent/cucumber.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
backslashdump	vim-scriptease/plugin/scriptease.vim	/^function! s:backslashdump(value, indent)$/;"	f
backspace	command-t/ruby/command-t/controller.rb	/^    def backspace$/;"	f	class:CommandT.Controller.quickfix
backspace!	command-t/ruby/command-t/match_window.rb	/^    def backspace!$/;"	f	class:CommandT.MatchWindow
backspace!	command-t/ruby/command-t/prompt.rb	/^    def backspace!$/;"	f	class:CommandT.Prompt
backup	vim-ruby/bin/vim-ruby-install.rb	/^    def backup(basedir, path)$/;"	f	class:VimRubyInstaller.BackupDir
bar	vim-ruby/spec/indent/continuations_spec.rb	/^      def bar($/;"	f
beep	vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
before	vim-multiple-cursors/spec/benchmark_spec.rb	/^def before(string)$/;"	f
before	vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def before(string)$/;"	f
bindir	command-t/ruby/command-t/Makefile	/^bindir = $(exec_prefix)\/bin$/;"	m
bookmark	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:bookmark(word)$/;"	f
bookmarkHere	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:bookmarkHere(word)$/;"	f
break	vim-scriptease/plugin/scriptease.vim	/^function! s:break(type, arg) abort$/;"	f
breaksnr	vim-scriptease/plugin/scriptease.vim	/^function! s:breaksnr(arg) abort$/;"	f
bsub	vim-cucumber/ftplugin/cucumber.vim	/^function! s:bsub(target,pattern,replacement)$/;"	f
buffer	command-t/spec/command-t/scanner/buffer_scanner_spec.rb	/^  def buffer name$/;"	f
buffer	vim-bundler/plugin/bundler.vim	/^function! s:buffer(...) abort$/;"	f
buffer	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer	vim-rake/plugin/rake.vim	/^function! s:buffer(...) abort$/;"	f
buffer_absolute	vim-rake/plugin/rake.vim	/^function! s:buffer_absolute() dict abort$/;"	f
buffer_alter_paths	vim-bundler/plugin/bundler.vim	/^function! s:buffer_alter_paths() dict abort$/;"	f
buffer_app	vim-rails/autoload/rails.vim	/^function! s:buffer_app() dict abort$/;"	f
buffer_commit	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_finder	command-t/ruby/command-t/controller.rb	/^    def buffer_finder$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
buffer_getline	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getline	vim-rails/autoload/rails.vim	/^function! s:buffer_getline(...) dict abort$/;"	f
buffer_getline	vim-rake/plugin/rake.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getvar	vim-bundler/plugin/bundler.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_getvar	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_getvar	vim-rails/autoload/rails.vim	/^function! s:buffer_getvar(varname) dict abort$/;"	f
buffer_getvar	vim-rake/plugin/rake.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_lines	vim-rails/autoload/rails.vim	/^function! s:buffer_lines() dict abort$/;"	f
buffer_name	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_name	vim-rails/autoload/rails.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_name	vim-rake/plugin/rake.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_number	vim-rails/autoload/rails.vim	/^function! s:buffer_number() dict abort$/;"	f
buffer_path	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_path	vim-rails/autoload/rails.vim	/^function! s:buffer_path() dict abort$/;"	f
buffer_path	vim-rake/plugin/rake.vim	/^function! s:buffer_path() dict abort$/;"	f
buffer_project	vim-bundler/plugin/bundler.vim	/^function! s:buffer_project() dict abort$/;"	f
buffer_project	vim-rake/plugin/rake.vim	/^function! s:buffer_project() dict abort$/;"	f
buffer_related	vim-rake/plugin/rake.vim	/^function! s:buffer_related() dict abort$/;"	f
buffer_relative	vim-rake/plugin/rake.vim	/^function! s:buffer_relative() dict abort$/;"	f
buffer_repo	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	vim-bundler/plugin/bundler.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_setvar	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_setvar	vim-rails/autoload/rails.vim	/^function! s:buffer_setvar(varname, val) dict abort$/;"	f
buffer_setvar	vim-rake/plugin/rake.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_sha1	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_type_name	vim-rails/autoload/rails.vim	/^function! s:buffer_type_name(...) dict abort$/;"	f
buffer_up	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_up(...) dict abort$/;"	f
bufname	project-1.4.1/plugin/project.vim	/^        let bufname=escape(substitute(expand('%:p', 0), '\\\\', '\/', 'g'), ' ')$/;"	v
build_parameter_declaration_position_pairs	vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:build_parameter_declaration_position_pairs(parameters)$/;"	f
build_path	vim-ruby/ftplugin/ruby.vim	/^function! s:build_path(path)$/;"	f
build_path_option	vim-bundler/plugin/bundler.vim	/^function! s:build_path_option(paths,suffix) abort$/;"	f
build_quietly	command-t/multi-spec.sh	/^function build_quietly()$/;"	f
bundler	vim-bundler/plugin/bundler.vim	/^augroup bundler$/;"	a
bundler#buffer	vim-bundler/plugin/bundler.vim	/^function! bundler#buffer(...) abort$/;"	f
bundler#project	vim-bundler/plugin/bundler.vim	/^function! bundler#project(...) abort$/;"	f
bundler_make	vim-bundler/plugin/bundler.vim	/^augroup bundler_make$/;"	a
bundler_path	vim-bundler/plugin/bundler.vim	/^augroup bundler_path$/;"	a
bundler_syntax	vim-bundler/plugin/bundler.vim	/^augroup bundler_syntax$/;"	a
bundler_utility	vim-bundler/plugin/bundler.vim	/^augroup bundler_utility$/;"	a
cCommandTMatch	command-t/ruby/command-t/ext.c	/^VALUE cCommandTMatch    = 0; \/\/ class CommandT::Match$/;"	v
cCommandTMatcher	command-t/ruby/command-t/ext.c	/^VALUE cCommandTMatcher  = 0; \/\/ class CommandT::Matcher$/;"	v
c_d	project-1.4.1/plugin/project.vim	/^                let c_d=s:GetCd(info, '')$/;"	v
cache_clear	vim-rails/autoload/rails.vim	/^function! s:cache_clear(...) dict$/;"	f
cache_get	vim-rails/autoload/rails.vim	/^function! s:cache_get(...) dict$/;"	f
cache_has	vim-rails/autoload/rails.vim	/^function! s:cache_has(key) dict$/;"	f
cache_needs	vim-rails/autoload/rails.vim	/^function! s:cache_needs(key) dict$/;"	f
cache_set	vim-rails/autoload/rails.vim	/^function! s:cache_set(key,value) dict$/;"	f
cancel	command-t/ruby/command-t/controller.rb	/^    def cancel$/;"	f	class:CommandT.Controller.quickfix
capture	command-t/ruby/command-t/vim.rb	/^    def self.capture cmd$/;"	F	class:CommandT.VIM
cfiles	command-t/Makefile	/^cfiles      := $(shell find ruby -name '*.c')$/;"	m
cgetfile	vim-dispatch/autoload/dispatch.vim	/^function! s:cgetfile(request, all, copen) abort$/;"	f
chCwd	nerdtree/autoload/nerdtree.vim	/^function! s:chCwd(node)$/;"	f
chRoot	nerdtree/autoload/nerdtree.vim	/^function! s:chRoot(node)$/;"	f
changeCoverage	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:changeCoverage(name)$/;"	f
changesurround	vim-surround/plugin/surround.vim	/^function! s:changesurround() " {{{1$/;"	f
cheaders	command-t/Makefile	/^cheaders    := $(shell find ruby -name '*.h')$/;"	m
checkDataFileCompatibility	FuzzyFinder/autoload/fuf.vim	/^function s:checkDataFileCompatibility()$/;"	f
checkKey	vim-l9/autoload/l9/async.vim	/^function s:checkKey(key)$/;"	f
check_ruby_1_9_2	command-t/spec/command-t/controller_spec.rb	/^  def check_ruby_1_9_2$/;"	f
clean_name	vim-tags/plugin/tags.vim	/^    let clean_name = substitute(dir_name, '^\\.\/', '', '')$/;"	v
clear	command-t/ruby/command-t/controller.rb	/^    def clear$/;"	f	class:CommandT.Controller.quickfix
clear	command-t/ruby/command-t/match_window.rb	/^    def clear$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
clear!	command-t/ruby/command-t/prompt.rb	/^    def clear!$/;"	f	class:CommandT.Prompt
clear_outputs	vim-l9/autoload/l9/async.py	/^    def clear_outputs(self):$/;"	m	class:Worker
close	command-t/ruby/command-t/match_window.rb	/^    def close$/;"	f	class:CommandT.MatchWindow
closeChildren	nerdtree/autoload/nerdtree.vim	/^function! s:closeChildren(node)$/;"	f
closeCurrentDir	nerdtree/autoload/nerdtree.vim	/^function! s:closeCurrentDir(node)$/;"	f
closeTreeWindow	nerdtree/autoload/nerdtree.vim	/^function! s:closeTreeWindow()$/;"	f
closematch	vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
cod	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap cod :<C-R>=&diff ? 'diffoff' : 'diffthis'<CR><CR>$/;"	m
color_efm	vim-rails/autoload/rails.vim	/^function! s:color_efm(pre, before, after)$/;"	f
colors_name	vim-colors-solarized/colors/solarized.vim	/^let colors_name = "solarized"$/;"	v
combine_projections	vim-rails/autoload/rails.vim	/^function! s:combine_projections(dest, src, ...) abort$/;"	f
command	project-1.4.1/plugin/project.vim	/^                let command=substitute(command, '%F', escape(fnames, '\\'), 'g')$/;"	v
command	project-1.4.1/plugin/project.vim	/^                let command=substitute(command, '%d', escape(c_d, '\\'), 'g')$/;"	v
command	project-1.4.1/plugin/project.vim	/^                let command=substitute(command, '%h', escape(home, '\\'), 'g')$/;"	v
command	project-1.4.1/plugin/project.vim	/^                let command=substitute(command, '%s', escape(fnames, '\\'), 'g')$/;"	v
command	project-1.4.1/plugin/project.vim	/^                let command=substitute(g:proj_run_fold{a:number}, '%f', substitute(escape(fnames, '\\'), '\\\\ ', ' ', 'g'), 'g')$/;"	v
command	vim-bundler/plugin/bundler.vim	/^function! s:command(definition) abort$/;"	f
command	vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
command	vim-rake/plugin/rake.vim	/^function! s:command(definition) abort$/;"	f
commands	vim-ruby-refactoring/features/support/shared_methods.rb	/^def commands$/;"	f
common#cut_visual_selection	vim-ruby-refactoring/autoload/common.vim	/^function! common#cut_visual_selection() $/;"	f
common#dedupe_list	vim-ruby-refactoring/autoload/common.vim	/^function! common#dedupe_list(target)$/;"	f
common#get_input	vim-ruby-refactoring/autoload/common.vim	/^function! common#get_input(message, error_message)$/;"	f
common#get_range_for_block	vim-ruby-refactoring/autoload/common.vim	/^function! common#get_range_for_block(pattern_start, flags)$/;"	f
common#get_visual_selection	vim-ruby-refactoring/autoload/common.vim	/^function! common#get_visual_selection(...) $/;"	f
common#gsub_all_in_range	vim-ruby-refactoring/autoload/common.vim	/^function! common#gsub_all_in_range(start_line, end_line, pattern, replace)$/;"	f
comp_alpha	command-t/ruby/command-t/matcher.c	/^int comp_alpha(const void *a, const void *b)$/;"	f
comp_score	command-t/ruby/command-t/matcher.c	/^int comp_score(const void *a, const void *b)$/;"	f
compareTimeDescending	FuzzyFinder/autoload/fuf/buffer.vim	/^function s:compareTimeDescending(i1, i2)$/;"	f
compare_pos	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:compare_pos(l, r)$/;"	f
completion_filter	vim-bundler/plugin/bundler.vim	/^function! s:completion_filter(results,A)$/;"	f
completion_filter	vim-rails/autoload/rails.vim	/^function! s:completion_filter(results,A)$/;"	f
completion_filter	vim-rake/plugin/rake.vim	/^function! s:completion_filter(results,A)$/;"	f
contents	vim-ruby/bin/vim-ruby-install.rb	/^    def contents$/;"	f	class:VimRubyInstaller.BackupDir
controller	vim-rails/autoload/rails.vim	/^function! s:controller(...)$/;"	f
controllerEdit	vim-rails/autoload/rails.vim	/^function! s:controllerEdit(cmd,...)$/;"	f
controllerList	vim-rails/autoload/rails.vim	/^function! s:controllerList(A,L,P)$/;"	f
copy	vim-ruby/bin/vim-ruby-install.rb	/^  def copy(path)$/;"	f	class:TargetDirectory
copy	vim-ruby/bin/vim-ruby-install.rb	/^  def copy(source_path, target_path)$/;"	f	class:FileWriter
copy_outputs	vim-l9/autoload/l9/async.py	/^    def copy_outputs(self):$/;"	m	class:Worker
cox	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap cox :set <C-R>=&cursorline && &cursorcolumn ? 'nocursorline nocursorcolumn' : 'cursorline cursorcolumn'<CR><CR>$/;"	m
cr	supertab/plugin/supertab.vim	/^      let cr = (map =~? '\\(^\\|[^)]\\)<cr>')$/;"	v
createChangeCoverageListener	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:createChangeCoverageListener()$/;"	f
createDataBufferListener	FuzzyFinder/autoload/fuf.vim	/^function s:createDataBufferListener(dataFile)$/;"	f
createEditDataListener	FuzzyFinder/autoload/fuf.vim	/^function s:createEditDataListener()$/;"	f
crend	vim-endwise/plugin/endwise.vim	/^function! s:crend(always)$/;"	f
cs	vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
current_compiler	vim-bundler/compiler/bundler.vim	/^let current_compiler = "bundler"$/;"	v
current_compiler	vim-cucumber/compiler/cucumber.vim	/^let current_compiler = "cucumber"$/;"	v
current_compiler	vim-haml/compiler/haml.vim	/^let current_compiler = "haml"$/;"	v
current_compiler	vim-haml/compiler/sass.vim	/^let current_compiler = "sass"$/;"	v
current_compiler	vim-ruby/compiler/eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	vim-ruby/compiler/rake.vim	/^let current_compiler = "rake"$/;"	v
current_compiler	vim-ruby/compiler/rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	vim-ruby/compiler/ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	vim-ruby/compiler/rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
cursor_end	command-t/ruby/command-t/controller.rb	/^    def cursor_end$/;"	f	class:CommandT.Controller.quickfix
cursor_end	command-t/ruby/command-t/prompt.rb	/^    def cursor_end$/;"	f	class:CommandT.Prompt
cursor_left	command-t/ruby/command-t/controller.rb	/^    def cursor_left$/;"	f	class:CommandT.Controller.quickfix
cursor_left	command-t/ruby/command-t/prompt.rb	/^    def cursor_left$/;"	f	class:CommandT.Prompt
cursor_right	command-t/ruby/command-t/controller.rb	/^    def cursor_right$/;"	f	class:CommandT.Controller.quickfix
cursor_right	command-t/ruby/command-t/prompt.rb	/^    def cursor_right$/;"	f	class:CommandT.Prompt
cursor_start	command-t/ruby/command-t/controller.rb	/^    def cursor_start$/;"	f	class:CommandT.Controller.quickfix
cursor_start	command-t/ruby/command-t/prompt.rb	/^    def cursor_start$/;"	f	class:CommandT.Prompt
datadir	command-t/ruby/command-t/Makefile	/^datadir = $(datarootdir)$/;"	m
datarootdir	command-t/ruby/command-t/Makefile	/^datarootdir = $(prefix)\/share$/;"	m
dbext	dbext_2000/plugin/dbext.vim	/^augroup dbext$/;"	a
dbext#DB_DictionaryCreate	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_DictionaryCreate( drop_dict, which ) "{{{$/;"	f
dbext#DB_auBufDelete	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_auBufDelete(del_buf_nr) "{{{$/;"	f
dbext#DB_auVimLeavePre	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_auVimLeavePre() "{{{$/;"	f
dbext#DB_auVimLeavePreOld	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_auVimLeavePreOld() "{{{$/;"	f
dbext#DB_checkModeline	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_checkModeline()$/;"	f
dbext#DB_commit	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_commit()$/;"	f
dbext#DB_completeSettings	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_completeSettings(ArgLead, CmdLine, CursorPos)$/;"	f
dbext#DB_completeTables	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_completeTables(ArgLead, CmdLine, CursorPos)$/;"	f
dbext#DB_completeVariable	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_completeVariable(ArgLead, CmdLine, CursorPos)$/;"	f
dbext#DB_connect	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_connect()$/;"	f
dbext#DB_describeProcedure	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_describeProcedure(...)$/;"	f
dbext#DB_describeProcedurePrompt	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_describeProcedurePrompt()$/;"	f
dbext#DB_describeTable	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_describeTable(...)$/;"	f
dbext#DB_describeTablePrompt	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_describeTablePrompt()$/;"	f
dbext#DB_disconnect	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_disconnect(...)$/;"	f
dbext#DB_disconnectAll	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_disconnectAll()$/;"	f
dbext#DB_execFuncTypeWCheck	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_execFuncTypeWCheck(name,...)$/;"	f
dbext#DB_execFuncWCheck	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_execFuncWCheck(name,...)$/;"	f
dbext#DB_execRangeSql	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_execRangeSql() range$/;"	f
dbext#DB_execSql	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_execSql(query)$/;"	f
dbext#DB_execSqlTopX	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_execSqlTopX(...)$/;"	f
dbext#DB_execSqlWithDefault	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_execSqlWithDefault(...)$/;"	f
dbext#DB_getDictionaryName	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getDictionaryName( which ) "{{{$/;"	f
dbext#DB_getListColumn	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getListColumn(table_name, silent_mode, use_newline_sep ) $/;"	f
dbext#DB_getListConnections	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getListConnections()$/;"	f
dbext#DB_getListProcedure	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getListProcedure(...)$/;"	f
dbext#DB_getListTable	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getListTable(...)$/;"	f
dbext#DB_getListView	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getListView(...)$/;"	f
dbext#DB_getQueryUnderCursor	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getQueryUnderCursor()$/;"	f
dbext#DB_getSqlWithDefault	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getSqlWithDefault(...)$/;"	f
dbext#DB_getWType	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getWType(name)$/;"	f
dbext#DB_getWTypeDefault	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getWTypeDefault(name)$/;"	f
dbext#DB_historyList	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_historyList()$/;"	f
dbext#DB_listOption	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_listOption(...)$/;"	f
dbext#DB_orientationToggle	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_orientationToggle(...)$/;"	f
dbext#DB_parseQuery	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_parseQuery(query)$/;"	f
dbext#DB_removeVariable	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_removeVariable() range$/;"	f
dbext#DB_rollback	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_rollback()$/;"	f
dbext#DB_runPrevCmd	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_runPrevCmd(...)$/;"	f
dbext#DB_selectTablePrompt	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_selectTablePrompt()$/;"	f
dbext#DB_setMultipleOptions	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_setMultipleOptions(multi_options, ...)$/;"	f
dbext#DB_setTitle	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_setTitle() $/;"	f
dbext#DB_sqlVarAssignment	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_sqlVarAssignment(drop_var, stmt)$/;"	f
dbext#DB_sqlVarList	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_sqlVarList(...)$/;"	f
dbext#DB_sqlVarRangeAssignment	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_sqlVarRangeAssignment(remove_var) range$/;"	f
dbext#DB_switchPrevBuf	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_switchPrevBuf()$/;"	f
dbext#DB_windowClose	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_windowClose(buf_name)$/;"	f
dbext#DB_windowOpen	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_windowOpen()$/;"	f
dbext#DB_windowResize	dbext_2000/autoload/dbext.vim	/^function! dbext#DB_windowResize()$/;"	f
dbext_dbi#DBI_initialize	dbext_2000/autoload/dbext_dbi.vim	/^function! dbext_dbi#DBI_initialize()$/;"	f
dbext_dbi#DBI_load_perl_subs	dbext_2000/autoload/dbext_dbi.vim	/^function! dbext_dbi#DBI_load_perl_subs()$/;"	f
deactivateFufBuffer	FuzzyFinder/autoload/fuf.vim	/^function s:deactivateFufBuffer()$/;"	f
debug	vim-rails/autoload/rails.vim	/^function! s:debug(str)$/;"	f
default_open_command	command-t/ruby/command-t/controller.rb	/^    def default_open_command$/;"	f	class:CommandT.Controller.quickfix
define_commands	vim-bundler/plugin/bundler.vim	/^function! s:define_commands()$/;"	f
define_commands	vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands()$/;"	f
define_commands	vim-rake/plugin/rake.vim	/^function! s:define_commands()$/;"	f
define_navcommand	vim-rails/autoload/rails.vim	/^function! s:define_navcommand(name, projection, ...) abort$/;"	f
delete	command-t/ruby/command-t/controller.rb	/^    def delete$/;"	f	class:CommandT.Controller.quickfix
delete!	command-t/ruby/command-t/prompt.rb	/^    def delete!$/;"	f	class:CommandT.Prompt
deleteBookmark	nerdtree/autoload/nerdtree.vim	/^function! s:deleteBookmark(bm)$/;"	f
depends	command-t/Makefile	/^depends     := $(shell find ruby -name depend)$/;"	m
detect_bad_input	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:detect_bad_input()$/;"	f
determine_home_dir	vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_home_dir$/;"	F	class:Env
determine_source_directory	vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_source_directory$/;"	F	class:Env
determine_target_os	vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_target_os$/;"	F	class:Env
determine_vim_dir	vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_vim_dir$/;"	F	class:Env
diff_restore	vim-fugitive/plugin/fugitive.vim	/^function! s:diff_restore()$/;"	f
diff_window_count	vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count()$/;"	f
diffoff	vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff()$/;"	f
diffoff_all	vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir)$/;"	f
diffthis	vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis()$/;"	f
dir_name	vim-tags/plugin/tags.vim	/^    let dir_name = f[:-6]$/;"	v
disable_maps_and_commands	vim-scriptease/plugin/scriptease.vim	/^function! s:disable_maps_and_commands(file, buf)$/;"	f
disarm	vim-scriptease/plugin/scriptease.vim	/^function! s:disarm(...) abort$/;"	f
dispatch	vim-dispatch/autoload/dispatch.vim	/^function! s:dispatch(request) abort$/;"	f
dispatch#callback	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#callback(request) abort$/;"	f
dispatch#command_complete	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#command_complete(A, L, P) abort$/;"	f
dispatch#compile_command	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#compile_command(bang, args) abort$/;"	f
dispatch#compiler_for_program	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#compiler_for_program(program) abort$/;"	f
dispatch#compiler_options	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#compiler_options(compiler) abort$/;"	f
dispatch#complete	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#complete(file, ...) abort$/;"	f
dispatch#completed	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#completed(request) abort$/;"	f
dispatch#copen	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#copen(bang) abort$/;"	f
dispatch#expand	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#expand(string) abort$/;"	f
dispatch#focus	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#focus() abort$/;"	f
dispatch#focus_command	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#focus_command(bang, args) abort$/;"	f
dispatch#headless#handle	vim-dispatch/autoload/dispatch/headless.vim	/^function! dispatch#headless#handle(request) abort$/;"	f
dispatch#isolate	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#isolate(...)$/;"	f
dispatch#iterm#handle	vim-dispatch/autoload/dispatch/iterm.vim	/^function! dispatch#iterm#handle(request) abort$/;"	f
dispatch#iterm#spawn	vim-dispatch/autoload/dispatch/iterm.vim	/^function! dispatch#iterm#spawn(command, request, activate) abort$/;"	f
dispatch#prepare_make	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#prepare_make(request, ...) abort$/;"	f
dispatch#screen#handle	vim-dispatch/autoload/dispatch/screen.vim	/^function! dispatch#screen#handle(request) abort$/;"	f
dispatch#screen#spawn	vim-dispatch/autoload/dispatch/screen.vim	/^function! dispatch#screen#spawn(command, request) abort$/;"	f
dispatch#set_title	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#set_title(request)$/;"	f
dispatch#shellescape	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#shellescape(...) abort$/;"	f
dispatch#shellpipe	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#shellpipe(file) abort$/;"	f
dispatch#slash	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#slash() abort$/;"	f
dispatch#start	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#start(command, ...) abort$/;"	f
dispatch#tmux#handle	vim-dispatch/autoload/dispatch/tmux.vim	/^function! dispatch#tmux#handle(request) abort$/;"	f
dispatch#tmux#make	vim-dispatch/autoload/dispatch/tmux.vim	/^function! dispatch#tmux#make(request) abort$/;"	f
dispatch#tmux#poll	vim-dispatch/autoload/dispatch/tmux.vim	/^function! dispatch#tmux#poll() abort$/;"	f
dispatch#uniq	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#uniq(list) abort$/;"	f
dispatch#vim_executable	vim-dispatch/autoload/dispatch.vim	/^function! dispatch#vim_executable() abort$/;"	f
dispatch#windows#handle	vim-dispatch/autoload/dispatch/windows.vim	/^function! dispatch#windows#handle(request) abort$/;"	f
dispatch#windows#make	vim-dispatch/autoload/dispatch/windows.vim	/^function! dispatch#windows#make(request) abort$/;"	f
dispatch#windows#spawn	vim-dispatch/autoload/dispatch/windows.vim	/^function! dispatch#windows#spawn(title, exec, background) abort$/;"	f
dispatch#x11#handle	vim-dispatch/autoload/dispatch/x11.vim	/^function! dispatch#x11#handle(request) abort$/;"	f
dispatch_tmux	vim-dispatch/autoload/dispatch/tmux.vim	/^augroup dispatch_tmux$/;"	a
displayHelp	nerdtree/autoload/nerdtree.vim	/^function! s:displayHelp()$/;"	f
display_error	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:display_error()$/;"	f
dispose	command-t/ruby/command-t/prompt.rb	/^    def dispose$/;"	f	class:CommandT.Prompt
djump	vim-rails/autoload/rails.vim	/^function! s:djump(def)$/;"	f
dldflags	command-t/ruby/command-t/Makefile	/^dldflags = $/;"	m
docdir	command-t/ruby/command-t/Makefile	/^docdir = $(datarootdir)\/doc\/$(PACKAGE)$/;"	m
dosurround	vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
dot_file	command-t/ruby/command-t/match.c	/^    int     dot_file;               \/\/ boolean: true if str is a dot-file$/;"	m	struct:__anon1	file:
dotcmp	vim-rails/autoload/rails.vim	/^function! s:dotcmp(i1, i2)$/;"	f
dprint	vim-ruby/autoload/rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
ds	vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
dump	vim-scriptease/plugin/scriptease.vim	/^function! s:dump(bang, lnum, value) abort$/;"	f
dump_failure	command-t/spec/vim_formatter.rb	/^        def dump_failure counter, failure$/;"	f	class:Spec.Runner.Formatter.VimFormatter
dump_pending	command-t/spec/vim_formatter.rb	/^        def dump_pending; end$/;"	f	class:Spec.Runner.Formatter.VimFormatter
dump_summary	command-t/spec/vim_formatter.rb	/^        def dump_summary duration, example_count, failure_count, pending_count$/;"	f	class:Spec.Runner.Formatter.VimFormatter
dumpmsg	vim-scriptease/plugin/scriptease.vim	/^function! s:dumpmsg(bang, count, value) abort$/;"	f
dvidir	command-t/ruby/command-t/Makefile	/^dvidir = $(docdir)$/;"	m
echo	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echo(msg)$/;"	f
echoWarning	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echoWarning(msg)$/;"	f
edit	vim-rails/autoload/rails.vim	/^function! s:edit(cmd,file,...)$/;"	f
editcmdfor	vim-rails/autoload/rails.vim	/^function! s:editcmdfor(cmd)$/;"	f
em_insert_new_method	vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:em_insert_new_method(name, selection, parameters, retvals, block_end)$/;"	f
end_latency_measure	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:end_latency_measure()$/;"	f
endof	vim-rails/autoload/rails.vim	/^function! s:endof(lnum)$/;"	f
endswith	vim-rails/autoload/rails.vim	/^function! s:endswith(string,suffix)$/;"	f
ensure_appropriate_window_selection	command-t/ruby/command-t/controller.rb	/^    def ensure_appropriate_window_selection$/;"	f	class:CommandT.Controller.quickfix
ensure_cache_under_limit	command-t/ruby/command-t/scanner/file_scanner.rb	/^    def ensure_cache_under_limit$/;"	f	class:CommandT.FileScanner
entries	vim-unimpaired/plugin/unimpaired.vim	/^function! s:entries(path)$/;"	f
enumHelpTags	FuzzyFinder/autoload/fuf/help.vim	/^function s:enumHelpTags(tagFiles)$/;"	f
enumItems	FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:enumItems(dir)$/;"	f
enumItems	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:enumItems()$/;"	f
enumItems	FuzzyFinder/autoload/fuf/dir.vim	/^function s:enumItems(dir)$/;"	f
enumItems	FuzzyFinder/autoload/fuf/file.vim	/^function s:enumItems(dir)$/;"	f
enumNonCurrentItems	FuzzyFinder/autoload/fuf/file.vim	/^function s:enumNonCurrentItems(dir, bufNrPrev, cache)$/;"	f
enumTaggedFiles	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:enumTaggedFiles(tagFiles)$/;"	f
enumTags	FuzzyFinder/autoload/fuf/tag.vim	/^function s:enumTags(tagFiles)$/;"	f
environment	vim-rails/autoload/rails.vim	/^function! s:environment()$/;"	f
error	vim-rails/autoload/rails.vim	/^function! s:error(str)$/;"	f
error	vim-rails/plugin/rails.vim	/^function! s:error(str)$/;"	f
escape	vim-dispatch/autoload/dispatch/iterm.vim	/^function! s:escape(string)$/;"	f
escape	vim-dispatch/autoload/dispatch/windows.vim	/^function! s:escape(str)$/;"	f
escape_for_single_quotes	command-t/ruby/command-t/vim.rb	/^    def self.escape_for_single_quotes str$/;"	F	class:CommandT.VIM
escarg	vim-rails/autoload/rails.vim	/^function! s:escarg(p)$/;"	f
esccmd	vim-rails/autoload/rails.vim	/^function! s:esccmd(p)$/;"	f
evaluate	command-t/spec/spec_helper.rb	/^    def evaluate(*args); end$/;"	f	class:VIM
evaluateLearningRank	FuzzyFinder/autoload/fuf.vim	/^function s:evaluateLearningRank(word, stats)$/;"	f
exec_prefix	command-t/ruby/command-t/Makefile	/^exec_prefix = $(prefix)$/;"	m
execute	vim-l9/autoload/l9/async.py	/^    def execute(self, var_key, var_command, var_cwd, var_input, var_appends):$/;"	m	class:Asyncer
execute	vim-l9/autoload/l9/async.py	/^    def execute(self, worker):$/;"	m	class:Executor
existing	supertab/plugin/supertab.vim	/^    let existing = maparg('<tab>', 'i')$/;"	v
exists	command-t/ruby/command-t/vim.rb	/^    def self.exists? str$/;"	F	class:CommandT.VIM
exit	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:exit()$/;"	f
exit_visual_mode	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:exit_visual_mode()$/;"	f
expand	vim-dispatch/autoload/dispatch.vim	/^function! s:expand(string)$/;"	f
expandAbbrevMap	FuzzyFinder/autoload/fuf.vim	/^function s:expandAbbrevMap(pattern, abbrevMap)$/;"	f
expandSearchDir	FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:expandSearchDir(dir, level)$/;"	f
expand_placeholders	vim-rails/autoload/rails.vim	/^function! s:expand_placeholders(string, placeholders)$/;"	f
expr_map	supertab/plugin/supertab.vim	/^      let expr_map = has_key(map_dict, 'expr') && map_dict.expr$/;"	v
expr_map	supertab/plugin/supertab.vim	/^      let expr_map = maparg('<cr>', 'i') =~? '\\<cr>'$/;"	v
expr_map	supertab/plugin/supertab.vim	/^    let expr_map = 0$/;"	v
extend_projection	vim-rails/autoload/rails.vim	/^function! s:extend_projection(dest, src)$/;"	f
extout	command-t/ruby/command-t/Makefile	/^extout = $/;"	m
extout_prefix	command-t/ruby/command-t/Makefile	/^extout_prefix = $/;"	m
extractafter	vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
extractbefore	vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
extractdbvar	vim-rails/autoload/rails.vim	/^function! s:extractdbvar(str,arg)$/;"	f
feedkeys	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:feedkeys(keys)$/;"	f
file	vim-dispatch/autoload/dispatch.vim	/^function! s:file(request) abort$/;"	f
file_finder	command-t/ruby/command-t/controller.rb	/^    def file_finder$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
file_getline	vim-rails/autoload/rails.vim	/^function! s:file_getline(lnum,...) dict abort$/;"	f
file_lines	vim-rails/autoload/rails.vim	/^function! s:file_lines() dict abort$/;"	f
file_name	vim-rails/autoload/rails.vim	/^function! s:file_name() dict abort$/;"	f
file_path	vim-rails/autoload/rails.vim	/^function! s:file_path() dict abort$/;"	f
filterop	vim-scriptease/plugin/scriptease.vim	/^function! s:filterop(type) abort$/;"	f
find	command-t/ruby/command-t/match_window.rb	/^    def find char$/;"	f	class:CommandT.MatchWindow
find	vim-scriptease/plugin/scriptease.vim	/^function! s:find(count,cmd,file,lcd)$/;"	f
findItem	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:findItem(items, word)$/;"	f
findItem	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:findItem(items, word)$/;"	f
findItem	FuzzyFinder/autoload/fuf/buffer.vim	/^function s:findItem(items, word)$/;"	f
find_next	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:find_next(text)$/;"	f
find_root	vim-rake/plugin/rake.vim	/^function! s:find_root(path) abort$/;"	f
find_target_directory	vim-ruby/bin/vim-ruby-install.rb	/^  def find_target_directory$/;"	f	class:TargetDirectory
findamethod	vim-rails/autoload/rails.vim	/^function! s:findamethod(func,repl)$/;"	f
findasymbol	vim-rails/autoload/rails.vim	/^function! s:findasymbol(sym,repl)$/;"	f
findcmdfor	vim-rails/autoload/rails.vim	/^function! s:findcmdfor(cmd)$/;"	f
findedit	vim-rails/autoload/rails.vim	/^function! s:findedit(cmd,files,...) abort$/;"	f
finder	vim-ruby/bin/vim-ruby-install.rb	/^  def self.finder$/;"	F	class:TargetDirectory
findfromview	vim-rails/autoload/rails.vim	/^function! s:findfromview(func,repl)$/;"	f
findinrtp	vim-scriptease/plugin/scriptease.vim	/^function! s:findinrtp(path)$/;"	f
findit	vim-rails/autoload/rails.vim	/^function! s:findit(pat,repl)$/;"	f
findlayout	vim-rails/autoload/rails.vim	/^function! s:findlayout(name)$/;"	f
findview	vim-rails/autoload/rails.vim	/^function! s:findview(name)$/;"	f
first_file	vim-rake/plugin/rake.vim	/^function! s:first_file(choices)$/;"	f
fixindent	vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
fixturesEdit	vim-rails/autoload/rails.vim	/^function! s:fixturesEdit(cmd,...)$/;"	f
fixturesList	vim-rails/autoload/rails.vim	/^function! s:fixturesList(A,L,P)$/;"	f
flush	command-t/ruby/command-t/controller.rb	/^    def flush$/;"	f	class:CommandT.Controller.quickfix
flush	command-t/ruby/command-t/finder/file_finder.rb	/^    def flush$/;"	f	class:CommandT.FileFinder
flush	command-t/ruby/command-t/scanner/file_scanner.rb	/^    def flush$/;"	f	class:CommandT.FileScanner
fnameescape	vim-bundler/plugin/bundler.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	vim-rails/autoload/rails.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	vim-rake/plugin/rake.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	vim-scriptease/plugin/scriptease.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	vim-unimpaired/plugin/unimpaired.vim	/^function! s:fnameescape(file) abort$/;"	f
fnames	project-1.4.1/plugin/project.vim	/^                let fnames=Project_GetAllFnames(a:recurse, line('.'), ' ')$/;"	v
focus	command-t/ruby/command-t/match_window.rb	/^    def focus$/;"	f	class:CommandT.MatchWindow
focus	command-t/ruby/command-t/prompt.rb	/^    def focus$/;"	f	class:CommandT.Prompt
foo	vim-ruby/spec/indent/blocks_spec.rb	/^      def foo$/;"	f
foo	vim-ruby/spec/indent/blocks_spec.rb	/^      def foo(job)$/;"	f
format	vim-rails/autoload/rails.vim	/^function! s:format()$/;"	f
formatItemUsingCache	FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:formatItemUsingCache(item)$/;"	f
fuf#addMode	FuzzyFinder/autoload/fuf.vim	/^function fuf#addMode(modeName)$/;"	f
fuf#bookmarkdir#createHandler	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#createHandler(base)$/;"	f
fuf#bookmarkdir#getEditableDataNames	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#getEditableDataNames()$/;"	f
fuf#bookmarkdir#getSwitchOrder	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#getSwitchOrder()$/;"	f
fuf#bookmarkdir#onInit	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#onInit()$/;"	f
fuf#bookmarkdir#renewCache	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#renewCache()$/;"	f
fuf#bookmarkdir#requiresOnCommandPre	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#requiresOnCommandPre()$/;"	f
fuf#bookmarkfile#createHandler	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#createHandler(base)$/;"	f
fuf#bookmarkfile#getEditableDataNames	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#getEditableDataNames()$/;"	f
fuf#bookmarkfile#getSwitchOrder	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#getSwitchOrder()$/;"	f
fuf#bookmarkfile#onInit	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#onInit()$/;"	f
fuf#bookmarkfile#renewCache	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#renewCache()$/;"	f
fuf#bookmarkfile#requiresOnCommandPre	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#requiresOnCommandPre()$/;"	f
fuf#buffer#createHandler	FuzzyFinder/autoload/fuf/buffer.vim	/^function fuf#buffer#createHandler(base)$/;"	f
fuf#buffer#getEditableDataNames	FuzzyFinder/autoload/fuf/buffer.vim	/^function fuf#buffer#getEditableDataNames()$/;"	f
fuf#buffer#getSwitchOrder	FuzzyFinder/autoload/fuf/buffer.vim	/^function fuf#buffer#getSwitchOrder()$/;"	f
fuf#buffer#onInit	FuzzyFinder/autoload/fuf/buffer.vim	/^function fuf#buffer#onInit()$/;"	f
fuf#buffer#renewCache	FuzzyFinder/autoload/fuf/buffer.vim	/^function fuf#buffer#renewCache()$/;"	f
fuf#buffer#requiresOnCommandPre	FuzzyFinder/autoload/fuf/buffer.vim	/^function fuf#buffer#requiresOnCommandPre()$/;"	f
fuf#buffertag#createHandler	FuzzyFinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#createHandler(base)$/;"	f
fuf#buffertag#getEditableDataNames	FuzzyFinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#getEditableDataNames()$/;"	f
fuf#buffertag#getSwitchOrder	FuzzyFinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#getSwitchOrder()$/;"	f
fuf#buffertag#onInit	FuzzyFinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#onInit()$/;"	f
fuf#buffertag#renewCache	FuzzyFinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#renewCache()$/;"	f
fuf#buffertag#requiresOnCommandPre	FuzzyFinder/autoload/fuf/buffertag.vim	/^function fuf#buffertag#requiresOnCommandPre()$/;"	f
fuf#callbackfile#createHandler	FuzzyFinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#createHandler(base)$/;"	f
fuf#callbackfile#getEditableDataNames	FuzzyFinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#getEditableDataNames()$/;"	f
fuf#callbackfile#getSwitchOrder	FuzzyFinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#getSwitchOrder()$/;"	f
fuf#callbackfile#launch	FuzzyFinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#launch(initialPattern, partialMatching, prompt, exclude, listener)$/;"	f
fuf#callbackfile#onInit	FuzzyFinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#onInit()$/;"	f
fuf#callbackfile#renewCache	FuzzyFinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#renewCache()$/;"	f
fuf#callbackfile#requiresOnCommandPre	FuzzyFinder/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#requiresOnCommandPre()$/;"	f
fuf#callbackitem#createHandler	FuzzyFinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#createHandler(base)$/;"	f
fuf#callbackitem#getEditableDataNames	FuzzyFinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#getEditableDataNames()$/;"	f
fuf#callbackitem#getSwitchOrder	FuzzyFinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#getSwitchOrder()$/;"	f
fuf#callbackitem#launch	FuzzyFinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#launch(initialPattern, partialMatching, prompt, listener, items, forPath)$/;"	f
fuf#callbackitem#onInit	FuzzyFinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#onInit()$/;"	f
fuf#callbackitem#renewCache	FuzzyFinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#renewCache()$/;"	f
fuf#callbackitem#requiresOnCommandPre	FuzzyFinder/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#requiresOnCommandPre()$/;"	f
fuf#changelist#createHandler	FuzzyFinder/autoload/fuf/changelist.vim	/^function fuf#changelist#createHandler(base)$/;"	f
fuf#changelist#getEditableDataNames	FuzzyFinder/autoload/fuf/changelist.vim	/^function fuf#changelist#getEditableDataNames()$/;"	f
fuf#changelist#getSwitchOrder	FuzzyFinder/autoload/fuf/changelist.vim	/^function fuf#changelist#getSwitchOrder()$/;"	f
fuf#changelist#onInit	FuzzyFinder/autoload/fuf/changelist.vim	/^function fuf#changelist#onInit()$/;"	f
fuf#changelist#renewCache	FuzzyFinder/autoload/fuf/changelist.vim	/^function fuf#changelist#renewCache()$/;"	f
fuf#changelist#requiresOnCommandPre	FuzzyFinder/autoload/fuf/changelist.vim	/^function fuf#changelist#requiresOnCommandPre()$/;"	f
fuf#compareRanks	FuzzyFinder/autoload/fuf.vim	/^function fuf#compareRanks(i1, i2)$/;"	f
fuf#countModifiedFiles	FuzzyFinder/autoload/fuf.vim	/^function fuf#countModifiedFiles(files, time)$/;"	f
fuf#coveragefile#createHandler	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#createHandler(base)$/;"	f
fuf#coveragefile#getEditableDataNames	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#getEditableDataNames()$/;"	f
fuf#coveragefile#getSwitchOrder	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#getSwitchOrder()$/;"	f
fuf#coveragefile#onInit	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#onInit()$/;"	f
fuf#coveragefile#renewCache	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#renewCache()$/;"	f
fuf#coveragefile#requiresOnCommandPre	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#requiresOnCommandPre()$/;"	f
fuf#defineKeyMappingInHandler	FuzzyFinder/autoload/fuf.vim	/^function fuf#defineKeyMappingInHandler(key, func)$/;"	f
fuf#defineLaunchCommand	FuzzyFinder/autoload/fuf.vim	/^function fuf#defineLaunchCommand(CmdName, modeName, prefixInitialPattern, tempVars)$/;"	f
fuf#dir#createHandler	FuzzyFinder/autoload/fuf/dir.vim	/^function fuf#dir#createHandler(base)$/;"	f
fuf#dir#getEditableDataNames	FuzzyFinder/autoload/fuf/dir.vim	/^function fuf#dir#getEditableDataNames()$/;"	f
fuf#dir#getSwitchOrder	FuzzyFinder/autoload/fuf/dir.vim	/^function fuf#dir#getSwitchOrder()$/;"	f
fuf#dir#onInit	FuzzyFinder/autoload/fuf/dir.vim	/^function fuf#dir#onInit()$/;"	f
fuf#dir#renewCache	FuzzyFinder/autoload/fuf/dir.vim	/^function fuf#dir#renewCache()$/;"	f
fuf#dir#requiresOnCommandPre	FuzzyFinder/autoload/fuf/dir.vim	/^function fuf#dir#requiresOnCommandPre()$/;"	f
fuf#echoError	FuzzyFinder/autoload/fuf.vim	/^function fuf#echoError(msg)$/;"	f
fuf#echoWarning	FuzzyFinder/autoload/fuf.vim	/^function fuf#echoWarning(msg)$/;"	f
fuf#editDataFile	FuzzyFinder/autoload/fuf.vim	/^function fuf#editDataFile()$/;"	f
fuf#enumExpandedDirsEntries	FuzzyFinder/autoload/fuf.vim	/^function fuf#enumExpandedDirsEntries(dir, exclude)$/;"	f
fuf#expandTailDotSequenceToParentDir	FuzzyFinder/autoload/fuf.vim	/^function fuf#expandTailDotSequenceToParentDir(pattern)$/;"	f
fuf#file#createHandler	FuzzyFinder/autoload/fuf/file.vim	/^function fuf#file#createHandler(base)$/;"	f
fuf#file#getEditableDataNames	FuzzyFinder/autoload/fuf/file.vim	/^function fuf#file#getEditableDataNames()$/;"	f
fuf#file#getSwitchOrder	FuzzyFinder/autoload/fuf/file.vim	/^function fuf#file#getSwitchOrder()$/;"	f
fuf#file#onInit	FuzzyFinder/autoload/fuf/file.vim	/^function fuf#file#onInit()$/;"	f
fuf#file#renewCache	FuzzyFinder/autoload/fuf/file.vim	/^function fuf#file#renewCache()$/;"	f
fuf#file#requiresOnCommandPre	FuzzyFinder/autoload/fuf/file.vim	/^function fuf#file#requiresOnCommandPre()$/;"	f
fuf#formatPrompt	FuzzyFinder/autoload/fuf.vim	/^function fuf#formatPrompt(prompt, partialMatching, otherString)$/;"	f
fuf#getCurrentTagFiles	FuzzyFinder/autoload/fuf.vim	/^function fuf#getCurrentTagFiles()$/;"	f
fuf#getDataFileTime	FuzzyFinder/autoload/fuf.vim	/^function fuf#getDataFileTime(modeName, dataName)$/;"	f
fuf#getFileLines	FuzzyFinder/autoload/fuf.vim	/^function fuf#getFileLines(file)$/;"	f
fuf#getModeNames	FuzzyFinder/autoload/fuf.vim	/^function fuf#getModeNames()$/;"	f
fuf#getRunningHandler	FuzzyFinder/autoload/fuf.vim	/^function fuf#getRunningHandler()$/;"	f
fuf#givencmd#createHandler	FuzzyFinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#createHandler(base)$/;"	f
fuf#givencmd#getEditableDataNames	FuzzyFinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#getEditableDataNames()$/;"	f
fuf#givencmd#getSwitchOrder	FuzzyFinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#getSwitchOrder()$/;"	f
fuf#givencmd#launch	FuzzyFinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#launch(initialPattern, partialMatching, prompt, items)$/;"	f
fuf#givencmd#onInit	FuzzyFinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#onInit()$/;"	f
fuf#givencmd#renewCache	FuzzyFinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#renewCache()$/;"	f
fuf#givencmd#requiresOnCommandPre	FuzzyFinder/autoload/fuf/givencmd.vim	/^function fuf#givencmd#requiresOnCommandPre()$/;"	f
fuf#givendir#createHandler	FuzzyFinder/autoload/fuf/givendir.vim	/^function fuf#givendir#createHandler(base)$/;"	f
fuf#givendir#getEditableDataNames	FuzzyFinder/autoload/fuf/givendir.vim	/^function fuf#givendir#getEditableDataNames()$/;"	f
fuf#givendir#getSwitchOrder	FuzzyFinder/autoload/fuf/givendir.vim	/^function fuf#givendir#getSwitchOrder()$/;"	f
fuf#givendir#launch	FuzzyFinder/autoload/fuf/givendir.vim	/^function fuf#givendir#launch(initialPattern, partialMatching, prompt, items)$/;"	f
fuf#givendir#onInit	FuzzyFinder/autoload/fuf/givendir.vim	/^function fuf#givendir#onInit()$/;"	f
fuf#givendir#renewCache	FuzzyFinder/autoload/fuf/givendir.vim	/^function fuf#givendir#renewCache()$/;"	f
fuf#givendir#requiresOnCommandPre	FuzzyFinder/autoload/fuf/givendir.vim	/^function fuf#givendir#requiresOnCommandPre()$/;"	f
fuf#givenfile#createHandler	FuzzyFinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#createHandler(base)$/;"	f
fuf#givenfile#getEditableDataNames	FuzzyFinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#getEditableDataNames()$/;"	f
fuf#givenfile#getSwitchOrder	FuzzyFinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#getSwitchOrder()$/;"	f
fuf#givenfile#launch	FuzzyFinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#launch(initialPattern, partialMatching, prompt, items)$/;"	f
fuf#givenfile#onInit	FuzzyFinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#onInit()$/;"	f
fuf#givenfile#renewCache	FuzzyFinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#renewCache()$/;"	f
fuf#givenfile#requiresOnCommandPre	FuzzyFinder/autoload/fuf/givenfile.vim	/^function fuf#givenfile#requiresOnCommandPre()$/;"	f
fuf#glob	FuzzyFinder/autoload/fuf.vim	/^function fuf#glob(expr)$/;"	f
fuf#help#createHandler	FuzzyFinder/autoload/fuf/help.vim	/^function fuf#help#createHandler(base)$/;"	f
fuf#help#getEditableDataNames	FuzzyFinder/autoload/fuf/help.vim	/^function fuf#help#getEditableDataNames()$/;"	f
fuf#help#getSwitchOrder	FuzzyFinder/autoload/fuf/help.vim	/^function fuf#help#getSwitchOrder()$/;"	f
fuf#help#onInit	FuzzyFinder/autoload/fuf/help.vim	/^function fuf#help#onInit()$/;"	f
fuf#help#renewCache	FuzzyFinder/autoload/fuf/help.vim	/^function fuf#help#renewCache()$/;"	f
fuf#help#requiresOnCommandPre	FuzzyFinder/autoload/fuf/help.vim	/^function fuf#help#requiresOnCommandPre()$/;"	f
fuf#jumplist#createHandler	FuzzyFinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#createHandler(base)$/;"	f
fuf#jumplist#getEditableDataNames	FuzzyFinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#getEditableDataNames()$/;"	f
fuf#jumplist#getSwitchOrder	FuzzyFinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#getSwitchOrder()$/;"	f
fuf#jumplist#onInit	FuzzyFinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#onInit()$/;"	f
fuf#jumplist#renewCache	FuzzyFinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#renewCache()$/;"	f
fuf#jumplist#requiresOnCommandPre	FuzzyFinder/autoload/fuf/jumplist.vim	/^function fuf#jumplist#requiresOnCommandPre()$/;"	f
fuf#launch	FuzzyFinder/autoload/fuf.vim	/^function fuf#launch(modeName, initialPattern, partialMatching)$/;"	f
fuf#line#createHandler	FuzzyFinder/autoload/fuf/line.vim	/^function fuf#line#createHandler(base)$/;"	f
fuf#line#getEditableDataNames	FuzzyFinder/autoload/fuf/line.vim	/^function fuf#line#getEditableDataNames()$/;"	f
fuf#line#getSwitchOrder	FuzzyFinder/autoload/fuf/line.vim	/^function fuf#line#getSwitchOrder()$/;"	f
fuf#line#onInit	FuzzyFinder/autoload/fuf/line.vim	/^function fuf#line#onInit()$/;"	f
fuf#line#renewCache	FuzzyFinder/autoload/fuf/line.vim	/^function fuf#line#renewCache()$/;"	f
fuf#line#requiresOnCommandPre	FuzzyFinder/autoload/fuf/line.vim	/^function fuf#line#requiresOnCommandPre()$/;"	f
fuf#loadDataFile	FuzzyFinder/autoload/fuf.vim	/^function fuf#loadDataFile(modeName, dataName)$/;"	f
fuf#makeNonPathItem	FuzzyFinder/autoload/fuf.vim	/^function fuf#makeNonPathItem(word, menu)$/;"	f
fuf#makePathItem	FuzzyFinder/autoload/fuf.vim	/^function fuf#makePathItem(fname, menu, appendsDirSuffix)$/;"	f
fuf#makePatternSet	FuzzyFinder/autoload/fuf.vim	/^function fuf#makePatternSet(patternBase, interpreter, partialMatching)$/;"	f
fuf#makePreviewLinesAround	FuzzyFinder/autoload/fuf.vim	/^function fuf#makePreviewLinesAround(lines, indices, page, maxHeight)$/;"	f
fuf#makePreviewLinesForFile	FuzzyFinder/autoload/fuf.vim	/^function fuf#makePreviewLinesForFile(file, count, maxHeight)$/;"	f
fuf#mapToSetAbbrWithSnippedWordAsPath	FuzzyFinder/autoload/fuf.vim	/^function fuf#mapToSetAbbrWithSnippedWordAsPath(items)$/;"	f
fuf#mapToSetSerialIndex	FuzzyFinder/autoload/fuf.vim	/^function fuf#mapToSetSerialIndex(in, offset)$/;"	f
fuf#mrucmd#createHandler	FuzzyFinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#createHandler(base)$/;"	f
fuf#mrucmd#getEditableDataNames	FuzzyFinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#getEditableDataNames()$/;"	f
fuf#mrucmd#getSwitchOrder	FuzzyFinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#getSwitchOrder()$/;"	f
fuf#mrucmd#onCommandPre	FuzzyFinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#onCommandPre(cmd)$/;"	f
fuf#mrucmd#onInit	FuzzyFinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#onInit()$/;"	f
fuf#mrucmd#renewCache	FuzzyFinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#renewCache()$/;"	f
fuf#mrucmd#requiresOnCommandPre	FuzzyFinder/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#requiresOnCommandPre()$/;"	f
fuf#mrufile#createHandler	FuzzyFinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#createHandler(base)$/;"	f
fuf#mrufile#getEditableDataNames	FuzzyFinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#getEditableDataNames()$/;"	f
fuf#mrufile#getSwitchOrder	FuzzyFinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#getSwitchOrder()$/;"	f
fuf#mrufile#onInit	FuzzyFinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#onInit()$/;"	f
fuf#mrufile#renewCache	FuzzyFinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#renewCache()$/;"	f
fuf#mrufile#requiresOnCommandPre	FuzzyFinder/autoload/fuf/mrufile.vim	/^function fuf#mrufile#requiresOnCommandPre()$/;"	f
fuf#onComplete	FuzzyFinder/autoload/fuf.vim	/^function fuf#onComplete(findstart, base)$/;"	f
fuf#openBuffer	FuzzyFinder/autoload/fuf.vim	/^function fuf#openBuffer(bufNr, mode, reuse)$/;"	f
fuf#openFile	FuzzyFinder/autoload/fuf.vim	/^function fuf#openFile(path, mode, reuse)$/;"	f
fuf#openHelp	FuzzyFinder/autoload/fuf.vim	/^function fuf#openHelp(tag, mode)$/;"	f
fuf#openTag	FuzzyFinder/autoload/fuf.vim	/^function fuf#openTag(tag, mode)$/;"	f
fuf#prejump	FuzzyFinder/autoload/fuf.vim	/^function fuf#prejump(mode)$/;"	f
fuf#quickfix#createHandler	FuzzyFinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#createHandler(base)$/;"	f
fuf#quickfix#getEditableDataNames	FuzzyFinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#getEditableDataNames()$/;"	f
fuf#quickfix#getSwitchOrder	FuzzyFinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#getSwitchOrder()$/;"	f
fuf#quickfix#onInit	FuzzyFinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#onInit()$/;"	f
fuf#quickfix#renewCache	FuzzyFinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#renewCache()$/;"	f
fuf#quickfix#requiresOnCommandPre	FuzzyFinder/autoload/fuf/quickfix.vim	/^function fuf#quickfix#requiresOnCommandPre()$/;"	f
fuf#saveDataFile	FuzzyFinder/autoload/fuf.vim	/^function fuf#saveDataFile(modeName, dataName, items)$/;"	f
fuf#setAbbrWithFormattedWord	FuzzyFinder/autoload/fuf.vim	/^function fuf#setAbbrWithFormattedWord(item, abbrIndex)$/;"	f
fuf#setOneTimeVariables	FuzzyFinder/autoload/fuf.vim	/^function fuf#setOneTimeVariables(...)$/;"	f
fuf#splitPath	FuzzyFinder/autoload/fuf.vim	/^function fuf#splitPath(path)$/;"	f
fuf#suffixNumber	FuzzyFinder/autoload/fuf.vim	/^function fuf#suffixNumber(str)$/;"	f
fuf#tag#createHandler	FuzzyFinder/autoload/fuf/tag.vim	/^function fuf#tag#createHandler(base)$/;"	f
fuf#tag#getEditableDataNames	FuzzyFinder/autoload/fuf/tag.vim	/^function fuf#tag#getEditableDataNames()$/;"	f
fuf#tag#getSwitchOrder	FuzzyFinder/autoload/fuf/tag.vim	/^function fuf#tag#getSwitchOrder()$/;"	f
fuf#tag#onInit	FuzzyFinder/autoload/fuf/tag.vim	/^function fuf#tag#onInit()$/;"	f
fuf#tag#renewCache	FuzzyFinder/autoload/fuf/tag.vim	/^function fuf#tag#renewCache()$/;"	f
fuf#tag#requiresOnCommandPre	FuzzyFinder/autoload/fuf/tag.vim	/^function fuf#tag#requiresOnCommandPre()$/;"	f
fuf#taggedfile#createHandler	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#createHandler(base)$/;"	f
fuf#taggedfile#getEditableDataNames	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#getEditableDataNames()$/;"	f
fuf#taggedfile#getSwitchOrder	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#getSwitchOrder()$/;"	f
fuf#taggedfile#onInit	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#onInit()$/;"	f
fuf#taggedfile#renewCache	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#renewCache()$/;"	f
fuf#taggedfile#requiresOnCommandPre	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#requiresOnCommandPre()$/;"	f
fuf#updateMruList	FuzzyFinder/autoload/fuf.vim	/^function fuf#updateMruList(mrulist, newItem, maxItem, exclude)$/;"	f
fugitive	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#detect	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#detect(path)$/;"	f
fugitive#extract_git_dir	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#foldtext	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#head	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#head(...)$/;"	f
fugitive#is_git_dir	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#reload_status	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...)$/;"	f
fugitive#statusline	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...)$/;"	f
fugitive_blame	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_foldtext	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_foldtext$/;"	a
fugitive_remove	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_temp	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
fugitive_utility	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_utility$/;"	a
function	vim-bundler/plugin/bundler.vim	/^function! s:function(name) abort$/;"	f
function	vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
function	vim-rails/autoload/rails.vim	/^function! s:function(name)$/;"	f
function	vim-rails/plugin/rails.vim	/^function! s:function(name)$/;"	f
function	vim-rake/plugin/rake.vim	/^function! s:function(name) abort$/;"	f
function	vim-scriptease/plugin/scriptease.vim	/^function! s:function(name) abort$/;"	f
fuzzyglob	vim-rails/autoload/rails.vim	/^function! s:fuzzyglob(arg)$/;"	f
fuzzyglob	vim-rake/plugin/rake.vim	/^function! s:fuzzyglob(arg)$/;"	f
g!	vim-scriptease/plugin/scriptease.vim	/^nmap g! <Plug>ScripteaseFilter$/;"	m
g!!	vim-scriptease/plugin/scriptease.vim	/^nmap g!! <Plug>ScripteaseFilter_$/;"	m
g%	matchit/plugin/matchit.vim	/^nnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'n') <CR>$/;"	m
g%	matchit/plugin/matchit.vim	/^onoremap <silent> g% v:<C-U>call <SID>Match_wrapper('',0,'o') <CR>$/;"	m
g%	matchit/plugin/matchit.vim	/^vnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'v') <CR>m'gv``$/;"	m
g:NERDTreeAutoDeleteBuffer	nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeCreator	nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirNode	nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeFileNode	nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeIgnore	nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeKeyMap	nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMenuController	nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeOpener	nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreeSortOrder	nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"$/;"	v
g:ST_WIN_CMD	genutils-2.5/autoload/genutils.vim	/^let g:ST_WIN_CMD = 0 | let g:ST_WIN_SH = 1 | let g:ST_UNIX = 2$/;"	v
g:SuperTabClosePreviewOnPopupClose	supertab/plugin/supertab.vim	/^    let g:SuperTabClosePreviewOnPopupClose = 0$/;"	v
g:SuperTabCompletionContexts	supertab/plugin/supertab.vim	/^    let g:SuperTabCompletionContexts = ['s:ContextText']$/;"	v
g:SuperTabContextDefaultCompletionType	supertab/plugin/supertab.vim	/^    let g:SuperTabContextDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabCrMapping	supertab/plugin/supertab.vim	/^    let g:SuperTabCrMapping = 1$/;"	v
g:SuperTabDefaultCompletionType	supertab/plugin/supertab.vim	/^    let g:SuperTabDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabLongestEnhanced	supertab/plugin/supertab.vim	/^    let g:SuperTabLongestEnhanced = 0$/;"	v
g:SuperTabLongestHighlight	supertab/plugin/supertab.vim	/^    let g:SuperTabLongestHighlight = 0$/;"	v
g:SuperTabMappingBackward	supertab/plugin/supertab.vim	/^    let g:SuperTabMappingBackward = '<s-tab>'$/;"	v
g:SuperTabMappingForward	supertab/plugin/supertab.vim	/^    let g:SuperTabMappingForward = '<tab>'$/;"	v
g:SuperTabMappingTabLiteral	supertab/plugin/supertab.vim	/^    let g:SuperTabMappingTabLiteral = '<c-tab>'$/;"	v
g:SuperTabNoCompleteAfter	supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = ['^', '\\s']$/;"	v
g:SuperTabNoCompleteAfter	supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = []$/;"	v
g:SuperTabNoCompleteBefore	supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = ['\\k']$/;"	v
g:SuperTabNoCompleteBefore	supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = []$/;"	v
g:SuperTabRetainCompletionDuration	supertab/plugin/supertab.vim	/^    let g:SuperTabRetainCompletionDuration = 'insert'$/;"	v
g:SuperTabUndoBreak	supertab/plugin/supertab.vim	/^    let g:SuperTabUndoBreak = 0$/;"	v
g:autoloaded_dispatch	vim-dispatch/autoload/dispatch.vim	/^let g:autoloaded_dispatch = 1$/;"	v
g:autoloaded_dispatch_headless	vim-dispatch/autoload/dispatch/headless.vim	/^let g:autoloaded_dispatch_headless = 1$/;"	v
g:autoloaded_dispatch_iterm	vim-dispatch/autoload/dispatch/iterm.vim	/^let g:autoloaded_dispatch_iterm = 1$/;"	v
g:autoloaded_dispatch_screen	vim-dispatch/autoload/dispatch/screen.vim	/^let g:autoloaded_dispatch_screen = 1$/;"	v
g:autoloaded_dispatch_tmux	vim-dispatch/autoload/dispatch/tmux.vim	/^let g:autoloaded_dispatch_tmux = 1$/;"	v
g:autoloaded_dispatch_windows	vim-dispatch/autoload/dispatch/windows.vim	/^let g:autoloaded_dispatch_windows = 1$/;"	v
g:autoloaded_dispatch_x11	vim-dispatch/autoload/dispatch/x11.vim	/^let g:autoloaded_dispatch_x11 = 1$/;"	v
g:autoloaded_rails	vim-rails/autoload/rails.vim	/^let g:autoloaded_rails = '5.0'$/;"	v
g:command_t_loaded	command-t/plugin/command-t.vim	/^let g:command_t_loaded = 1$/;"	v
g:cucumber_languages	vim-cucumber/syntax/cucumber.vim	/^let g:cucumber_languages = {$/;"	v
g:dbext_default_menu_mode	dbext_2000/plugin/dbext.vim	/^    let g:dbext_default_menu_mode = 3$/;"	v
g:dbext_default_usermaps	dbext_2000/plugin/dbext.vim	/^    let g:dbext_default_usermaps = 1$/;"	v
g:dbext_map_or_cmd	dbext_2000/plugin/dbext.vim	/^        let g:dbext_map_or_cmd = 'cmd'$/;"	v
g:dbext_map_or_cmd	dbext_2000/plugin/dbext.vim	/^        let g:dbext_map_or_cmd = 'map'$/;"	v
g:dbext_map_prefix	dbext_2000/plugin/dbext.vim	/^    let g:dbext_map_prefix = '<Leader>s'$/;"	v
g:dbext_rows_affected	dbext_2000/plugin/dbext.vim	/^    let g:dbext_rows_affected = 0$/;"	v
g:did_ft	snipmate.vim/plugin/snipMate.vim	/^let g:did_ft = {}$/;"	v
g:did_ruby_ftplugin_functions	vim-ruby/ftplugin/ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:dispatch_handlers	vim-dispatch/plugin/dispatch.vim	/^  let g:dispatch_handlers = [$/;"	v
g:eruby_default_subtype	vim-ruby/ftplugin/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	vim-ruby/syntax/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:fugitive_git_executable	vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:haml_self_closing_tags	vim-haml/indent/haml.vim	/^  let g:haml_self_closing_tags = 'base|link|meta|br|hr|img|input'$/;"	v
g:loaded_autoload_l9	vim-l9/autoload/l9.vim	/^let g:loaded_autoload_l9 = 1$/;"	v
g:loaded_bundler	vim-bundler/plugin/bundler.vim	/^let g:loaded_bundler = 1$/;"	v
g:loaded_dbext	dbext_2000/plugin/dbext.vim	/^let g:loaded_dbext = 2000$/;"	v
g:loaded_dbext_auto	dbext_2000/autoload/dbext.vim	/^let g:loaded_dbext_auto = 2000$/;"	v
g:loaded_dbext_dbi	dbext_2000/autoload/dbext_dbi.vim	/^    let g:loaded_dbext_dbi = -1$/;"	v
g:loaded_dbext_dbi	dbext_2000/autoload/dbext_dbi.vim	/^let g:loaded_dbext_dbi = 2000$/;"	v
g:loaded_dbext_dbi_msg	dbext_2000/autoload/dbext_dbi.vim	/^    let g:loaded_dbext_dbi_msg = 'Vim does not have perl support enabled'$/;"	v
g:loaded_dispatch	vim-dispatch/plugin/dispatch.vim	/^let g:loaded_dispatch = 1$/;"	v
g:loaded_endwise	vim-endwise/plugin/endwise.vim	/^let g:loaded_endwise = 1$/;"	v
g:loaded_fugitive	vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_nerdtree_autoload	nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_rails	vim-rails/plugin/rails.vim	/^let g:loaded_rails = 1$/;"	v
g:loaded_rake	vim-rake/plugin/rake.vim	/^let g:loaded_rake = 1$/;"	v
g:loaded_scriptease	vim-scriptease/plugin/scriptease.vim	/^let g:loaded_scriptease = 1$/;"	v
g:loaded_surround	vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_togglebg	vim-colors-solarized/autoload/togglebg.vim	/^let g:loaded_togglebg = 1$/;"	v
g:loaded_unimpaired	vim-unimpaired/plugin/unimpaired.vim	/^let g:loaded_unimpaired = 1$/;"	v
g:loaded_vim_tags	vim-tags/plugin/tags.vim	/^let g:loaded_vim_tags = 1$/;"	v
g:makeArgumentList	genutils-2.5/autoload/genutils.vim	/^let g:makeArgumentList = 'exec genutils#MakeArgumentList()'$/;"	v
g:makeArgumentString	genutils-2.5/autoload/genutils.vim	/^let g:makeArgumentString = 'exec genutils#MakeArgumentString()'$/;"	v
g:miniBufExplAutoStart	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplAutoStart = 1$/;"	v
g:miniBufExplAutoStart	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplAutoStart = g:miniBufExplorerAutoStart$/;"	v
g:miniBufExplBRSplit	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplBRSplit = g:miniBufExplSplitBelow$/;"	v
g:miniBufExplBRSplit	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplBRSplit = g:miniBufExplVSplit ? &splitright : &splitbelow$/;"	v
g:miniBufExplBuffersNeeded	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplBuffersNeeded = 2$/;"	v
g:miniBufExplBuffersNeeded	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplBuffersNeeded = g:miniBufExplorerMoreThanOne$/;"	v
g:miniBufExplCloseOnSelect	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplCloseOnSelect = 0$/;"	v
g:miniBufExplCycleArround	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplCycleArround = 0$/;"	v
g:miniBufExplDebugLevel	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplDebugLevel = 1$/;"	v
g:miniBufExplDebugLevel	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplDebugLevel = g:miniBufExplorerDebugLevel$/;"	v
g:miniBufExplDebugMode	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplDebugMode = 3$/;"	v
g:miniBufExplDebugMode	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplDebugMode = g:miniBufExplorerDebugMode$/;"	v
g:miniBufExplDebugOutput	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplDebugOutput = g:miniBufExplorerDebugOutput$/;"	v
g:miniBufExplDebugOutput	minibufexpl.vim/plugin/minibufexpl.vim	/^let g:miniBufExplDebugOutput = ''$/;"	v
g:miniBufExplFuncCallDepth	minibufexpl.vim/plugin/minibufexpl.vim	/^let g:miniBufExplFuncCallDepth = 0$/;"	v
g:miniBufExplHideWhenDiff	minibufexpl.vim/plugin/minibufexpl.vim	/^    let g:miniBufExplHideWhenDiff = 0$/;"	v
g:miniBufExplHideWhenDiff	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplHideWhenDiff = g:miniBufExplorerHideWhenDiff$/;"	v
g:miniBufExplMaxSize	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplMaxSize = 0$/;"	v
g:miniBufExplMaxSize	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplMaxSize = g:miniBufExplMaxHeight$/;"	v
g:miniBufExplMinSize	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplMinSize = 1$/;"	v
g:miniBufExplMinSize	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplMinSize = g:miniBufExplMinHeight$/;"	v
g:miniBufExplSetUT	minibufexpl.vim/plugin/minibufexpl.vim	/^    let g:miniBufExplSetUT = 1$/;"	v
g:miniBufExplShowBufNumbers	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplShowBufNumbers = 1$/;"	v
g:miniBufExplSortBy	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplSortBy = "number"$/;"	v
g:miniBufExplSplitToEdge	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplSplitToEdge = 1$/;"	v
g:miniBufExplStatusLineText	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplStatusLineText = "-MiniBufExplorer-"$/;"	v
g:miniBufExplTabWrap	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplTabWrap = 0$/;"	v
g:miniBufExplUseSingleClick	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplUseSingleClick = 0$/;"	v
g:miniBufExplVSplit	minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplVSplit = 0$/;"	v
g:multi_cursor_start_key	vim-multiple-cursors/plugin/multiple_cursors.vim	/^  let g:multi_cursor_start_key = g:multi_cursor_next_key$/;"	v
g:nerdtree_tabs_autoclose	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_autoclose = 1$/;"	v
g:nerdtree_tabs_focus_on_files	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_focus_on_files = 0$/;"	v
g:nerdtree_tabs_meaningful_tab_names	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_meaningful_tab_names = 1$/;"	v
g:nerdtree_tabs_no_startup_for_diff	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^    let g:nerdtree_tabs_no_startup_for_diff = 1$/;"	v
g:nerdtree_tabs_open_on_console_startup	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_open_on_console_startup = 0$/;"	v
g:nerdtree_tabs_open_on_gui_startup	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_open_on_gui_startup = 1$/;"	v
g:nerdtree_tabs_open_on_new_tab	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_open_on_new_tab = 1$/;"	v
g:nerdtree_tabs_smart_startup_focus	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_smart_startup_focus = 1$/;"	v
g:nerdtree_tabs_startup_cd	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_startup_cd = 1$/;"	v
g:nerdtree_tabs_synchronize_focus	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_synchronize_focus = 1$/;"	v
g:nerdtree_tabs_synchronize_view	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_synchronize_view = 1$/;"	v
g:proj_running	project-1.4.1/plugin/project.vim	/^        let g:proj_running = bufnr(bufname.'\\>')$/;"	v
g:rails#rake_errorformat	vim-rails/autoload/rails.vim	/^let g:rails#rake_errorformat = '%D(in\\ %f),'$/;"	v
g:rails_no_abbreviations	vim-rails/autoload/rails.vim	/^  let g:rails_no_abbreviations = 1$/;"	v
g:rake#errorformat	vim-rake/plugin/rake.vim	/^let g:rake#errorformat = '%D(in\\ %f),'$/;"	v
g:ruby_default_path	vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_default_path = map(split($RUBYLIB,':'), 'v:val ==# "." ? "" : v:val')$/;"	v
g:ruby_default_path	vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_default_path = s:query_path($HOME)$/;"	v
g:ruby_refactoring_map_keys	vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  let g:ruby_refactoring_map_keys = 1$/;"	v
g:ruby_version_paths	vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_version_paths[b:ruby_version] = s:query_path(fnamemodify(s:version_file, ':p:h'))$/;"	v
g:ruby_version_paths	vim-ruby/ftplugin/ruby.vim	/^  let g:ruby_version_paths = {}$/;"	v
g:rubycomplete_buffer_loading	vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_classes_in_global	vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_include_object	vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_rails	vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:tcomment#filetype_map	tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#filetype_map = {$/;"	v
g:tcomment#ignore_char_type	tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#ignore_char_type = 1   "{{{2$/;"	v
g:tcomment#replacements_c	tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#replacements_c = {$/;"	v
g:tcomment#replacements_xml	tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#replacements_xml = {$/;"	v
g:tcomment#syntax_substitute	tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#syntax_substitute = {$/;"	v
g:tcommentBlankLines	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentBlankLines = 1    "{{{2$/;"	v
g:tcommentBlockC	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentBlockC = {$/;"	v
g:tcommentBlockC2	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentBlockC2 = {$/;"	v
g:tcommentBlockXML	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentBlockXML = {$/;"	v
g:tcommentGuessFileType	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType = 0   "{{{2$/;"	v
g:tcommentGuessFileType_django	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_django = 1   "{{{2$/;"	v
g:tcommentGuessFileType_dsl	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_dsl = 'xml'   "{{{2$/;"	v
g:tcommentGuessFileType_eruby	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_eruby = 1   "{{{2$/;"	v
g:tcommentGuessFileType_html	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_html = 1   "{{{2$/;"	v
g:tcommentGuessFileType_php	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_php = 'html'   "{{{2$/;"	v
g:tcommentGuessFileType_smarty	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_smarty = 1   "{{{2$/;"	v
g:tcommentGuessFileType_tskeleton	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_tskeleton = 1   "{{{2$/;"	v
g:tcommentGuessFileType_vim	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_vim = 1   "{{{2$/;"	v
g:tcommentIgnoreTypes_php	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentIgnoreTypes_php = 'sql'   "{{{2$/;"	v
g:tcommentInlineC	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentInlineC = {$/;"	v
g:tcommentInlineXML	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentInlineXML = {$/;"	v
g:tcommentLineC	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentLineC = g:tcommentInlineC$/;"	v
g:tcommentMapLeader1	tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMapLeader1 = '<c-_>' "{{{2$/;"	v
g:tcommentMapLeader2	tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMapLeader2 = '<Leader>_' "{{{2$/;"	v
g:tcommentMapLeaderOp1	tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMapLeaderOp1 = 'gc' "{{{2$/;"	v
g:tcommentMapLeaderOp2	tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMapLeaderOp2 = 'gC' "{{{2$/;"	v
g:tcommentMaps	tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMaps = 1   "{{{2$/;"	v
g:tcommentModeExtra	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentModeExtra = ''   "{{{2$/;"	v
g:tcommentOpModeExtra	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentOpModeExtra = ''   "{{{2$/;"	v
g:tcommentOptions	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentOptions = {}   "{{{2$/;"	v
g:tcommentSyntaxMap	tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentSyntaxMap = {$/;"	v
g:tcommentTextObjectInlineComment	tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentTextObjectInlineComment = 'ic'   "{{{2$/;"	v
g:unimpaired_html_entities	vim-unimpaired/plugin/unimpaired.vim	/^let g:unimpaired_html_entities = {$/;"	v
g:vim_tags_auto_generate	vim-tags/plugin/tags.vim	/^    let g:vim_tags_auto_generate = 1$/;"	v
g:vim_tags_gems_tags_command	vim-tags/plugin/tags.vim	/^    let g:vim_tags_gems_tags_command = "ctags -R -f Gemfile.lock.tags `bundle show --paths` 2>\/dev\/null &"$/;"	v
g:vim_tags_project_tags_command	vim-tags/plugin/tags.vim	/^    let g:vim_tags_project_tags_command = "ctags -R {OPTIONS} {DIRECTORY} 2>\/dev\/null &"$/;"	v
g<C-]>	vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> g<C-]>      :<C-U>exe         "tjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
g]	vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> g]          :<C-U>exe       "tselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
generate_tags	vim-tags/plugin/tags.vim	/^fun! s:generate_tags(redraw)$/;"	f
genutils#AddNotifyWindowClose	genutils-2.5/autoload/genutils.vim	/^function! genutils#AddNotifyWindowClose(windowTitle, functionName)$/;"	f
genutils#AddToFCShellPre	genutils-2.5/autoload/genutils.vim	/^function! genutils#AddToFCShellPre(funcName)$/;"	f
genutils#AlignWordWithWordInPreviousLine	genutils-2.5/autoload/genutils.vim	/^function! genutils#AlignWordWithWordInPreviousLine()$/;"	f
genutils#ArrayVarExists	genutils-2.5/autoload/genutils.vim	/^function! genutils#ArrayVarExists(varName, index)$/;"	f
genutils#BinInsertSort	genutils-2.5/autoload/genutils.vim	/^function! genutils#BinInsertSort(cmp, direction) range$/;"	f
genutils#BinInsertSort2	genutils-2.5/autoload/genutils.vim	/^function! genutils#BinInsertSort2(start, end, cmp, direction, accessor, mover, context)$/;"	f
genutils#BinSearchForInsert	genutils-2.5/autoload/genutils.vim	/^function! genutils#BinSearchForInsert(start, end, line, cmp, direction)$/;"	f
genutils#BinSearchForInsert2	genutils-2.5/autoload/genutils.vim	/^function! genutils#BinSearchForInsert2(start, end, line, cmp, direction,$/;"	f
genutils#BinSearchList	genutils-2.5/autoload/genutils.vim	/^function! genutils#BinSearchList(list, start, end, item, cmp)$/;"	f
genutils#CenterWordInSpace	genutils-2.5/autoload/genutils.vim	/^function! genutils#CenterWordInSpace()$/;"	f
genutils#CheckWindowClose	genutils-2.5/autoload/genutils.vim	/^function! genutils#CheckWindowClose()$/;"	f
genutils#CleanDiffOptions	genutils-2.5/autoload/genutils.vim	/^function! genutils#CleanDiffOptions()$/;"	f
genutils#CleanupFileName	genutils-2.5/autoload/genutils.vim	/^function! genutils#CleanupFileName(fileName)$/;"	f
genutils#CleanupFileName2	genutils-2.5/autoload/genutils.vim	/^function! genutils#CleanupFileName2(fileName, win32ProtectedChars)$/;"	f
genutils#ClearAllSigns	genutils-2.5/autoload/genutils.vim	/^function! genutils#ClearAllSigns()$/;"	f
genutils#CloseWinNoEa	genutils-2.5/autoload/genutils.vim	/^function! genutils#CloseWinNoEa(winnr, force)$/;"	f
genutils#CloseWindow	genutils-2.5/autoload/genutils.vim	/^function! genutils#CloseWindow(win, force)$/;"	f
genutils#CmpByLength	genutils-2.5/autoload/genutils.vim	/^function! genutils#CmpByLength(line1, line2, ...)$/;"	f
genutils#CmpByLineLengthNname	genutils-2.5/autoload/genutils.vim	/^function! genutils#CmpByLineLengthNname(line1, line2, ...)$/;"	f
genutils#CmpByNumber	genutils-2.5/autoload/genutils.vim	/^function! genutils#CmpByNumber(line1, line2, ...)$/;"	f
genutils#CmpByString	genutils-2.5/autoload/genutils.vim	/^function! genutils#CmpByString(line1, line2, ...)$/;"	f
genutils#CmpByStringIgnoreCase	genutils-2.5/autoload/genutils.vim	/^function! genutils#CmpByStringIgnoreCase(line1, line2, ...)$/;"	f
genutils#CmpJavaImports	genutils-2.5/autoload/genutils.vim	/^function! genutils#CmpJavaImports(line1, line2, ...)$/;"	f
genutils#CommonPath	genutils-2.5/autoload/genutils.vim	/^function! genutils#CommonPath(path1, path2, ...)$/;"	f
genutils#CommonString	genutils-2.5/autoload/genutils.vim	/^function! genutils#CommonString(str1, str2)$/;"	f
genutils#CrUnProtectedCharsPattern	genutils-2.5/autoload/genutils.vim	/^function! genutils#CrUnProtectedCharsPattern(chars, ...)$/;"	f
genutils#CreateArgString	genutils-2.5/autoload/genutils.vim	/^function! genutils#CreateArgString(argList, sep, ...)$/;"	f
genutils#CurLineHasSign	genutils-2.5/autoload/genutils.vim	/^function! genutils#CurLineHasSign()$/;"	f
genutils#DeEscape	genutils-2.5/autoload/genutils.vim	/^function! genutils#DeEscape(str)$/;"	f
genutils#DebugShowArgs	genutils-2.5/autoload/genutils.vim	/^function! genutils#DebugShowArgs(...)$/;"	f
genutils#DefFCShellInstall	genutils-2.5/autoload/genutils.vim	/^function! genutils#DefFCShellInstall()$/;"	f
genutils#DefFCShellUninstall	genutils-2.5/autoload/genutils.vim	/^function! genutils#DefFCShellUninstall()$/;"	f
genutils#DefFileChangedShell	genutils-2.5/autoload/genutils.vim	/^function! genutils#DefFileChangedShell()$/;"	f
genutils#EatChar	genutils-2.5/autoload/genutils.vim	/^function! genutils#EatChar(pat)$/;"	f
genutils#Escape	genutils-2.5/autoload/genutils.vim	/^function! genutils#Escape(str, chars)$/;"	f
genutils#EscapeCommand	genutils-2.5/autoload/genutils.vim	/^function! genutils#EscapeCommand(cmd, args, pipe)$/;"	f
genutils#ExpandStr	genutils-2.5/autoload/genutils.vim	/^function! genutils#ExpandStr(str)$/;"	f
genutils#ExtractFuncListing	genutils-2.5/autoload/genutils.vim	/^function! genutils#ExtractFuncListing(funcName, hLines, tLines)$/;"	f
genutils#FindBufferForName	genutils-2.5/autoload/genutils.vim	/^function! genutils#FindBufferForName(fileName)$/;"	f
genutils#FindWindowForBuffer	genutils-2.5/autoload/genutils.vim	/^function! genutils#FindWindowForBuffer(bufferName, checkUnlisted)$/;"	f
genutils#GetBufNameForAu	genutils-2.5/autoload/genutils.vim	/^function! genutils#GetBufNameForAu(bufName)$/;"	f
genutils#GetColPosition	genutils-2.5/autoload/genutils.vim	/^function! genutils#GetColPosition(id)$/;"	f
genutils#GetLastWinnrInStack	genutils-2.5/autoload/genutils.vim	/^function! genutils#GetLastWinnrInStack(dir)$/;"	f
genutils#GetLinePosition	genutils-2.5/autoload/genutils.vim	/^function! genutils#GetLinePosition(id)$/;"	f
genutils#GetNextWinnrInStack	genutils-2.5/autoload/genutils.vim	/^function! genutils#GetNextWinnrInStack(dir)$/;"	f
genutils#GetPersistentVar	genutils-2.5/autoload/genutils.vim	/^function! genutils#GetPersistentVar(pluginName, persistentVar, default)$/;"	f
genutils#GetPreviewWinnr	genutils-2.5/autoload/genutils.vim	/^function! genutils#GetPreviewWinnr()$/;"	f
genutils#GetSelectedIndex	genutils-2.5/autoload/genutils.vim	/^function! genutils#GetSelectedIndex()$/;"	f
genutils#GetShellEnvType	genutils-2.5/autoload/genutils.vim	/^function! genutils#GetShellEnvType()$/;"	f
genutils#GetSpacer	genutils-2.5/autoload/genutils.vim	/^function! genutils#GetSpacer(width)$/;"	f
genutils#GetVimCmdOutput	genutils-2.5/autoload/genutils.vim	/^function! genutils#GetVimCmdOutput(cmd)$/;"	f
genutils#IsOnlyHorizontalWindow	genutils-2.5/autoload/genutils.vim	/^function! genutils#IsOnlyHorizontalWindow()$/;"	f
genutils#IsOnlyVerticalWindow	genutils-2.5/autoload/genutils.vim	/^function! genutils#IsOnlyVerticalWindow()$/;"	f
genutils#IsPositionSet	genutils-2.5/autoload/genutils.vim	/^function! genutils#IsPositionSet(id)$/;"	f
genutils#MakeArgumentList	genutils-2.5/autoload/genutils.vim	/^function! genutils#MakeArgumentList(...)$/;"	f
genutils#MakeArgumentString	genutils-2.5/autoload/genutils.vim	/^function! genutils#MakeArgumentString(...)$/;"	f
genutils#MapAppendCascaded	genutils-2.5/autoload/genutils.vim	/^function! genutils#MapAppendCascaded(lhs, rhs, mapMode)$/;"	f
genutils#MarkActiveWindow	genutils-2.5/autoload/genutils.vim	/^function! genutils#MarkActiveWindow()$/;"	f
genutils#MoveCurLineToWinLine	genutils-2.5/autoload/genutils.vim	/^function! genutils#MoveCurLineToWinLine(n)$/;"	f
genutils#MoveCursorToLastInWinStack	genutils-2.5/autoload/genutils.vim	/^function! genutils#MoveCursorToLastInWinStack(dir)$/;"	f
genutils#MoveCursorToNextInWinStack	genutils-2.5/autoload/genutils.vim	/^function! genutils#MoveCursorToNextInWinStack(dir)$/;"	f
genutils#MoveCursorToWindow	genutils-2.5/autoload/genutils.vim	/^function! genutils#MoveCursorToWindow(winno)$/;"	f
genutils#NumberOfWindows	genutils-2.5/autoload/genutils.vim	/^function! genutils#NumberOfWindows()$/;"	f
genutils#OnMS	genutils-2.5/autoload/genutils.vim	/^function! genutils#OnMS()$/;"	f
genutils#OpenWinNoEa	genutils-2.5/autoload/genutils.vim	/^function! genutils#OpenWinNoEa(winOpenCmd)$/;"	f
genutils#OptClearBuffer	genutils-2.5/autoload/genutils.vim	/^function! genutils#OptClearBuffer()$/;"	f
genutils#PathIsAbsolute	genutils-2.5/autoload/genutils.vim	/^function! genutils#PathIsAbsolute(path)$/;"	f
genutils#PathIsFileNameOnly	genutils-2.5/autoload/genutils.vim	/^function! genutils#PathIsFileNameOnly(path)$/;"	f
genutils#PromptForElement	genutils-2.5/autoload/genutils.vim	/^function! genutils#PromptForElement(array, default, msg, skip, useDialog,$/;"	f
genutils#PutPersistentVar	genutils-2.5/autoload/genutils.vim	/^function! genutils#PutPersistentVar(pluginName, persistentVar, value)$/;"	f
genutils#QSort	genutils-2.5/autoload/genutils.vim	/^function! genutils#QSort(cmp, direction) range$/;"	f
genutils#QSort2	genutils-2.5/autoload/genutils.vim	/^function! genutils#QSort2(start, end, cmp, direction, accessor, swapper, context)$/;"	f
genutils#QuoteStr	genutils-2.5/autoload/genutils.vim	/^function! genutils#QuoteStr(str)$/;"	f
genutils#RelPathFromDir	genutils-2.5/autoload/genutils.vim	/^function! genutils#RelPathFromDir(srcDir, tgtFile)$/;"	f
genutils#RelPathFromFile	genutils-2.5/autoload/genutils.vim	/^function! genutils#RelPathFromFile(srcFile, tgtFile)$/;"	f
genutils#RemoveFromFCShellPre	genutils-2.5/autoload/genutils.vim	/^function! genutils#RemoveFromFCShellPre(funcName)$/;"	f
genutils#RemoveNotifyWindowClose	genutils-2.5/autoload/genutils.vim	/^function! genutils#RemoveNotifyWindowClose(windowTitle)$/;"	f
genutils#ResetHardPosition	genutils-2.5/autoload/genutils.vim	/^function! genutils#ResetHardPosition(id)$/;"	f
genutils#ResetHardPositionWithContext	genutils-2.5/autoload/genutils.vim	/^function! genutils#ResetHardPositionWithContext(id)$/;"	f
genutils#ResetSoftPosition	genutils-2.5/autoload/genutils.vim	/^function! genutils#ResetSoftPosition(id)$/;"	f
genutils#ResetWindowSettings	genutils-2.5/autoload/genutils.vim	/^function! genutils#ResetWindowSettings()$/;"	f
genutils#ResetWindowSettings2	genutils-2.5/autoload/genutils.vim	/^function! genutils#ResetWindowSettings2(id)$/;"	f
genutils#RestoreActiveWindow	genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreActiveWindow()$/;"	f
genutils#RestoreHardPosition	genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreHardPosition(id)$/;"	f
genutils#RestoreHardPositionWithContext	genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreHardPositionWithContext(id)$/;"	f
genutils#RestoreSoftPosition	genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreSoftPosition(id)$/;"	f
genutils#RestoreVisualSelection	genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreVisualSelection(id)$/;"	f
genutils#RestoreWindowSettings	genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreWindowSettings()$/;"	f
genutils#RestoreWindowSettings2	genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreWindowSettings2(id)$/;"	f
genutils#Roman2Decimal	genutils-2.5/autoload/genutils.vim	/^function! genutils#Roman2Decimal(str)$/;"	f
genutils#SaveHardPosition	genutils-2.5/autoload/genutils.vim	/^function! genutils#SaveHardPosition(id)$/;"	f
genutils#SaveHardPositionWithContext	genutils-2.5/autoload/genutils.vim	/^function! genutils#SaveHardPositionWithContext(id)$/;"	f
genutils#SaveSoftPosition	genutils-2.5/autoload/genutils.vim	/^function! genutils#SaveSoftPosition(id)$/;"	f
genutils#SaveVisualSelection	genutils-2.5/autoload/genutils.vim	/^function! genutils#SaveVisualSelection(id)$/;"	f
genutils#SaveWindowSettings	genutils-2.5/autoload/genutils.vim	/^function! genutils#SaveWindowSettings()$/;"	f
genutils#SaveWindowSettings2	genutils-2.5/autoload/genutils.vim	/^function! genutils#SaveWindowSettings2(id, overwrite)$/;"	f
genutils#SetupScratchBuffer	genutils-2.5/autoload/genutils.vim	/^function! genutils#SetupScratchBuffer()$/;"	f
genutils#ShiftWordInSpace	genutils-2.5/autoload/genutils.vim	/^function! genutils#ShiftWordInSpace(dir)$/;"	f
genutils#ShowLinesWithSyntax	genutils-2.5/autoload/genutils.vim	/^function! genutils#ShowLinesWithSyntax() range$/;"	f
genutils#SilentDelete	genutils-2.5/autoload/genutils.vim	/^function! genutils#SilentDelete(arg1, ...)$/;"	f
genutils#SilentSubstitute	genutils-2.5/autoload/genutils.vim	/^function! genutils#SilentSubstitute(pat, cmd)$/;"	f
genutils#UnEscape	genutils-2.5/autoload/genutils.vim	/^function! genutils#UnEscape(str, chars)$/;"	f
genutils#UserDirComplete2	genutils-2.5/autoload/genutils.vim	/^function! genutils#UserDirComplete2(ArgLead, CmdLine, CursorPos, ...)$/;"	f
genutils#UserFileComplete	genutils-2.5/autoload/genutils.vim	/^function! genutils#UserFileComplete(ArgLead, CmdLine, CursorPos, smartSlash,$/;"	f
genutils#UserFileComplete2	genutils-2.5/autoload/genutils.vim	/^function! genutils#UserFileComplete2(ArgLead, CmdLine, CursorPos, ...)$/;"	f
genutils#UserFileExpand	genutils-2.5/autoload/genutils.vim	/^function! genutils#UserFileExpand(fileArgs)$/;"	f
getBufIndicator	FuzzyFinder/autoload/fuf/buffer.vim	/^function s:getBufIndicator(bufNr)$/;"	f
getChangesLines	FuzzyFinder/autoload/fuf/changelist.vim	/^function s:getChangesLines()$/;"	f
getCurrentHelpTagFiles	FuzzyFinder/autoload/fuf/help.vim	/^function s:getCurrentHelpTagFiles()$/;"	f
getEditableDataFiles	FuzzyFinder/autoload/fuf.vim	/^function s:getEditableDataFiles(modeName)$/;"	f
getFileType	FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:getFileType(bufNr)$/;"	f
getHelpTagEntries	FuzzyFinder/autoload/fuf/help.vim	/^function s:getHelpTagEntries(tagFile)$/;"	f
getJumpsLines	FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:getJumpsLines()$/;"	f
getJumpsLines	FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:getJumpsLines()$/;"	f
getLastBlockLength	FuzzyFinder/autoload/fuf.vim	/^function s:getLastBlockLength(pattern, patternIsPath)$/;"	f
getLinePattern	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:getLinePattern(lnum)$/;"	f
getMatchingIndex	FuzzyFinder/autoload/fuf/help.vim	/^function s:getMatchingIndex(lines, pattern)$/;"	f
getMatchingIndex	FuzzyFinder/autoload/fuf/tag.vim	/^function s:getMatchingIndex(lines, cmd)$/;"	f
getMatchingLineNumber	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:getMatchingLineNumber(lines, pattern, lnumBegin)$/;"	f
getSnippedHead	FuzzyFinder/autoload/fuf.vim	/^function s:getSnippedHead(head, baseLen)$/;"	f
getTagData	FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:getTagData(bufNrs)$/;"	f
getTagItems	FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:getTagItems(bufNr)$/;"	f
getTagNames	FuzzyFinder/autoload/fuf/tag.vim	/^function s:getTagNames(tagFile)$/;"	f
getTaggedFileList	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:getTaggedFileList(tagfile)$/;"	f
getWordBoundaries	FuzzyFinder/autoload/fuf.vim	/^function s:getWordBoundaries(word)$/;"	f
get_bool	command-t/ruby/command-t/controller.rb	/^    def get_bool name$/;"	f	class:CommandT.Controller.quickfix
get_bool	command-t/ruby/command-t/settings.rb	/^    def get_bool setting$/;"	f	class:CommandT.Settings
get_char	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_char()$/;"	f
get_cursor_highlight	command-t/ruby/command-t/match_window.rb	/^    def get_cursor_highlight$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
get_file_content	vim-multiple-cursors/spec/benchmark_spec.rb	/^def get_file_content()$/;"	f
get_file_content	vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def get_file_content()$/;"	f
get_list_or_string	command-t/ruby/command-t/controller.rb	/^    def get_list_or_string name$/;"	f	class:CommandT.Controller.quickfix
get_number	command-t/ruby/command-t/controller.rb	/^    def get_number name$/;"	f	class:CommandT.Controller.quickfix
get_number	command-t/ruby/command-t/settings.rb	/^    def get_number setting$/;"	f	class:CommandT.Settings
get_string	command-t/ruby/command-t/controller.rb	/^    def get_string name$/;"	f	class:CommandT.Controller.quickfix
get_text	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_text(region)$/;"	f
get_visual_region	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_visual_region(pos)$/;"	f
getchar	vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
getlist	vim-rails/autoload/rails.vim	/^function! s:getlist(arg, key)$/;"	f
gf	vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> gf         :<C-U>exe <SID>gf(v:count1,"gf",'edit')<CR>$/;"	m
gf	vim-ruby/ftplugin/ruby.vim	/^function! s:gf(count,map,edit) abort$/;"	f
github_url	vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(repo,url,rev,commit,path,type,line1,line2) abort$/;"	f
go_to	vim-ruby-refactoring/features/support/shared_methods.rb	/^def go_to line$/;"	f
gsub	vim-bundler/plugin/bundler.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gsub	vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gsub	vim-rails/autoload/rails.vim	/^function! s:gsub(str,pat,rep)$/;"	f
gsub	vim-rake/plugin/rake.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gsub	vim-scriptease/plugin/scriptease.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
handleFailedAssersion	vim-l9/plugin/l9.vim	/^  function s:handleFailedAssersion(expr)$/;"	f
handleLeftClick	nerdtree/autoload/nerdtree.vim	/^function! s:handleLeftClick()$/;"	f
handleMiddleMouse	nerdtree/autoload/nerdtree.vim	/^function! s:handleMiddleMouse()$/;"	f
handle_key	command-t/ruby/command-t/controller.rb	/^    def handle_key$/;"	f	class:CommandT.Controller.quickfix
handle_special_key	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:handle_special_key(key, mode)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getCompleteItems	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.getModeName()$/;"	f
handler.getModeName	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.getModeName()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPreviewHeight	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.getPrompt()$/;"	f
handler.getPrompt	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.getPrompt()$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.isOpenable	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePatternSet	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.makePreviewLines	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPost	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeEnterPre	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onModeLeavePost	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/buffer.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/callbackfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/callbackitem.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/changelist.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/dir.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/file.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/givencmd.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/givendir.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/givenfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/help.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/line.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/tag.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler.onOpen	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handlerBase.addStat	FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.addStat(pattern, word)$/;"	f
handlerBase.concretize	FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.concretize(deriv)$/;"	f
handlerBase.existsPrompt	FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.existsPrompt(line)$/;"	f
handlerBase.getMatchingCompleteItems	FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.getMatchingCompleteItems(patternBase)$/;"	f
handlerBase.onBs	FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onBs()$/;"	f
handlerBase.onComplete	FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onComplete(findstart, base)$/;"	f
handlerBase.onCr	FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onCr(openType)$/;"	f
handlerBase.onCursorMovedI	FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onCursorMovedI()$/;"	f
handlerBase.onDeleteWord	FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onDeleteWord()$/;"	f
handlerBase.onInsertLeave	FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onInsertLeave()$/;"	f
handlerBase.onPreviewBase	FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onPreviewBase(repeatable)$/;"	f
handlerBase.onRecallPattern	FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onRecallPattern(shift)$/;"	f
handlerBase.onSwitchMatching	FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onSwitchMatching()$/;"	f
handlerBase.onSwitchMode	FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.onSwitchMode(shift)$/;"	f
handlerBase.removePrompt	FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.removePrompt(line)$/;"	f
handlerBase.restorePrompt	FuzzyFinder/autoload/fuf.vim	/^function s:handlerBase.restorePrompt(line)$/;"	f
has_conceal	command-t/ruby/command-t/vim.rb	/^    def self.has_conceal?$/;"	F	class:CommandT.VIM
has_syntax	command-t/ruby/command-t/vim.rb	/^    def self.has_syntax?$/;"	F	class:CommandT.VIM
haystack_len	command-t/ruby/command-t/match.c	/^    long    haystack_len;           \/\/ length of same$/;"	m	struct:__anon1	file:
haystack_p	command-t/ruby/command-t/match.c	/^    char    *haystack_p;            \/\/ pointer to the path string to be searched$/;"	m	struct:__anon1	file:
hdrdir	command-t/ruby/command-t/Makefile	/^hdrdir = $(topdir)$/;"	m
help	project-1.4.1/plugin/project.vim	/^        cnoremap <buffer> help let g:proj_doinghelp = 1<CR>:help$/;"	m
helpermethods	vim-rails/autoload/rails.vim	/^function! s:helpermethods()$/;"	f
helptopic	vim-scriptease/plugin/scriptease.vim	/^function! s:helptopic()$/;"	f
hide	command-t/ruby/command-t/controller.rb	/^    def hide$/;"	f	class:CommandT.Controller
hide_cursor	command-t/ruby/command-t/match_window.rb	/^    def hide_cursor$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
highlightError	FuzzyFinder/autoload/fuf.vim	/^function s:highlightError()$/;"	f
highlightPrompt	FuzzyFinder/autoload/fuf.vim	/^function s:highlightPrompt(prompt)$/;"	f
highlight_cursor	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:highlight_cursor(pos)$/;"	f
highlight_region	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:highlight_region(region)$/;"	f
home	project-1.4.1/plugin/project.vim	/^                let home=s:GetHome(info, '')$/;"	v
hs_highlight_boolean	vim-colors-solarized/colors/solarized.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_delimiters	vim-colors-solarized/colors/solarized.vim	/^let hs_highlight_delimiters=1$/;"	v
htmldir	command-t/ruby/command-t/Makefile	/^htmldir = $(docdir)$/;"	m
iM	vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
iabbrev_map	supertab/plugin/supertab.vim	/^    let iabbrev_map = iabbrevs =~? '\\<cr>'$/;"	v
im	vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
includedir	command-t/ruby/command-t/Makefile	/^includedir = $(prefix)\/include$/;"	m
info	project-1.4.1/plugin/project.vim	/^                let info=s:RecursivelyConstructDirectives(line('.'))$/;"	v
infodir	command-t/ruby/command-t/Makefile	/^infodir = $(DESTDIR)\/usr\/share\/info$/;"	m
initOpenURL	vim-rails/autoload/rails.vim	/^function! s:initOpenURL()$/;"	f
initVariable	nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
init_settings	vim-multiple-cursors/plugin/multiple_cursors.vim	/^function! s:init_settings(settings)$/;"	f
initialize	FuzzyFinder/plugin/fuf.vim	/^function s:initialize()$/;"	f
initialize	command-t/ruby/command-t/controller.rb	/^    def initialize$/;"	f	class:CommandT.Controller
initialize	command-t/ruby/command-t/finder.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.Finder
initialize	command-t/ruby/command-t/finder/buffer_finder.rb	/^    def initialize$/;"	f	class:CommandT.BufferFinder
initialize	command-t/ruby/command-t/finder/file_finder.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.FileFinder
initialize	command-t/ruby/command-t/finder/jump_finder.rb	/^    def initialize$/;"	f	class:CommandT.JumpFinder
initialize	command-t/ruby/command-t/finder/tag_finder.rb	/^    def initialize options = {}$/;"	f	class:CommandT.TagFinder
initialize	command-t/ruby/command-t/match_window.rb	/^    def initialize options = {}$/;"	f	class:CommandT.MatchWindow
initialize	command-t/ruby/command-t/prompt.rb	/^    def initialize$/;"	f	class:CommandT.Prompt
initialize	command-t/ruby/command-t/scanner/file_scanner.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.FileScanner
initialize	command-t/ruby/command-t/scanner/tag_scanner.rb	/^    def initialize options = {}$/;"	f	class:CommandT.TagScanner
initialize	command-t/ruby/command-t/settings.rb	/^    def initialize$/;"	f	class:CommandT.Settings
initialize	vim-ruby/bin/vim-ruby-install.rb	/^    def initialize(path)$/;"	f	class:VimRubyInstaller.BackupDir
initialize	vim-ruby/bin/vim-ruby-install.rb	/^  def initialize(directory, writer)$/;"	f	class:TargetDirectory
initialize	vim-ruby/bin/vim-ruby-install.rb	/^  def initialize(ending, file_permissions=0644, directory_permissions=0755)$/;"	f	class:FileWriter
initialize	vim-ruby/bin/vim-ruby-install.rb	/^  def initialize(source, target)$/;"	f	class:VimRubyInstaller
inputreplacement	vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
inputtarget	vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
insert	vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
install	vim-ruby/bin/vim-ruby-install.rb	/^  def install$/;"	f	class:VimRubyInstaller
instaweb_url	vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(repo,rev,commit,path,type,...) abort$/;"	f
interpretPrimaryPatternForNonPath	FuzzyFinder/autoload/fuf.vim	/^function s:interpretPrimaryPatternForNonPath(pattern)$/;"	f
interpretPrimaryPatternForPath	FuzzyFinder/autoload/fuf.vim	/^function s:interpretPrimaryPatternForPath(pattern)$/;"	f
interpretPrimaryPatternForPathTail	FuzzyFinder/autoload/fuf.vim	/^function s:interpretPrimaryPatternForPathTail(pattern)$/;"	f
invertrange	vim-rails/autoload/rails.vim	/^function! s:invertrange(beg,end)$/;"	f
is_target_of_rspec_let	vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:is_target_of_rspec_let(name)$/;"	f
javascriptEdit	vim-rails/autoload/rails.vim	/^function! s:javascriptEdit(cmd,...)$/;"	f
javascriptList	vim-rails/autoload/rails.vim	/^function! s:javascriptList(A,L,P)$/;"	f
jump	vim-cucumber/ftplugin/cucumber.vim	/^function! s:jump(command,count)$/;"	f
jumpToBookmark	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^function s:jumpToBookmark(path, mode, pattern, lnum)$/;"	f
jumpToFirstChild	nerdtree/autoload/nerdtree.vim	/^function! s:jumpToFirstChild(node)$/;"	f
jumpToLastChild	nerdtree/autoload/nerdtree.vim	/^function! s:jumpToLastChild(node)$/;"	f
jumpToNextSibling	nerdtree/autoload/nerdtree.vim	/^function! s:jumpToNextSibling(node)$/;"	f
jumpToParent	nerdtree/autoload/nerdtree.vim	/^function! s:jumpToParent(node)$/;"	f
jumpToPrevSibling	nerdtree/autoload/nerdtree.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
jumpToRoot	nerdtree/autoload/nerdtree.vim	/^function! s:jumpToRoot()$/;"	f
jumpToTag	FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:jumpToTag(item, mode)$/;"	f
jump_finder	command-t/ruby/command-t/controller.rb	/^    def jump_finder$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
jumps	command-t/ruby/command-t/scanner/jump_scanner.rb	/^    def jumps$/;"	f	class:CommandT.JumpScanner
k	project-1.4.1/plugin/project.vim	/^            let k=k+1$/;"	v
k	project-1.4.1/plugin/project.vim	/^        let k=1$/;"	v
l9#async#execute	vim-l9/autoload/l9/async.vim	/^function l9#async#execute(key, cmd, cwd, input, appends)$/;"	f
l9#async#listActiveWorkers	vim-l9/autoload/l9/async.vim	/^function l9#async#listActiveWorkers()$/;"	f
l9#async#listWorkers	vim-l9/autoload/l9/async.vim	/^function l9#async#listWorkers()$/;"	f
l9#async#read	vim-l9/autoload/l9/async.vim	/^function l9#async#read(key)$/;"	f
l9#completeForInputHl	vim-l9/autoload/l9.vim	/^function l9#completeForInputHl(lead, line, pos)$/;"	f
l9#concat	vim-l9/autoload/l9.vim	/^function l9#concat(items)$/;"	f
l9#concatPaths	vim-l9/autoload/l9.vim	/^function l9#concatPaths(paths)$/;"	f
l9#convertWildcardToRegexp	vim-l9/autoload/l9.vim	/^function l9#convertWildcardToRegexp(expr)$/;"	f
l9#defineVariableDefault	vim-l9/autoload/l9.vim	/^function l9#defineVariableDefault(name, default)$/;"	f
l9#deleteAllBuffersExcept	vim-l9/autoload/l9.vim	/^function l9#deleteAllBuffersExcept(files)$/;"	f
l9#echoHl	vim-l9/autoload/l9.vim	/^function l9#echoHl(hl, msg, prefix, addingHistory)$/;"	f
l9#filterWithLimit	vim-l9/autoload/l9.vim	/^function l9#filterWithLimit(items, expr, limit)$/;"	f
l9#getPathSeparator	vim-l9/autoload/l9.vim	/^function l9#getPathSeparator()$/;"	f
l9#getSelectedText	vim-l9/autoload/l9.vim	/^function l9#getSelectedText()$/;"	f
l9#getVersion	vim-l9/autoload/l9.vim	/^function l9#getVersion()$/;"	f
l9#grepBuffers	vim-l9/autoload/l9.vim	/^function l9#grepBuffers(pattern, bufNrs)$/;"	f
l9#grepFiles	vim-l9/autoload/l9.vim	/^function l9#grepFiles(pattern, files)$/;"	f
l9#guardScriptLoading	vim-l9/autoload/l9.vim	/^function l9#guardScriptLoading(path, vimVersion, l9Version, exprs)$/;"	f
l9#hash224	vim-l9/autoload/l9.vim	/^function l9#hash224(str)$/;"	f
l9#inputHl	vim-l9/autoload/l9.vim	/^function l9#inputHl(hl, ...)$/;"	f
l9#isCompatible	vim-l9/autoload/l9.vim	/^function l9#isCompatible(ver)$/;"	f
l9#loadFilesToBuffers	vim-l9/autoload/l9.vim	/^function l9#loadFilesToBuffers(files)$/;"	f
l9#loadScript	vim-l9/autoload/l9.vim	/^function l9#loadScript(text)$/;"	f
l9#modifyPathRelativeToDir	vim-l9/autoload/l9.vim	/^function l9#modifyPathRelativeToDir(path, dir)$/;"	f
l9#moveToBufferWindowInCurrentTabpage	vim-l9/autoload/l9.vim	/^function l9#moveToBufferWindowInCurrentTabpage(bufNr)$/;"	f
l9#moveToBufferWindowInOtherTabpage	vim-l9/autoload/l9.vim	/^function l9#moveToBufferWindowInOtherTabpage(bufNr)$/;"	f
l9#notifyBalloonly	vim-l9/autoload/l9.vim	/^function l9#notifyBalloonly(msg)$/;"	f
l9#notifyExternally	vim-l9/autoload/l9.vim	/^function l9#notifyExternally(msg)$/;"	f
l9#notifyScreen	vim-l9/autoload/l9.vim	/^function l9#notifyScreen(msg)$/;"	f
l9#notifyTmux	vim-l9/autoload/l9.vim	/^function l9#notifyTmux(msg)$/;"	f
l9#placeSign	vim-l9/autoload/l9.vim	/^function l9#placeSign(linehl, text, texthl, locations)$/;"	f
l9#quickfix#compareEntries	vim-l9/autoload/l9/quickfix.vim	/^function l9#quickfix#compareEntries(e0, e1)$/;"	f
l9#quickfix#isWindowOpened	vim-l9/autoload/l9/quickfix.vim	/^function l9#quickfix#isWindowOpened()$/;"	f
l9#quickfix#openIfNotEmpty	vim-l9/autoload/l9/quickfix.vim	/^function l9#quickfix#openIfNotEmpty(onlyRecognized, holdCursor)$/;"	f
l9#quickfix#placeSign	vim-l9/autoload/l9/quickfix.vim	/^function l9#quickfix#placeSign()$/;"	f
l9#quickfix#setMakeResult	vim-l9/autoload/l9/quickfix.vim	/^function l9#quickfix#setMakeResult(lines)$/;"	f
l9#quickfix#sort	vim-l9/autoload/l9/quickfix.vim	/^function l9#quickfix#sort()$/;"	f
l9#quickfix#toggleWindow	vim-l9/autoload/l9/quickfix.vim	/^function l9#quickfix#toggleWindow()$/;"	f
l9#readFile	vim-l9/autoload/l9.vim	/^function l9#readFile(...)$/;"	f
l9#removeIf	vim-l9/autoload/l9.vim	/^function l9#removeIf(items, expr)$/;"	f
l9#removeLinesBetween	vim-l9/autoload/l9.vim	/^function l9#removeLinesBetween(lines, begin, end)$/;"	f
l9#shiftWinNextTabpage	vim-l9/autoload/l9.vim	/^function l9#shiftWinNextTabpage()$/;"	f
l9#shiftWinPrevTabpage	vim-l9/autoload/l9.vim	/^function l9#shiftWinPrevTabpage()$/;"	f
l9#snipHead	vim-l9/autoload/l9.vim	/^function l9#snipHead(str, len, mask)$/;"	f
l9#snipMid	vim-l9/autoload/l9.vim	/^function l9#snipMid(str, len, mask)$/;"	f
l9#snipTail	vim-l9/autoload/l9.vim	/^function l9#snipTail(str, len, mask)$/;"	f
l9#tempbuffer#close	vim-l9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#close(bufname)$/;"	f
l9#tempbuffer#isOpen	vim-l9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#isOpen(bufname)$/;"	f
l9#tempbuffer#moveTo	vim-l9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#moveTo(bufname)$/;"	f
l9#tempbuffer#openReadOnly	vim-l9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openReadOnly(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempbuffer#openScratch	vim-l9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openScratch(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempbuffer#openWritable	vim-l9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openWritable(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempvariables#end	vim-l9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#end(group)$/;"	f
l9#tempvariables#getList	vim-l9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#getList(group)$/;"	f
l9#tempvariables#set	vim-l9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#set(group, name, value)$/;"	f
l9#tempvariables#setList	vim-l9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#setList(group, variables)$/;"	f
l9#unique	vim-l9/autoload/l9.vim	/^function l9#unique(items)$/;"	f
l9#uniqueStably	vim-l9/autoload/l9.vim	/^function l9#uniqueStably(items)$/;"	f
l9#writeAll	vim-l9/autoload/l9.vim	/^function l9#writeAll()$/;"	f
l9#writeFile	vim-l9/autoload/l9.vim	/^function l9#writeFile(...)$/;"	f
l9#zip	vim-l9/autoload/l9.vim	/^function l9#zip(items)$/;"	f
lastmethod	vim-rails/autoload/rails.vim	/^function! s:lastmethod(...)$/;"	f
lastmethodline	vim-rails/autoload/rails.vim	/^function! s:lastmethodline(start)$/;"	f
lastopeningline	vim-rails/autoload/rails.vim	/^function! s:lastopeningline(pattern,limit,start)$/;"	f
layoutEdit	vim-rails/autoload/rails.vim	/^function! s:layoutEdit(cmd,...)$/;"	f
layoutList	vim-rails/autoload/rails.vim	/^function! s:layoutList(A,L,P)$/;"	f
ldflags	command-t/ruby/command-t/Makefile	/^ldflags  = -L. -arch i386 -arch x86_64 $/;"	m
leader	dbext_2000/plugin/dbext.vim	/^        let leader = g:mapleader$/;"	v
leader	dbext_2000/plugin/dbext.vim	/^    let leader = '\\'$/;"	v
leader	dbext_2000/plugin/dbext.vim	/^    let leader = escape(leader, '\\')$/;"	v
leave	command-t/ruby/command-t/controller.rb	/^    def leave$/;"	f	class:CommandT.Controller.quickfix
leave	command-t/ruby/command-t/match_window.rb	/^    def leave$/;"	f	class:CommandT.MatchWindow
lencompare	vim-scriptease/plugin/scriptease.vim	/^function! s:lencompare(a, b)$/;"	f
libdir	command-t/ruby/command-t/Makefile	/^libdir = $(exec_prefix)\/lib$/;"	m
libexecdir	command-t/ruby/command-t/Makefile	/^libexecdir = $(exec_prefix)\/libexec$/;"	m
libpath	command-t/ruby/command-t/Makefile	/^libpath = . $(libdir)$/;"	m
line_contains_filename?	command-t/ruby/command-t/scanner/jump_scanner.rb	/^    def line_contains_filename? line$/;"	f	class:CommandT.JumpScanner
linechars	vim-fugitive/plugin/fugitive.vim	/^function! s:linechars(pattern)$/;"	f
linepeak	vim-rails/autoload/rails.vim	/^function! s:linepeak()$/;"	f
lines	command-t/ruby/command-t/vim/screen.rb	/^      def self.lines$/;"	F	class:CommandT.VIM.Screen
listAroundFiles	FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:listAroundFiles(dir)$/;"	f
list_matches	command-t/ruby/command-t/controller.rb	/^    def list_matches$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
loaded_genutils	genutils-2.5/plugin/genutils.vim	/^let loaded_genutils = 205$/;"	v
loaded_matchit	matchit/plugin/matchit.vim	/^let loaded_matchit = 1$/;"	v
loaded_minibufexplorer	minibufexpl.vim/plugin/minibufexpl.vim	/^let loaded_minibufexplorer = 1$/;"	v
loaded_mru	mru.vim/plugin/mru.vim	/^let loaded_mru=1$/;"	v
loaded_nerd_tree	nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_project	project-1.4.1/plugin/project.vim	/^let loaded_project=1$/;"	v
loaded_snips	snipmate.vim/plugin/snipMate.vim	/^let loaded_snips = 1$/;"	v
loaded_supertab	supertab/plugin/supertab.vim	/^let loaded_supertab = 1$/;"	v
loaded_taglist	taglist_46/plugin/taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	taglist_46/plugin/taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	taglist_46/plugin/taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	taglist_46/plugin/taglist.vim	/^let loaded_taglist = 'available'$/;"	v
loaded_tcomment	tcomment_vim/plugin/tcomment.vim	/^let loaded_tcomment = 208$/;"	v
localeEdit	vim-rails/autoload/rails.vim	/^function! s:localeEdit(cmd,...)$/;"	f
localeList	vim-rails/autoload/rails.vim	/^function! s:localeList(A,L,P)$/;"	f
localedir	command-t/ruby/command-t/Makefile	/^localedir = $(datarootdir)\/locale$/;"	m
localstatedir	command-t/ruby/command-t/Makefile	/^localstatedir = $(prefix)\/var$/;"	m
lock	command-t/ruby/command-t/match_window.rb	/^    def lock$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
looped_symlink?	command-t/ruby/command-t/scanner/file_scanner.rb	/^    def looped_symlink? path$/;"	f	class:CommandT.FileScanner
mCommandT	command-t/ruby/command-t/ext.c	/^VALUE mCommandT         = 0; \/\/ module CommandT$/;"	v
main	tcomment_vim/spec/tcomment/issue30_test.c	/^int main()$/;"	f
main	tcomment_vim/spec/tcomment/issue30_test_2.c	/^int main()$/;"	f
main	tcomment_vim/spec/tcomment/issue30_test_3.c	/^int main()$/;"	f
main_syntax	vim-haml/syntax/haml.vim	/^  let main_syntax = 'haml'$/;"	v
main_syntax	vim-ruby/syntax/eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
make	vim-rails/autoload/rails.vim	/^function! s:make(bang, args, ...)$/;"	f
makeAdditionalMigemoPattern	FuzzyFinder/autoload/fuf.vim	/^function s:makeAdditionalMigemoPattern(pattern)$/;"	f
makeCtagsCmd	FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:makeCtagsCmd(bufNr)$/;"	f
makeFileAbbrInfo	FuzzyFinder/autoload/fuf.vim	/^function s:makeFileAbbrInfo(item, maxLenStats)$/;"	f
makeFuzzyMatchingExpr	FuzzyFinder/autoload/fuf.vim	/^function s:makeFuzzyMatchingExpr(target, pattern)$/;"	f
makeItem	FuzzyFinder/autoload/fuf/buffer.vim	/^function s:makeItem(nr)$/;"	f
makeItem	FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:makeItem(tag, itemMap)$/;"	f
makeItem	FuzzyFinder/autoload/fuf/changelist.vim	/^function s:makeItem(line)$/;"	f
makeItem	FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:makeItem(line, bufnrPrev)$/;"	f
makeItem	FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:makeItem(qfItem)$/;"	f
makePartialMatchingExpr	FuzzyFinder/autoload/fuf.vim	/^function s:makePartialMatchingExpr(target, pattern)$/;"	f
makeRefiningExpr	FuzzyFinder/autoload/fuf.vim	/^function s:makeRefiningExpr(pattern)$/;"	f
mandir	command-t/ruby/command-t/Makefile	/^mandir = $(DESTDIR)\/usr\/share\/man$/;"	m
map	command-t/ruby/command-t/controller.rb	/^    def map key, function, param = nil$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
map	supertab/plugin/supertab.vim	/^      let map = maparg('<cr>', 'i')$/;"	v
map	supertab/plugin/supertab.vim	/^      let map = s:ExpandMap(map)$/;"	v
map_dict	supertab/plugin/supertab.vim	/^      let map_dict = maparg('<cr>', 'i', 0, 1)$/;"	v
match_for	command-t/spec/command-t/match_spec.rb	/^  def match_for path, pattern$/;"	f
match_limit	command-t/ruby/command-t/controller.rb	/^    def match_limit$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
match_text_for_idx	command-t/ruby/command-t/match_window.rb	/^    def match_text_for_idx idx$/;"	f	class:CommandT.MatchWindow
match_type	vim-rails/autoload/rails.vim	/^function! s:match_type(type,...)$/;"	f
match_with_syntax_highlight	command-t/ruby/command-t/match_window.rb	/^    def match_with_syntax_highlight match$/;"	f	class:CommandT.MatchWindow
matchcursor	vim-rails/autoload/rails.vim	/^function! s:matchcursor(pat)$/;"	f
matches=	command-t/ruby/command-t/match_window.rb	/^    def matches= matches$/;"	f	class:CommandT.MatchWindow
matchinfo_t	command-t/ruby/command-t/match.c	/^} matchinfo_t;$/;"	t	typeref:struct:__anon1	file:
max_height	command-t/ruby/command-t/controller.rb	/^    def max_height$/;"	f	class:CommandT.Controller.quickfix
max_score_per_char	command-t/ruby/command-t/match.c	/^    double  max_score_per_char;$/;"	m	struct:__anon1	file:
memo	command-t/ruby/command-t/match.c	/^    double  *memo;                  \/\/ memoization$/;"	m	struct:__anon1	file:
menuRoot	dbext_2000/plugin/dbext.vim	/^        let menuRoot = '&Plugin.&dbext'$/;"	v
menuRoot	dbext_2000/plugin/dbext.vim	/^        let menuRoot = '&dbext'$/;"	v
menuRoot	dbext_2000/plugin/dbext.vim	/^        let menuRoot = 'dbext'$/;"	v
method	vim-ruby-refactoring/test/testcases.rb	/^def method$/;"	f
method_one	vim-ruby-refactoring/test/testcases.rb	/^  def method_one$/;"	f	class:Foo
method_two	vim-ruby-refactoring/test/testcases.rb	/^  def method_two$/;"	f	class:Foo
mextargs	vim-rails/autoload/rails.vim	/^function! s:mextargs(str,num)$/;"	f
migrationEdit	vim-rails/autoload/rails.vim	/^function! s:migrationEdit(cmd,...)$/;"	f
migrationList	vim-rails/autoload/rails.vim	/^function! s:migrationList(A,L,P)$/;"	f
migspc	vim-rails/autoload/rails.vim	/^function! s:migspc(line)$/;"	f
min_height	command-t/ruby/command-t/controller.rb	/^    def min_height$/;"	f	class:CommandT.Controller.quickfix
missing	command-t/ruby/command-t/extconf.rb	/^def missing item$/;"	f
mkeep	vim-rails/autoload/rails.vim	/^function! s:mkeep(str)$/;"	f
mkpath	vim-ruby/bin/vim-ruby-install.rb	/^  def mkpath(directory)$/;"	f	class:FileWriter
model	vim-rails/autoload/rails.vim	/^function! s:model(...)$/;"	f
moveToOtherTabpageOpeningBuffer	vim-l9/autoload/l9.vim	/^function s:moveToOtherTabpageOpeningBuffer(bufNr)$/;"	f
move_cursor_to_selected_line	command-t/ruby/command-t/match_window.rb	/^    def move_cursor_to_selected_line$/;"	f	class:CommandT.MatchWindow
multiple_cursors#debug	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#debug()$/;"	f
multiple_cursors#find	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#find(start, end, pattern)$/;"	f
multiple_cursors#get_latency_debug_file	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#get_latency_debug_file()$/;"	f
multiple_cursors#new	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#new(mode)$/;"	f
multiple_cursors#prev	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#prev()$/;"	f
multiple_cursors#skip	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#skip()$/;"	f
mysearchpair	vim-endwise/plugin/endwise.vim	/^function! s:mysearchpair(beginpat,endpat,synpat)$/;"	f
names	vim-scriptease/plugin/scriptease.vim	/^function! s:names() abort$/;"	f
navcommand	vim-rake/plugin/rake.vim	/^function! s:navcommand(name) abort$/;"	f
needle_len	command-t/ruby/command-t/match.c	/^    long    needle_len;             \/\/ length of same$/;"	m	struct:__anon1	file:
needle_p	command-t/ruby/command-t/match.c	/^    char    *needle_p;              \/\/ pointer to search string (needle)$/;"	m	struct:__anon1	file:
nerdtree#bookmarkNode	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#bookmarkNode(...)$/;"	f
nerdtree#bufInWindows	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#bufInWindows(bnum)$/;"	f
nerdtree#centerView	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#centerView()$/;"	f
nerdtree#chRoot	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#chRoot(node)$/;"	f
nerdtree#chRootCwd	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#chRootCwd()$/;"	f
nerdtree#checkForBrowse	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#clearBookmarks	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#clearBookmarks(bookmarks)$/;"	f
nerdtree#closeTree	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTree()$/;"	f
nerdtree#closeTreeIfOpen	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeIfOpen()$/;"	f
nerdtree#closeTreeIfQuitOnOpen	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeIfQuitOnOpen()$/;"	f
nerdtree#compareBookmarks	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareBookmarks(first, second)$/;"	f
nerdtree#compareNodes	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#completeBookmarks	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#createDefaultBindings	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#createDefaultBindings()$/;"	f
nerdtree#deprecated	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#dumpHelp	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#dumpHelp()$/;"	f
nerdtree#echo	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#escChars	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#escChars()$/;"	f
nerdtree#exec	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f
nerdtree#findAndRevealPath	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#findAndRevealPath()$/;"	f
nerdtree#firstUsableWindow	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#firstUsableWindow()$/;"	f
nerdtree#getPath	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#getPath(ln)$/;"	f
nerdtree#getTreeWinNum	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#getTreeWinNum()$/;"	f
nerdtree#has_opt	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#indentLevelFor	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#indentLevelFor(line)$/;"	f
nerdtree#invokeKeyMap	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#invokeKeyMap(key)$/;"	f
nerdtree#isTreeOpen	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#isTreeOpen()$/;"	f
nerdtree#isWindowUsable	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#isWindowUsable(winnumber)$/;"	f
nerdtree#jumpToChild	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#jumpToChild(currentNode, direction)$/;"	f
nerdtree#jumpToSibling	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#jumpToSibling(currentNode, forward)$/;"	f
nerdtree#loadClassFiles	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#openBookmark	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#openBookmark(name)$/;"	f
nerdtree#postSourceActions	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#promptToDelBuffer	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#promptToDelBuffer(bufnum, msg)$/;"	f
nerdtree#putCursorInTreeWin	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#putCursorInTreeWin()$/;"	f
nerdtree#putCursorOnBookmarkTable	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#putCursorOnBookmarkTable()$/;"	f
nerdtree#renderBookmarks	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderBookmarks()$/;"	f
nerdtree#renderView	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#renderViewSavingPosition	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderViewSavingPosition()$/;"	f
nerdtree#restoreScreenState	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#restoreScreenState()$/;"	f
nerdtree#revealBookmark	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#revealBookmark(name)$/;"	f
nerdtree#runningWindows	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#saveScreenState	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#saveScreenState()$/;"	f
nerdtree#stripMarkupFromLine	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#stripMarkupFromLine(line, removeLeadingSpaces)$/;"	f
nerdtree#tabpagevar	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#tabpagevar(tabnr, var)$/;"	f
nerdtree#treeExistsForBuf	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeExistsForBuf()$/;"	f
nerdtree#treeExistsForTab	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeExistsForTab()$/;"	f
nerdtree#treeMarkupReg	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeMarkupReg()$/;"	f
nerdtree#treeUpDirLine	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeUpDirLine()$/;"	f
nerdtree#treeWid	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeWid()$/;"	f
nerdtree#unique	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#unique(list)$/;"	f
nerdtree#upDir	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#upDir(keepState)$/;"	f
nerdtree#version	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version()$/;"	f
never_show_dot_files	command-t/ruby/command-t/match.c	/^    int     never_show_dot_files;   \/\/ boolean$/;"	m	struct:__anon1	file:
oldincludedir	command-t/ruby/command-t/Makefile	/^oldincludedir = $(DESTDIR)\/usr\/include$/;"	m
onBufDelete	vim-l9/autoload/l9/tempbuffer.vim	/^function s:onBufDelete(bufname)$/;"	f
onBufWriteCmd	vim-l9/autoload/l9/tempbuffer.vim	/^function s:onBufWriteCmd(bufname)$/;"	f
onCommandPre	FuzzyFinder/autoload/fuf.vim	/^function s:onCommandPre()$/;"	f
one	vim-ruby/spec/indent/basic_spec.rb	/^      def one$/;"	f
openExplorer	nerdtree/autoload/nerdtree.vim	/^function! s:openExplorer(node)$/;"	f
openHSplit	nerdtree/autoload/nerdtree.vim	/^function! s:openHSplit(target)$/;"	f
openInNewTab	nerdtree/autoload/nerdtree.vim	/^function! s:openInNewTab(target)$/;"	f
openInNewTabSilent	nerdtree/autoload/nerdtree.vim	/^function! s:openInNewTabSilent(target)$/;"	f
openNodeRecursively	nerdtree/autoload/nerdtree.vim	/^function! s:openNodeRecursively(node)$/;"	f
openVSplit	nerdtree/autoload/nerdtree.vim	/^function! s:openVSplit(target)$/;"	f
open_quickfix	vim-dispatch/autoload/dispatch.vim	/^function! s:open_quickfix(request, copen) abort$/;"	f
open_selection	command-t/ruby/command-t/controller.rb	/^    def open_selection selection, options = {}$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
open_selection	command-t/ruby/command-t/finder.rb	/^    def open_selection command, selection, options = {}$/;"	f	class:CommandT.Finder
open_selection	command-t/ruby/command-t/finder/tag_finder.rb	/^    def open_selection command, selection, options = {}$/;"	f	class:CommandT.TagFinder
opfunc	vim-scriptease/plugin/scriptease.vim	/^function! s:opfunc(type) abort$/;"	f
opfunc	vim-surround/plugin/surround.vim	/^function! s:opfunc(type,...) " {{{1$/;"	f
opfunc2	vim-surround/plugin/surround.vim	/^function! s:opfunc2(arg)$/;"	f
option_map	vim-unimpaired/plugin/unimpaired.vim	/^function! s:option_map(letter, option)$/;"	f
options	vim-tags/plugin/tags.vim	/^let options = []$/;"	v
os	vim-l9/autoload/l9/async.py	/^import os$/;"	i
osascript	vim-dispatch/autoload/dispatch/iterm.vim	/^function! s:osascript(...) abort$/;"	f
padding_for_selected_match	command-t/ruby/command-t/match_window.rb	/^    def padding_for_selected_match str$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
parameter_names_of	vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:parameter_names_of(pairs)$/;"	f
parseChangesLine	FuzzyFinder/autoload/fuf/changelist.vim	/^function s:parseChangesLine(line)$/;"	f
parseHelpTagEntry	FuzzyFinder/autoload/fuf/help.vim	/^function s:parseHelpTagEntry(line, tagFile)$/;"	f
parseHelpTagFiles	FuzzyFinder/autoload/fuf/help.vim	/^function s:parseHelpTagFiles(tagFiles, key)$/;"	f
parseJumpsLine	FuzzyFinder/autoload/fuf/jumplist.vim	/^function s:parseJumpsLine(line, bufnrPrev)$/;"	f
parseJumpsLine	FuzzyFinder/autoload/fuf/quickfix.vim	/^function s:parseJumpsLine(line)$/;"	f
parseTagFiles	FuzzyFinder/autoload/fuf/tag.vim	/^function s:parseTagFiles(tagFiles, key)$/;"	f
parseTagFiles	FuzzyFinder/autoload/fuf/taggedfile.vim	/^function s:parseTagFiles(tagFiles, key)$/;"	f
parseTagLine	FuzzyFinder/autoload/fuf/buffertag.vim	/^function s:parseTagLine(line)$/;"	f
path	vim-ruby/bin/vim-ruby-install.rb	/^    def path$/;"	f	class:VimRubyInstaller.BackupDir
path	vim-ruby/bin/vim-ruby-install.rb	/^  def path$/;"	f	class:TargetDirectory
path=	command-t/ruby/command-t/finder.rb	/^    def path= path$/;"	f	class:CommandT.Finder
path_excluded?	command-t/ruby/command-t/scanner/file_scanner.rb	/^    def path_excluded? path$/;"	f	class:CommandT.FileScanner
pathjoin	vim-rails/autoload/rails.vim	/^function! s:pathjoin(...) abort$/;"	f
paths	command-t/ruby/command-t/scanner/buffer_scanner.rb	/^    def paths$/;"	f	class:CommandT.BufferScanner
paths	command-t/ruby/command-t/scanner/file_scanner.rb	/^    def paths$/;"	f	class:CommandT.FileScanner
paths	command-t/ruby/command-t/scanner/jump_scanner.rb	/^    def paths$/;"	f	class:CommandT.JumpScanner
paths	command-t/ruby/command-t/scanner/tag_scanner.rb	/^    def paths$/;"	f	class:CommandT.TagScanner
pathsplit	vim-rails/autoload/rails.vim	/^function! s:pathsplit(path) abort$/;"	f
pattern	vim-cucumber/syntax/cucumber.vim	/^function! s:pattern(key)$/;"	f
pdfdir	command-t/ruby/command-t/Makefile	/^pdfdir = $(docdir)$/;"	m
pop_command	vim-bundler/plugin/bundler.vim	/^function! s:pop_command()$/;"	f
pop_command	vim-rails/autoload/rails.vim	/^function! s:pop_command()$/;"	f
pop_command	vim-rake/plugin/rake.vim	/^function! s:pop_command()$/;"	f
pos	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:pos(mark)$/;"	f
prefix	command-t/ruby/command-t/Makefile	/^prefix = $(DESTDIR)\/System\/Library\/Frameworks\/Ruby.framework\/Versions\/1.8\/usr$/;"	m
preload	command-t/ruby/command-t/Makefile	/^preload = $/;"	m
previewNodeCurrent	nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeCurrent(node)$/;"	f
previewNodeHSplit	nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeHSplit(node)$/;"	f
previewNodeVSplit	nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeVSplit(node)$/;"	f
previewwindow	vim-scriptease/plugin/scriptease.vim	/^function! s:previewwindow()$/;"	f
print_active_worker_keys	vim-l9/autoload/l9/async.py	/^    def print_active_worker_keys(self):$/;"	m	class:Asyncer
print_error	command-t/ruby/command-t/match_window.rb	/^    def print_error msg$/;"	f	class:CommandT.MatchWindow
print_match	command-t/ruby/command-t/match_window.rb	/^    def print_match idx$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
print_matches	command-t/ruby/command-t/match_window.rb	/^    def print_matches$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
print_no_such_file_or_directory	command-t/ruby/command-t/match_window.rb	/^    def print_no_such_file_or_directory$/;"	f	class:CommandT.MatchWindow
print_output	vim-l9/autoload/l9/async.py	/^    def print_output(self, var_key):$/;"	m	class:Asyncer
print_worker_keys	vim-l9/autoload/l9/async.py	/^    def print_worker_keys(self):$/;"	m	class:Asyncer
process	vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
process_user_input	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:process_user_input()$/;"	f
project	vim-bundler/plugin/bundler.vim	/^function! s:project(...) abort$/;"	f
project	vim-rake/plugin/rake.vim	/^function! s:project(...)$/;"	f
project_alter_buffer_paths	vim-bundler/plugin/bundler.vim	/^function! s:project_alter_buffer_paths() dict abort$/;"	f
project_dirglob	vim-rake/plugin/rake.vim	/^function! s:project_dirglob(base) dict abort$/;"	f
project_first_file	vim-rake/plugin/rake.vim	/^function! s:project_first_file(...) dict abort$/;"	f
project_gems	vim-bundler/plugin/bundler.vim	/^function! s:project_gems() dict abort$/;"	f
project_has	vim-bundler/plugin/bundler.vim	/^function! s:project_has(gem) dict abort$/;"	f
project_has_directory	vim-rake/plugin/rake.vim	/^function! s:project_has_directory(file) dict$/;"	f
project_has_file	vim-rake/plugin/rake.vim	/^function! s:project_has_file(file) dict$/;"	f
project_locked	vim-bundler/plugin/bundler.vim	/^function! s:project_locked() dict abort$/;"	f
project_makeprg	vim-rake/plugin/rake.vim	/^function! s:project_makeprg()$/;"	f
project_path	vim-bundler/plugin/bundler.vim	/^function! s:project_path(...) dict abort$/;"	f
project_path	vim-rake/plugin/rake.vim	/^function! s:project_path(...) dict abort$/;"	f
project_paths	vim-bundler/plugin/bundler.vim	/^function! s:project_paths(...) dict abort$/;"	f
project_relglob	vim-rake/plugin/rake.vim	/^function! s:project_relglob(path,glob,...) dict$/;"	f
project_sorted	vim-bundler/plugin/bundler.vim	/^function! s:project_sorted() dict abort$/;"	f
project_tags_file	vim-rake/plugin/rake.vim	/^function! s:project_tags_file() dict abort$/;"	f
project_tasks	vim-rake/plugin/rake.vim	/^function! s:project_tasks()$/;"	f
project_versions	vim-bundler/plugin/bundler.vim	/^function! s:project_versions() dict abort$/;"	f
projection_pairs	vim-rails/autoload/rails.vim	/^function! s:projection_pairs(options)$/;"	f
promptToDelBuffer	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToRenameBuffer	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToRenameBuffer(bufnum, msg, newFileName)$/;"	f
psdir	command-t/ruby/command-t/Makefile	/^psdir = $(docdir)$/;"	m
push_chdir	vim-bundler/plugin/bundler.vim	/^function! s:push_chdir()$/;"	f
push_chdir	vim-rails/autoload/rails.vim	/^function! s:push_chdir(...)$/;"	f
push_chdir	vim-rake/plugin/rake.vim	/^function! s:push_chdir(...)$/;"	f
put	vim-l9/autoload/l9/async.py	/^    def put(self, executor):$/;"	m	class:Worker
putline	vim-unimpaired/plugin/unimpaired.vim	/^function! s:putline(how) abort$/;"	f
pwd	command-t/ruby/command-t/vim.rb	/^    def self.pwd$/;"	F	class:CommandT.VIM
query_path	vim-ruby/ftplugin/ruby.vim	/^function! s:query_path(root)$/;"	f
quickfix	command-t/ruby/command-t/controller.rb	/^    def quickfix$/;"	f	class:CommandT.Controller
rails#app	vim-rails/autoload/rails.vim	/^function! rails#app(...)$/;"	f
rails#buffer	vim-rails/autoload/rails.vim	/^function! rails#buffer(...)$/;"	f
rails#cache_clear	vim-rails/autoload/rails.vim	/^function! rails#cache_clear(...)$/;"	f
rails#camelize	vim-rails/autoload/rails.vim	/^function! rails#camelize(str)$/;"	f
rails#complete_rake	vim-rails/autoload/rails.vim	/^function! rails#complete_rake(A,L,P)$/;"	f
rails#get_binding_for	vim-rails/autoload/rails.vim	/^function! rails#get_binding_for(pid)$/;"	f
rails#json_parse	vim-rails/autoload/rails.vim	/^function! rails#json_parse(string) abort$/;"	f
rails#lencmp	vim-rails/autoload/rails.vim	/^function! rails#lencmp(i1, i2) abort$/;"	f
rails#log_syntax	vim-rails/autoload/rails.vim	/^function! rails#log_syntax()$/;"	f
rails#new_app_command	vim-rails/autoload/rails.vim	/^function! rails#new_app_command(bang,...) abort$/;"	f
rails#pluralize	vim-rails/autoload/rails.vim	/^function! rails#pluralize(word)$/;"	f
rails#singularize	vim-rails/autoload/rails.vim	/^function! rails#singularize(word)$/;"	f
rails#underscore	vim-rails/autoload/rails.vim	/^function! rails#underscore(str)$/;"	f
railsPluginAbolish	vim-rails/plugin/rails.vim	/^augroup railsPluginAbolish$/;"	a
railsPluginAuto	vim-rails/autoload/rails.vim	/^augroup railsPluginAuto$/;"	a
railsPluginDetect	vim-rails/plugin/rails.vim	/^augroup railsPluginDetect$/;"	a
rake	vim-rake/plugin/rake.vim	/^augroup rake$/;"	a
rake#buffer	vim-rake/plugin/rake.vim	/^function! rake#buffer(...) abort$/;"	f
rake#project	vim-rake/plugin/rake.vim	/^function! rake#project(...) abort$/;"	f
rake_path	vim-rake/plugin/rake.vim	/^augroup rake_path$/;"	a
rake_tags	vim-rake/plugin/rake.vim	/^augroup rake_tags$/;"	a
rake_utility	vim-rake/plugin/rake.vim	/^augroup rake_utility$/;"	a
readable_absolute	vim-rails/autoload/rails.vim	/^function! s:readable_absolute() dict abort$/;"	f
readable_alternate	vim-rails/autoload/rails.vim	/^function! s:readable_alternate(...) dict abort$/;"	f
readable_alternate_candidates	vim-rails/autoload/rails.vim	/^function! s:readable_alternate_candidates(...) dict abort$/;"	f
readable_app	vim-rails/autoload/rails.vim	/^function! s:readable_app() dict abort$/;"	f
readable_calculate_file_type	vim-rails/autoload/rails.vim	/^function! s:readable_calculate_file_type() dict abort$/;"	f
readable_controller_name	vim-rails/autoload/rails.vim	/^function! s:readable_controller_name(...) dict abort$/;"	f
readable_default_rake_task	vim-rails/autoload/rails.vim	/^function! s:readable_default_rake_task(...) dict abort$/;"	f
readable_define_pattern	vim-rails/autoload/rails.vim	/^function! s:readable_define_pattern() dict abort$/;"	f
readable_end_of	vim-rails/autoload/rails.vim	/^function! s:readable_end_of(lnum) dict abort$/;"	f
readable_find_affinity	vim-rails/autoload/rails.vim	/^function! s:readable_find_affinity() dict abort$/;"	f
readable_format	vim-rails/autoload/rails.vim	/^function! s:readable_format(start) dict abort$/;"	f
readable_last_method	vim-rails/autoload/rails.vim	/^function! s:readable_last_method(start) dict abort$/;"	f
readable_last_method_line	vim-rails/autoload/rails.vim	/^function! s:readable_last_method_line(start) dict abort$/;"	f
readable_last_opening_line	vim-rails/autoload/rails.vim	/^function! s:readable_last_opening_line(start,pattern,limit) dict abort$/;"	f
readable_line_count	vim-rails/autoload/rails.vim	/^function! s:readable_line_count() dict abort$/;"	f
readable_model_name	vim-rails/autoload/rails.vim	/^function! s:readable_model_name(...) dict abort$/;"	f
readable_open_command	vim-rails/autoload/rails.vim	/^function! s:readable_open_command(cmd, argument, name, projections) dict abort$/;"	f
readable_preview_urls	vim-rails/autoload/rails.vim	/^function! s:readable_preview_urls(lnum) dict abort$/;"	f
readable_projected	vim-rails/autoload/rails.vim	/^function! s:readable_projected(key, ...) dict abort$/;"	f
readable_related	vim-rails/autoload/rails.vim	/^function! s:readable_related(...) dict abort$/;"	f
readable_relative	vim-rails/autoload/rails.vim	/^function! s:readable_relative() dict abort$/;"	f
readable_resolve_layout	vim-rails/autoload/rails.vim	/^function! s:readable_resolve_layout(name, ...) dict abort$/;"	f
readable_resolve_view	vim-rails/autoload/rails.vim	/^function! s:readable_resolve_view(name,...) dict abort$/;"	f
readable_runner_command	vim-rails/autoload/rails.vim	/^function! s:readable_runner_command(bang, count, arg) dict abort$/;"	f
readable_spec	vim-rails/autoload/rails.vim	/^function! s:readable_spec() dict abort$/;"	f
readable_test_file	vim-rails/autoload/rails.vim	/^function! s:readable_test_file() dict abort$/;"	f
readable_test_file_candidates	vim-rails/autoload/rails.vim	/^function! s:readable_test_file_candidates() dict abort$/;"	f
readable_type_name	vim-rails/autoload/rails.vim	/^function! s:readable_type_name(...) dict abort$/;"	f
readfile	vim-rails/autoload/rails.vim	/^function! s:readfile(path,...)$/;"	f
recall	vim-fugitive/plugin/fugitive.vim	/^function! s:recall()$/;"	f
record	vim-dispatch/autoload/dispatch/tmux.vim	/^function! s:record(pane, request)$/;"	f
record_output	vim-l9/autoload/l9/async.py	/^    def record_output(self, line):$/;"	m	class:Worker
recursive_match	command-t/ruby/command-t/match.c	/^double recursive_match(matchinfo_t *m,    \/\/ sharable meta-data$/;"	f
redraw	command-t/ruby/command-t/prompt.rb	/^    def redraw$/;"	f	class:CommandT.Prompt
redraw	vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
refresh	command-t/ruby/command-t/controller.rb	/^    def refresh$/;"	f	class:CommandT.Controller.quickfix
refreshCurrent	nerdtree/autoload/nerdtree.vim	/^function! s:refreshCurrent(node)$/;"	f
refreshRoot	nerdtree/autoload/nerdtree.vim	/^function! s:refreshRoot()$/;"	f
region	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:region(start_mark, end_mark)$/;"	f
registerCoverage	FuzzyFinder/autoload/fuf/coveragefile.vim	/^function s:registerCoverage()$/;"	f
register_for_key_presses	command-t/ruby/command-t/controller.rb	/^    def register_for_key_presses$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
reindent	vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
relative_path_under_working_directory	command-t/ruby/command-t/vim/path_utilities.rb	/^      def relative_path_under_working_directory path$/;"	f	class:CommandT.VIM.PathUtilities
relativize_path	command-t/spec/vim_formatter.rb	/^        def relativize_path path$/;"	f	class:Spec.Runner.Formatter.VimFormatter
relglob	vim-rails/autoload/rails.vim	/^function! s:relglob(...)$/;"	f
removeItemFromCache	FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:removeItemFromCache(word)$/;"	f
renewCachesOfAllModes	FuzzyFinder/plugin/fuf.vim	/^function s:renewCachesOfAllModes()$/;"	f
repo	vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_configured_tree	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_configured_tree() dict abort$/;"	f
repo_dir	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_head_ref	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
request	vim-dispatch/autoload/dispatch.vim	/^function! s:request(request) abort$/;"	f
resetomnicomplete	vim-rails/autoload/rails.vim	/^function! s:resetomnicomplete()$/;"	f
restore	command-t/ruby/command-t/settings.rb	/^    def restore$/;"	f	class:CommandT.Settings
restore_window_dimensions	command-t/ruby/command-t/match_window.rb	/^    def restore_window_dimensions$/;"	f	class:CommandT.MatchWindow
result_of_executing_the_commands	vim-ruby-refactoring/features/support/shared_methods.rb	/^def result_of_executing_the_commands$/;"	f
return_key	vim-ruby-refactoring/features/support/shared_methods.rb	/^def return_key$/;"	f
retval	project-1.4.1/plugin/project.vim	/^        let retval=b:fnamelist$/;"	v
revert_highlight_fix	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:revert_highlight_fix()$/;"	f
revert_mode	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:revert_mode(from, to)$/;"	f
rquote	vim-rails/autoload/rails.vim	/^function! s:rquote(str)$/;"	f
ruby	command-t/ruby/command-t/Makefile	/^ruby = \/System\/Library\/Frameworks\/Ruby.framework\/Versions\/1.8\/usr\/bin\/ruby$/;"	m
ruby_determine_variables	vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:ruby_determine_variables(block) $/;"	f
ruby_identify_methods	vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:ruby_identify_methods( tuples )$/;"	f
ruby_identify_tokens	vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:ruby_identify_tokens( tokenlist )$/;"	f
ruby_identify_variables	vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:ruby_identify_variables( tuples )$/;"	f
ruby_inspect	command-t/ruby/command-t/ext.h	/^#define ruby_inspect(/;"	d
ruby_minlines	vim-ruby/syntax/ruby.vim	/^    let ruby_minlines = 500$/;"	v
ruby_tokenize	vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:ruby_tokenize( block )$/;"	f
ruby_version	command-t/ruby/command-t/Makefile	/^ruby_version = 1.8$/;"	m
rubycomplete#Complete	vim-ruby/autoload/rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Init	vim-ruby/autoload/rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
rubyfiles	command-t/Makefile	/^rubyfiles   := $(shell find ruby -name '*.rb')$/;"	m
rubylibdir	command-t/ruby/command-t/Makefile	/^rubylibdir = $(libdir)\/ruby\/$(ruby_version)$/;"	m
run	vim-l9/autoload/l9/async.py	/^    def run(self):$/;"	m	class:Worker
runtime	vim-scriptease/plugin/scriptease.vim	/^function! s:runtime(bang, ...) abort$/;"	f
runtime_globpath	vim-scriptease/plugin/scriptease.vim	/^function! s:runtime_globpath(file)$/;"	f
s:ABBR_SNIP_MASK	FuzzyFinder/autoload/fuf.vim	/^let s:ABBR_SNIP_MASK = '...'$/;"	v
s:ASYNC_PY_PATH	vim-l9/autoload/l9/async.vim	/^let s:ASYNC_PY_PATH = fnamemodify(expand('<sfile>:p:h'), ':p') . 'async.py'$/;"	v
s:Bookmark	nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:BufList	minibufexpl.vim/plugin/minibufexpl.vim	/^let s:BufList = []$/;"	v
s:C	genutils-2.5/autoload/genutils.vim	/^let s:C = 100$/;"	v
s:Creator	nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:Cursor	vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:Cursor = {}$/;"	v
s:CursorManager	vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:CursorManager = {}$/;"	v
s:D	genutils-2.5/autoload/genutils.vim	/^let s:D = 500$/;"	v
s:DATA_FILE_VERSION	FuzzyFinder/autoload/fuf.vim	/^let s:DATA_FILE_VERSION = 400$/;"	v
s:FUF_BUF_NAME	FuzzyFinder/autoload/fuf.vim	/^let s:FUF_BUF_NAME = '[fuf]'$/;"	v
s:I	genutils-2.5/autoload/genutils.vim	/^let s:I = 1$/;"	v
s:KeyMap	nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:L	genutils-2.5/autoload/genutils.vim	/^let s:L = 50$/;"	v
s:L9_VERSION_CURRENT	vim-l9/autoload/l9.vim	/^let s:L9_VERSION_CURRENT  = 101$/;"	v
s:L9_VERSION_PASSABLE	vim-l9/autoload/l9.vim	/^let s:L9_VERSION_PASSABLE = 101$/;"	v
s:M	genutils-2.5/autoload/genutils.vim	/^let s:M = 1000$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/buffer.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/buffertag.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/callbackfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/callbackitem.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/changelist.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/coveragefile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/dir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/file.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/givencmd.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/givendir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/givenfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/help.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/jumplist.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/line.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/mrucmd.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/mrufile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/quickfix.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/tag.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	FuzzyFinder/autoload/fuf/taggedfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MRUEnable	minibufexpl.vim/plugin/minibufexpl.vim	/^let s:MRUEnable = 1$/;"	v
s:MRUList	minibufexpl.vim/plugin/minibufexpl.vim	/^let s:MRUList = []$/;"	v
s:MenuController	nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:NERDTreeSortStarIndex	nerdtree/lib/nerdtree/path.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NewTabCreated	vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^let s:NewTabCreated = 0$/;"	v
s:OPEN_TYPE_CURRENT	FuzzyFinder/autoload/fuf.vim	/^let s:OPEN_TYPE_CURRENT = 1$/;"	v
s:OPEN_TYPE_DELETE	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_DELETE	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_DELETE	FuzzyFinder/autoload/fuf/buffer.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_DELETE	FuzzyFinder/autoload/fuf/line.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_EXPAND	FuzzyFinder/autoload/fuf/mrufile.vim	/^let s:OPEN_TYPE_EXPAND = -1$/;"	v
s:OPEN_TYPE_SPLIT	FuzzyFinder/autoload/fuf.vim	/^let s:OPEN_TYPE_SPLIT   = 2$/;"	v
s:OPEN_TYPE_TAB	FuzzyFinder/autoload/fuf.vim	/^let s:OPEN_TYPE_TAB     = 4$/;"	v
s:OPEN_TYPE_VSPLIT	FuzzyFinder/autoload/fuf.vim	/^let s:OPEN_TYPE_VSPLIT  = 3$/;"	v
s:Opener	nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:Path	nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:PathSeparator	minibufexpl.vim/plugin/minibufexpl.vim	/^    let s:PathSeparator = '\/'$/;"	v
s:PathSeparator	minibufexpl.vim/plugin/minibufexpl.vim	/^    let s:PathSeparator = '\\'$/;"	v
s:TEMP_VARIABLES_GROUP	FuzzyFinder/autoload/fuf.vim	/^let s:TEMP_VARIABLES_GROUP = expand('<sfile>:p')$/;"	v
s:TEMP_VARIABLES_GROUP	FuzzyFinder/autoload/fuf/buffertag.vim	/^let s:TEMP_VARIABLES_GROUP = expand('<sfile>:p')$/;"	v
s:Tab	supertab/plugin/supertab.vim	/^      let s:Tab = function(substitute(existing, '()$', '', ''))$/;"	v
s:TabsMBEState	minibufexpl.vim/plugin/minibufexpl.vim	/^let s:TabsMBEState = 0$/;"	v
s:Tlist_Skip_Refresh	taglist_46/plugin/taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:TreeDirNode	nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:UNPROTECTED_CHAR_PRFX	genutils-2.5/autoload/genutils.vim	/^let s:UNPROTECTED_CHAR_PRFX = '\\%(\\%([^\\\\]\\|^\\)\\\\\\%(\\\\\\\\\\)*\\)\\@<!' " Doesn't eat slashes.$/;"	v
s:V	genutils-2.5/autoload/genutils.vim	/^let s:V = 5$/;"	v
s:VERSION_FACTOR	vim-l9/autoload/l9.vim	/^let s:VERSION_FACTOR = str2float('0.01')$/;"	v
s:X	genutils-2.5/autoload/genutils.vim	/^let s:X = 10$/;"	v
s:abstract_prototype	vim-bundler/plugin/bundler.vim	/^let s:abstract_prototype = {}$/;"	v
s:abstract_prototype	vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:abstract_prototype	vim-rake/plugin/rake.vim	/^let s:abstract_prototype = {}$/;"	v
s:app_prototype	vim-rails/autoload/rails.vim	/^let s:app_prototype = {}$/;"	v
s:app_prototype	vim-rails/autoload/rails.vim	/^let s:app_prototype.cache = s:cache_prototype$/;"	v
s:apps	vim-rails/autoload/rails.vim	/^  let s:apps = {}$/;"	v
s:attributes	vim-haml/indent/haml.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:b	vim-colors-solarized/colors/solarized.vim	/^    let s:b           = ""$/;"	v
s:b	vim-colors-solarized/colors/solarized.vim	/^    let s:b           = ",bold"$/;"	v
s:back	vim-colors-solarized/colors/solarized.vim	/^        let s:back    = s:base03$/;"	v
s:back	vim-colors-solarized/colors/solarized.vim	/^    let s:back        = "NONE"$/;"	v
s:back	vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:back$/;"	v
s:back	vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:base02$/;"	v
s:back	vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:base03$/;"	v
s:bad_input	vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:bad_input = 0$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "#808080"$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "#839496"$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "12"$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "244"$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "LightBlue"     " 4*$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = s:base1$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = s:temp00$/;"	v
s:base00	vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "#585858"$/;"	v
s:base00	vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "#657b83"$/;"	v
s:base00	vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "11"$/;"	v
s:base00	vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "240"$/;"	v
s:base00	vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "LightYellow"   " 3*$/;"	v
s:base00	vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = s:base0$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "#4e4e4e"$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "#586e75"$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "10"$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "239"$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "LightGreen"    " 2*$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base00$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base1$/;"	v
s:base02	vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "#073642"$/;"	v
s:base02	vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "#262626"$/;"	v
s:base02	vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "0"$/;"	v
s:base02	vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "235"$/;"	v
s:base02	vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "Black"         " 0$/;"	v
s:base02	vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = s:base2$/;"	v
s:base03	vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "#002b36"$/;"	v
s:base03	vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "#1c1c1c"$/;"	v
s:base03	vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "234"$/;"	v
s:base03	vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "8"$/;"	v
s:base03	vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "DarkGray"      " 0*$/;"	v
s:base03	vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = s:base3$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "#8a8a8a"$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "#93a1a1"$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "14"$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "245"$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "LightCyan"     " 6*$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = s:base2$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = s:temp01$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "#d7d7af"$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "#eee8d5"$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "187"$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "7"$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "LightGray"     " 7$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = s:base3$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = s:temp02$/;"	v
s:base3	vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "#fdf6e3"$/;"	v
s:base3	vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "#ffffd7"$/;"	v
s:base3	vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "15"$/;"	v
s:base3	vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "230"$/;"	v
s:base3	vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "White"         " 7*$/;"	v
s:base3	vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = s:temp03$/;"	v
s:bb	vim-colors-solarized/colors/solarized.vim	/^    let s:bb          = ""$/;"	v
s:bb	vim-colors-solarized/colors/solarized.vim	/^    let s:bb          = ",bold"$/;"	v
s:block_continuation_regex	vim-ruby/indent/ruby.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_regex	vim-ruby/indent/ruby.vim	/^let s:block_regex =$/;"	v
s:blue	vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "#0087ff"$/;"	v
s:blue	vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "#268bd2"$/;"	v
s:blue	vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "33"$/;"	v
s:blue	vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "4"$/;"	v
s:blue	vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "DarkBlue"      " 4$/;"	v
s:bracket_continuation_regex	vim-ruby/indent/ruby.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bright	vim-colors-solarized/colors/solarized.vim	/^    let s:bright      = "* term=bold cterm=bold"$/;"	v
s:browsefilter	vim-haml/ftplugin/haml.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	vim-haml/ftplugin/haml.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	vim-haml/ftplugin/haml.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	vim-ruby/ftplugin/eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	vim-ruby/ftplugin/eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	vim-ruby/ftplugin/eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:bufNameDict	minibufexpl.vim/plugin/minibufexpl.vim	/^let s:bufNameDict = {}$/;"	v
s:bufPathDict	minibufexpl.vim/plugin/minibufexpl.vim	/^let s:bufPathDict = {}$/;"	v
s:bufPathSignDict	minibufexpl.vim/plugin/minibufexpl.vim	/^let s:bufPathSignDict = {}$/;"	v
s:bufStateDict	minibufexpl.vim/plugin/minibufexpl.vim	/^let s:bufStateDict = {}$/;"	v
s:bufTimes	FuzzyFinder/autoload/fuf/buffer.vim	/^let s:bufTimes = {}$/;"	v
s:bufUniqNameDict	minibufexpl.vim/plugin/minibufexpl.vim	/^let s:bufUniqNameDict = {}$/;"	v
s:bufferCursorPosMap	FuzzyFinder/autoload/fuf.vim	/^let s:bufferCursorPosMap = {}$/;"	v
s:buffer_prototype	vim-bundler/plugin/bundler.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_prototype	vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_prototype	vim-rails/autoload/rails.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_prototype	vim-rake/plugin/rake.vim	/^let s:buffer_prototype = {}$/;"	v
s:c	vim-colors-solarized/colors/solarized.vim	/^    let s:c               = ",undercurl"$/;"	v
s:cache_prototype	vim-rails/autoload/rails.vim	/^let s:cache_prototype = {'dict': {}}$/;"	v
s:char	vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:char = ''$/;"	v
s:cm	vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:cm = s:CursorManager.new()$/;"	v
s:colorscheme_list	vim-colors-solarized/colors/solarized.vim	/^let s:colorscheme_list=[$/;"	v
s:commands	vim-bundler/plugin/bundler.vim	/^let s:commands = []$/;"	v
s:commands	vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:commands	vim-rake/plugin/rake.vim	/^let s:commands = []$/;"	v
s:continuation_regex	vim-ruby/indent/ruby.vim	/^let s:continuation_regex =$/;"	v
s:cpo_save	dbext_2000/autoload/dbext.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	dbext_2000/autoload/dbext_dbi.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	dbext_2000/plugin/dbext.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	mru.vim/plugin/mru.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	taglist_46/plugin/taglist.vim	/^    let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim-bundler/compiler/bundler.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim-cucumber/compiler/cucumber.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim-haml/compiler/haml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim-haml/compiler/sass.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim-ruby/compiler/eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim-ruby/compiler/rake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim-ruby/compiler/rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim-ruby/compiler/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim-ruby/compiler/rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim-ruby/ftplugin/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim-ruby/indent/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:custom_dirs	vim-tags/plugin/tags.vim	/^let s:custom_dirs = []$/;"	v
s:cyan	vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#00afaf"$/;"	v
s:cyan	vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#2aa198"$/;"	v
s:cyan	vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "37"$/;"	v
s:cyan	vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "6"$/;"	v
s:cyan	vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "DarkCyan"      " 6$/;"	v
s:dataMap	vim-l9/autoload/l9/tempbuffer.vim	/^let s:dataMap = {}$/;"	v
s:dbext_buffer_last	dbext_2000/autoload/dbext.vim	/^let s:dbext_buffer_last       = -1$/;"	v
s:dbext_buffer_last_winnr	dbext_2000/autoload/dbext.vim	/^let s:dbext_buffer_last_winnr = -1$/;"	v
s:dbext_buffers_with_dict_files	dbext_2000/autoload/dbext.vim	/^let s:dbext_buffers_with_dict_files = []$/;"	v
s:dbext_prev_sql	dbext_2000/autoload/dbext.vim	/^let s:dbext_prev_sql     = ''$/;"	v
s:dbext_result_count	dbext_2000/autoload/dbext.vim	/^let s:dbext_result_count = 0$/;"	v
s:dbext_tempfile	dbext_2000/autoload/dbext.vim	/^let s:dbext_tempfile = fnamemodify(tempname(), ":h")$/;"	v
s:dbext_tempfile	dbext_2000/autoload/dbext.vim	/^let s:dbext_tempfile = s:dbext_tempfile.(s:dbext_tempfile =~ '^\/' ? '\/' : '\\').'dbext.sql'$/;"	v
s:debugIndex	minibufexpl.vim/plugin/minibufexpl.vim	/^let s:debugIndex = 0$/;"	v
s:defFCShellInstalled	genutils-2.5/autoload/genutils.vim	/^let s:defFCShellInstalled = 0$/;"	v
s:defaultCommentString	tcomment_vim/autoload/tcomment.vim	/^let s:defaultCommentString = s:DefaultValue('commentstring')$/;"	v
s:defaultComments	tcomment_vim/autoload/tcomment.vim	/^let s:defaultComments      = s:DefaultValue('comments')$/;"	v
s:defaults_list	vim-colors-solarized/colors/solarized.vim	/^let s:defaults_list=[$/;"	v
s:definitions	tcomment_vim/autoload/tcomment.vim	/^let s:definitions = {}$/;"	v
s:did_snip_helper	snipmate.vim/ftplugin/html_snip_helper.vim	/^let s:did_snip_helper = 1$/;"	v
s:did_snips_mappings	snipmate.vim/after/plugin/snipMate.vim	/^let s:did_snips_mappings = 1$/;"	v
s:efm_generate	vim-rails/autoload/rails.vim	/^let s:efm_generate =$/;"	v
s:end_end_regex	vim-ruby/indent/ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_middle_regex	vim-ruby/indent/ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\|when\\|elsif\\):\\@!\\>'$/;"	v
s:end_skip_expr	vim-ruby/indent/ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_start_regex	vim-ruby/indent/ruby.vim	/^let s:end_start_regex =$/;"	v
s:esc_filename_chars	mru.vim/plugin/mru.vim	/^let s:esc_filename_chars = ' *?[{`$%#"|!<>();&' . "'\\t\\n"$/;"	v
s:escapes	vim-scriptease/plugin/scriptease.vim	/^let s:escapes = {$/;"	v
s:expandable	vim-dispatch/autoload/dispatch.vim	/^let s:expandable = '\\\\*\\%(<\\w\\+>\\|%\\|#\\d*\\)' . s:flags$/;"	v
s:extend	vim-haml/indent/sass.vim	/^let s:extend = '^\\s*\\%(@extend\\|@include\\|+\\)'$/;"	v
s:fcShellPreFuncs	genutils-2.5/autoload/genutils.vim	/^  let s:fcShellPreFuncs = {}$/;"	v
s:fg_pdef	vim-colors-solarized/colors/solarized.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_phead	vim-colors-solarized/colors/solarized.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:fg_ptable	vim-colors-solarized/colors/solarized.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:file	vim-rails/autoload/rails.vim	/^let s:file = expand('<sfile>:p')$/;"	v
s:file_prototype	vim-rails/autoload/rails.vim	/^let s:file_prototype = {}$/;"	v
s:files	vim-dispatch/autoload/dispatch.vim	/^  let s:files = {}$/;"	v
s:first_completion	tcomment_vim/autoload/tcomment.vim	/^let s:first_completion = 0$/;"	v
s:flags	vim-dispatch/autoload/dispatch.vim	/^let s:flags = '\\%(:[p8~.htre]\\|:g\\=s\\(.\\).\\{-\\}\\1.\\{-\\}\\1\\)*'$/;"	v
s:from_mode	vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:from_mode = ''$/;"	v
s:green	vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "#5f8700"$/;"	v
s:green	vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "#719e07" "experimental$/;"	v
s:green	vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "2"$/;"	v
s:green	vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "64"$/;"	v
s:green	vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "DarkGreen"     " 2$/;"	v
s:handler	FuzzyFinder/autoload/fuf/bookmarkdir.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/bookmarkfile.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/buffer.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/buffertag.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/callbackfile.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/callbackitem.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/changelist.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/coveragefile.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/dir.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/file.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/givencmd.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/givendir.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/givenfile.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/help.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/jumplist.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/line.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/mrucmd.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/mrufile.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/quickfix.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/tag.vim	/^let s:handler = {}$/;"	v
s:handler	FuzzyFinder/autoload/fuf/taggedfile.vim	/^let s:handler = {}$/;"	v
s:handlerBase	FuzzyFinder/autoload/fuf.vim	/^let s:handlerBase = {}$/;"	v
s:hi_group_cursor	vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:hi_group_cursor = 'multiple_cursors_cursor'$/;"	v
s:hi_group_visual	vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:hi_group_visual = 'multiple_cursors_visual'$/;"	v
s:i	vim-colors-solarized/colors/solarized.vim	/^    let s:i           = ""$/;"	v
s:i	vim-colors-solarized/colors/solarized.vim	/^    let s:i           = ",italic"$/;"	v
s:last_mps	matchit/plugin/matchit.vim	/^let s:last_mps = ""$/;"	v
s:last_words	matchit/plugin/matchit.vim	/^let s:last_words = ":"$/;"	v
s:latency_debug_file	vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:latency_debug_file = ''$/;"	v
s:lazycat_list	vim-colors-solarized/colors/solarized.vim	/^let s:lazycat_list=[$/;"	v
s:lines	vim-ruby/ftplugin/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	vim-ruby/syntax/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:magenta	vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#af005f"$/;"	v
s:magenta	vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#d33682"$/;"	v
s:magenta	vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "125"$/;"	v
s:magenta	vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "5"$/;"	v
s:magenta	vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "DarkMagenta"   " 5$/;"	v
s:makeArgumentList	genutils-2.5/autoload/genutils.vim	/^let s:makeArgumentList = ''$/;"	v
s:makeArgumentString	genutils-2.5/autoload/genutils.vim	/^let s:makeArgumentString = ''$/;"	v
s:make_pane	vim-dispatch/autoload/dispatch/tmux.vim	/^let s:make_pane = tempname()$/;"	v
s:makes	vim-dispatch/autoload/dispatch.vim	/^  let s:makes = []$/;"	v
s:match_words	vim-haml/ftplugin/haml.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	vim-haml/ftplugin/haml.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	vim-haml/ftplugin/haml.vim	/^let s:match_words = ""$/;"	v
s:match_words	vim-ruby/ftplugin/eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	vim-ruby/ftplugin/eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	vim-ruby/ftplugin/eruby.vim	/^let s:match_words = ""$/;"	v
s:maxTabWidth	minibufexpl.vim/plugin/minibufexpl.vim	/^let s:maxTabWidth = 0$/;"	v
s:menu_char_prefix	taglist_46/plugin/taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:miniBufExplBufList	minibufexpl.vim/plugin/minibufexpl.vim	/^let s:miniBufExplBufList = ''$/;"	v
s:miniBufExplInAutoUpdate	minibufexpl.vim/plugin/minibufexpl.vim	/^let s:miniBufExplInAutoUpdate = 0$/;"	v
s:modeNames	FuzzyFinder/autoload/fuf.vim	/^let s:modeNames = []$/;"	v
s:modes	supertab/plugin/supertab.vim	/^  let s:modes = '\/^E\/^Y\/^L\/^N\/^K\/^T\/^I\/^]\/^F\/^D\/^V\/^P\/^U\/^O\/s'$/;"	v
s:modes	supertab/plugin/supertab.vim	/^  let s:modes = s:modes . '\/n\/p'$/;"	v
s:mru_list_locked	mru.vim/plugin/mru.vim	/^let s:mru_list_locked = 0$/;"	v
s:mySNR	genutils-2.5/autoload/genutils.vim	/^let s:mySNR = ''$/;"	v
s:n	vim-colors-solarized/colors/solarized.vim	/^    let s:n               = "NONE"$/;"	v
s:non_bracket_continuation_regex	vim-ruby/indent/ruby.vim	/^let s:non_bracket_continuation_regex = '\\%([\\\\.,:*\/%+]\\|\\<and\\|\\<or\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:none	vim-colors-solarized/colors/solarized.vim	/^    let s:none            = "NONE"$/;"	v
s:notifyWindow	genutils-2.5/autoload/genutils.vim	/^let s:notifyWindow = {}$/;"	v
s:notslash	matchit/plugin/matchit.vim	/^let s:notslash = '\\\\\\@<!\\%(\\\\\\\\\\)*'$/;"	v
s:nullCommentString	tcomment_vim/autoload/tcomment.vim	/^let s:nullCommentString    = '%s'$/;"	v
s:ob	vim-colors-solarized/colors/solarized.vim	/^    let s:ob              = ""$/;"	v
s:old_cpo	nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:oneTimeVariables	FuzzyFinder/autoload/fuf.vim	/^let s:oneTimeVariables = []$/;"	v
s:options	vim-tags/plugin/tags.vim	/^let s:options = join(options, ' ')$/;"	v
s:options_list	vim-colors-solarized/colors/solarized.vim	/^let s:options_list=[$/;"	v
s:orange	vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "#cb4b16"$/;"	v
s:orange	vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "#d75f00"$/;"	v
s:orange	vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "166"$/;"	v
s:orange	vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "9"$/;"	v
s:orange	vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "LightRed"      " 1*$/;"	v
s:origMap	vim-l9/autoload/l9/tempvariables.vim	/^let s:origMap = {}$/;"	v
s:ou	vim-colors-solarized/colors/solarized.vim	/^    let s:ou              = ""$/;"	v
s:ou	vim-colors-solarized/colors/solarized.vim	/^    let s:ou          = ",underline"$/;"	v
s:project_prototype	vim-bundler/plugin/bundler.vim	/^let s:project_prototype = {}$/;"	v
s:project_prototype	vim-rake/plugin/rake.vim	/^let s:project_prototype = {}$/;"	v
s:projections_for_gems	vim-rails/autoload/rails.vim	/^let s:projections_for_gems = {}$/;"	v
s:projects	vim-bundler/plugin/bundler.vim	/^let s:projects = {}$/;"	v
s:projects	vim-rake/plugin/rake.vim	/^let s:projects = {}$/;"	v
s:property	vim-haml/indent/sass.vim	/^let s:property = '^\\s*:\\|^\\s*[[:alnum:]#{}-]\\+\\%(:\\|\\s*=\\)'$/;"	v
s:r	vim-colors-solarized/colors/solarized.vim	/^    let s:r               = ",reverse"$/;"	v
s:readable_prototype	vim-rails/autoload/rails.vim	/^let s:readable_prototype = {}$/;"	v
s:red	vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "#af0000"$/;"	v
s:red	vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "#dc322f"$/;"	v
s:red	vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "1"$/;"	v
s:red	vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "124"$/;"	v
s:red	vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "DarkRed"       " 1$/;"	v
s:repo_prototype	vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:ruby_deindent_keywords	vim-ruby/indent/ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_indent_keywords	vim-ruby/indent/ruby.vim	/^let s:ruby_indent_keywords = '^\\s*\\zs\\<\\%(module\\|class\\|def\\|if\\|for' .$/;"	v
s:ruby_path	vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_path = s:build_path(s:ruby_paths)$/;"	v
s:ruby_path	vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_path = type(g:ruby_path) == type([]) ? join(g:ruby_path, ',') : g:ruby_path$/;"	v
s:ruby_paths	vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_default_path$/;"	v
s:ruby_paths	vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_version_paths[b:ruby_version]$/;"	v
s:rubycomplete_debug	vim-ruby/autoload/rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rubycomplete_rails_loaded	vim-ruby/autoload/rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
s:s	vim-colors-solarized/colors/solarized.vim	/^    let s:s               = ",standout"$/;"	v
s:save_cpo	genutils-2.5/autoload/genutils.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	matchit/plugin/matchit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	supertab/plugin/supertab.vim	/^let s:save_cpo=&cpo$/;"	v
s:save_cpo	vim-haml/ftplugin/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-ruby/ftplugin/eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:saved_line	vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_line = 0$/;"	v
s:saved_linecount	vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_linecount = -1$/;"	v
s:selection	genutils-2.5/autoload/genutils.vim	/^let s:selection = -1$/;"	v
s:settings	vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:settings = {$/;"	v
s:settings_if_default	vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:settings_if_default = {$/;"	v
s:sid	vim-rails/autoload/rails.vim	/^let s:sid = s:sub(maparg("<SID>xx"),'xx$','')$/;"	v
s:skip_expr	vim-ruby/indent/ruby.vim	/^let s:skip_expr =$/;"	v
s:snippets	snipmate.vim/plugin/snipMate.vim	/^let s:snippets = {} | let s:multi_snips = {}$/;"	v
s:solarized_termtrans_default	vim-colors-solarized/colors/solarized.vim	/^    let s:solarized_termtrans_default = 0$/;"	v
s:solarized_termtrans_default	vim-colors-solarized/colors/solarized.vim	/^    let s:solarized_termtrans_default = 1$/;"	v
s:sp_back	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_back      = ""$/;"	v
s:sp_base0	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base0     = ""$/;"	v
s:sp_base00	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base00    = ""$/;"	v
s:sp_base01	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base01    = ""$/;"	v
s:sp_base02	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base02    = ""$/;"	v
s:sp_base03	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base03    = ""$/;"	v
s:sp_base1	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base1     = ""$/;"	v
s:sp_base2	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base2     = ""$/;"	v
s:sp_base3	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base3     = ""$/;"	v
s:sp_blue	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_blue      = ""$/;"	v
s:sp_cyan	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_cyan      = ""$/;"	v
s:sp_green	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_green     = ""$/;"	v
s:sp_magenta	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_magenta   = ""$/;"	v
s:sp_none	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_none      = ""$/;"	v
s:sp_orange	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_orange    = ""$/;"	v
s:sp_red	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_red       = ""$/;"	v
s:sp_violet	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_violet    = ""$/;"	v
s:sp_yellow	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_yellow    = ""$/;"	v
s:spacer	genutils-2.5/autoload/genutils.vim	/^let s:spacer= "                                                               ".$/;"	v
s:special_keys	vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:special_keys = {$/;"	v
s:splat_regex	vim-ruby/indent/ruby.vim	/^let s:splat_regex = '[[,(]\\s*\\*\\s*\\%(#.*\\)\\=$'$/;"	v
s:syng_strcom	vim-ruby/indent/ruby.vim	/^let s:syng_strcom = '\\<ruby\\%(Regexp\\|RegexpDelimiter\\|RegexpEscape' .$/;"	v
s:syng_string	vim-ruby/indent/ruby.vim	/^let s:syng_string =$/;"	v
s:syng_stringdoc	vim-ruby/indent/ruby.vim	/^let s:syng_stringdoc =$/;"	v
s:t_none	vim-colors-solarized/colors/solarized.vim	/^    let s:t_none          = "NONE"$/;"	v
s:tabHelp	supertab/plugin/supertab.vim	/^  let s:tabHelp =$/;"	v
s:tag	vim-haml/indent/haml.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:temp00	vim-colors-solarized/colors/solarized.vim	/^    let s:temp00      = s:base00$/;"	v
s:temp01	vim-colors-solarized/colors/solarized.vim	/^    let s:temp01      = s:base01$/;"	v
s:temp02	vim-colors-solarized/colors/solarized.vim	/^    let s:temp02      = s:base02$/;"	v
s:temp03	vim-colors-solarized/colors/solarized.vim	/^    let s:temp03      = s:base03$/;"	v
s:temp_files	vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:terminal_italic	vim-colors-solarized/colors/solarized.vim	/^            let s:terminal_italic=1$/;"	v
s:terminal_italic	vim-colors-solarized/colors/solarized.vim	/^    let s:terminal_italic=0 " terminals will be guilty until proven compatible$/;"	v
s:terminal_italic	vim-colors-solarized/colors/solarized.vim	/^    let s:terminal_italic=1 " TODO: could refactor to not require this at all$/;"	v
s:terms_italic	vim-colors-solarized/colors/solarized.vim	/^let s:terms_italic=[$/;"	v
s:terms_noitalic	vim-colors-solarized/colors/solarized.vim	/^let s:terms_noitalic=[$/;"	v
s:timerData	vim-l9/plugin/l9.vim	/^  let s:timerData = []$/;"	v
s:timerTagMaxLen	vim-l9/plugin/l9.vim	/^  let s:timerTagMaxLen = 0$/;"	v
s:tlist_app_name	taglist_46/plugin/taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	taglist_46/plugin/taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	taglist_46/plugin/taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	taglist_46/plugin/taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	taglist_46/plugin/taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_ant_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_ant_settings = 'ant;p:projects;t:targets'$/;"	v
s:tlist_def_asm_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_aspperl_settings =$/;"	v
s:tlist_def_aspvbs_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_aspvbs_settings =$/;"	v
s:tlist_def_awk_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_basic_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_basic_settings =$/;"	v
s:tlist_def_beta_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_c_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_cobol_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cs_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_csh_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_d_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_d_settings = 'c++;n:namespace;v:variable;t:typedef;' .$/;"	v
s:tlist_def_dosbatch_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_dosbatch_settings = 'dosbatch;l:labels;v:variables'$/;"	v
s:tlist_def_eiffel_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_flex_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_flex_settings = 'flex;v:global;c:classes;p:properties;'.$/;"	v
s:tlist_def_fortran_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_go_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_go_settings = 'go;f:function;p:package;t:struct'$/;"	v
s:tlist_def_html_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:function'$/;"	v
s:tlist_def_java_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_javascript_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_javascript_settings =$/;"	v
s:tlist_def_lisp_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_matlab_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_matlab_settings = 'matlab;f:function'$/;"	v
s:tlist_def_ocamal_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_ocamal_settings = 'ocamal;M:module;v:global;t:type;'.$/;"	v
s:tlist_def_pascal_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_php_settings =$/;"	v
s:tlist_def_python_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_sql_settings = 'sql;f:functions;' .$/;"	v
s:tlist_def_tcl_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_tex_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_tex_settings = 'tex;c:chapters;s:sections;u:subsections;'.$/;"	v
s:tlist_def_vera_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vhdl_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_vhdl_settings = 'vhdl;c:constant;t:type;T:subtype;r:record;e:entity;f:function;p:procedure;P:package'$/;"	v
s:tlist_def_vim_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_vim_settings =$/;"	v
s:tlist_def_yacc_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	taglist_46/plugin/taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	taglist_46/plugin/taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	taglist_46/plugin/taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	taglist_46/plugin/taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_names	taglist_46/plugin/taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_ftype_count	taglist_46/plugin/taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	taglist_46/plugin/taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	taglist_46/plugin/taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	taglist_46/plugin/taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	taglist_46/plugin/taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_win_maximized	taglist_46/plugin/taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_winsize_chgd	taglist_46/plugin/taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:to_mode	vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:to_mode = ''$/;"	v
s:tree_up_dir_line	nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:types	supertab/plugin/supertab.vim	/^  let s:types = s:types . "np"$/;"	v
s:types	supertab/plugin/supertab.vim	/^  let s:types =$/;"	v
s:typesDirty	tcomment_vim/autoload/tcomment.vim	/^let s:typesDirty = 1$/;"	v
s:u	vim-colors-solarized/colors/solarized.vim	/^    let s:u           = ""$/;"	v
s:u	vim-colors-solarized/colors/solarized.vim	/^    let s:u           = ",underline"$/;"	v
s:undo_ftplugin	vim-haml/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	vim-haml/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	vim-haml/ftplugin/haml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	vim-ruby/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	vim-ruby/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	vim-ruby/ftplugin/eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:version_file	vim-ruby/ftplugin/ruby.vim	/^  let s:version_file = findfile('.ruby-version', '.;')$/;"	v
s:view_types	vim-rails/autoload/rails.vim	/^let s:view_types = split('rhtml,erb,rxml,builder,rjs,haml',',')$/;"	v
s:violet	vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "#5f5faf"$/;"	v
s:violet	vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "#6c71c4"$/;"	v
s:violet	vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "13"$/;"	v
s:violet	vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "61"$/;"	v
s:violet	vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "LightMagenta"  " 5*$/;"	v
s:vmode	vim-colors-solarized/colors/solarized.vim	/^    let s:vmode       = "cterm"$/;"	v
s:vmode	vim-colors-solarized/colors/solarized.vim	/^    let s:vmode       = "gui"$/;"	v
s:waiting	vim-dispatch/autoload/dispatch/tmux.vim	/^let s:waiting = {}$/;"	v
s:yellow	vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#af8700"$/;"	v
s:yellow	vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#b58900"$/;"	v
s:yellow	vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "136"$/;"	v
s:yellow	vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "3"$/;"	v
s:yellow	vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "DarkYellow"    " 3$/;"	v
sanitize_path_string	command-t/ruby/command-t/controller.rb	/^    def sanitize_path_string str$/;"	f	class:CommandT.Controller.quickfix
save	command-t/ruby/command-t/settings.rb	/^    def save$/;"	f	class:CommandT.Settings
sbindir	command-t/ruby/command-t/Makefile	/^sbindir = $(exec_prefix)\/sbin$/;"	m
scanlineforuris	vim-rails/autoload/rails.vim	/^function! s:scanlineforuris(line)$/;"	f
schemaEdit	vim-rails/autoload/rails.vim	/^function! s:schemaEdit(cmd,...)$/;"	f
schemaList	vim-rails/autoload/rails.vim	/^function! s:schemaList(A,L,P)$/;"	f
scoreBoundaryMatching	FuzzyFinder/autoload/fuf.vim	/^function s:scoreBoundaryMatching(wordForBoundary, pattern, exprBoundary)$/;"	f
scoreSequentialMatching	FuzzyFinder/autoload/fuf.vim	/^function s:scoreSequentialMatching(word, pattern)$/;"	f
scriptease	vim-scriptease/plugin/scriptease.vim	/^augroup scriptease$/;"	a
scriptease#capture	vim-scriptease/plugin/scriptease.vim	/^function! scriptease#capture(excmd) abort$/;"	f
scriptease#disarm	vim-scriptease/plugin/scriptease.vim	/^function! scriptease#disarm(file)$/;"	f
scriptease#dump	vim-scriptease/plugin/scriptease.vim	/^function! scriptease#dump(object, ...) abort$/;"	f
scriptease#scriptid	vim-scriptease/plugin/scriptease.vim	/^function! scriptease#scriptid(filename) abort$/;"	f
scriptease#scriptname	vim-scriptease/plugin/scriptease.vim	/^function! scriptease#scriptname(file) abort$/;"	f
scriptease#synnames	vim-scriptease/plugin/scriptease.vim	/^function! scriptease#synnames(...) abort$/;"	f
scriptease_breakadd	vim-scriptease/plugin/scriptease.vim	/^augroup scriptease_breakadd$/;"	a
scriptease_help	vim-scriptease/plugin/scriptease.vim	/^augroup scriptease_help$/;"	a
searchsyn	vim-ruby/ftplugin/ruby.vim	/^function! s:searchsyn(pattern,syn,flags,mode)$/;"	f
select	command-t/ruby/command-t/vim/window.rb	/^      def self.select window$/;"	F	class:CommandT.VIM.Window
select_in_visual_mode	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:select_in_visual_mode(region)$/;"	f
select_instance_variable	vim-ruby-refactoring/features/step_definitions/rename_instance_variable_steps.rb	/^def select_instance_variable$/;"	f
select_line	vim-ruby-refactoring/features/step_definitions/extract_method_steps.rb	/^def select_line$/;"	f
select_lines	vim-ruby-refactoring/features/step_definitions/extract_method_steps.rb	/^def select_lines$/;"	f
select_local_variable	vim-ruby-refactoring/features/step_definitions/rename_local_variable_steps.rb	/^def select_local_variable$/;"	f
select_magic_number	vim-ruby-refactoring/features/step_definitions/extract_constant_steps.rb	/^def select_magic_number$/;"	f
select_method	vim-ruby-refactoring/features/support/shared_methods.rb	/^def select_method$/;"	f
select_next	command-t/ruby/command-t/controller.rb	/^    def select_next$/;"	f	class:CommandT.Controller.quickfix
select_next	command-t/ruby/command-t/match_window.rb	/^    def select_next$/;"	f	class:CommandT.MatchWindow
select_prev	command-t/ruby/command-t/controller.rb	/^    def select_prev$/;"	f	class:CommandT.Controller.quickfix
select_prev	command-t/ruby/command-t/match_window.rb	/^    def select_prev$/;"	f	class:CommandT.MatchWindow
select_rspec_let	vim-ruby-refactoring/features/step_definitions/extract_let_steps.rb	/^def select_rspec_let$/;"	f
select_variable_assignment	vim-ruby-refactoring/features/step_definitions/extract_let_steps.rb	/^def select_variable_assignment$/;"	f
select_variable_contents	vim-ruby-refactoring/plugin/refactorings/general/extractvariable.vim	/^function! s:select_variable_contents()$/;"	f
selection	command-t/ruby/command-t/match_window.rb	/^    def selection$/;"	f	class:CommandT.MatchWindow
selectiveexpand	vim-rails/autoload/rails.vim	/^function! s:selectiveexpand(pat,good,default,...)$/;"	f
setAbbrWithFileAbbrData	FuzzyFinder/autoload/fuf.vim	/^function s:setAbbrWithFileAbbrData(item, snippedHeads)$/;"	f
setRanks	FuzzyFinder/autoload/fuf.vim	/^function s:setRanks(item, pattern, exprBoundary, stats)$/;"	f
set_bool	command-t/ruby/command-t/settings.rb	/^    def set_bool setting, value$/;"	f	class:CommandT.Settings
set_current_compiler	vim-dispatch/autoload/dispatch.vim	/^function! s:set_current_compiler(name)$/;"	f
set_file_content	vim-multiple-cursors/spec/benchmark_spec.rb	/^def set_file_content(string)$/;"	f
set_file_content	vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def set_file_content(string)$/;"	f
set_filetype	vim-ruby-refactoring/features/support/shared_methods.rb	/^def set_filetype$/;"	f
set_number	command-t/ruby/command-t/settings.rb	/^    def set_number setting, value$/;"	f	class:CommandT.Settings
set_status	command-t/ruby/command-t/prompt.rb	/^    def set_status *args$/;"	f	class:CommandT.Prompt
set_wild_ignore	command-t/ruby/command-t/scanner/file_scanner.rb	/^    def set_wild_ignore(ignore)$/;"	f	class:CommandT.FileScanner
setup	vim-scriptease/plugin/scriptease.vim	/^function! s:setup() abort$/;"	f
setup_paste	vim-unimpaired/plugin/unimpaired.vim	/^function! s:setup_paste() abort$/;"	f
setuplock	vim-bundler/plugin/bundler.vim	/^function! s:setuplock()$/;"	f
sharedstatedir	command-t/ruby/command-t/Makefile	/^sharedstatedir = $(prefix)\/com$/;"	m
shellesc	vim-bundler/plugin/bundler.vim	/^function! s:shellesc(arg) abort$/;"	f
shellesc	vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellesc	vim-rake/plugin/rake.vim	/^function! s:shellesc(arg) abort$/;"	f
shellesc	vim-scriptease/plugin/scriptease.vim	/^function! s:shellesc(arg) abort$/;"	f
shellslash	vim-bundler/plugin/bundler.vim	/^function! s:shellslash(path)$/;"	f
shellslash	vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path)$/;"	f
shellslash	vim-rake/plugin/rake.vim	/^function! s:shellslash(path)$/;"	f
shellslash	vim-scriptease/plugin/scriptease.vim	/^function! s:shellslash(path) abort$/;"	f
show	command-t/ruby/command-t/controller.rb	/^    def show$/;"	f	class:CommandT.Controller.quickfix
showMenu	nerdtree/autoload/nerdtree.vim	/^function! s:showMenu(node)$/;"	f
show_buffer_finder	command-t/ruby/command-t/controller.rb	/^    def show_buffer_finder$/;"	f	class:CommandT.Controller
show_cursor	command-t/ruby/command-t/match_window.rb	/^    def show_cursor$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
show_file_finder	command-t/ruby/command-t/controller.rb	/^    def show_file_finder$/;"	f	class:CommandT.Controller
show_jump_finder	command-t/ruby/command-t/controller.rb	/^    def show_jump_finder$/;"	f	class:CommandT.Controller
show_tag_finder	command-t/ruby/command-t/controller.rb	/^    def show_tag_finder$/;"	f	class:CommandT.Controller
sitearch	command-t/ruby/command-t/Makefile	/^sitearch = universal-darwin12.0$/;"	m
sitearchdir	command-t/ruby/command-t/Makefile	/^sitearchdir = $(sitelibdir)\/$(sitearch)$/;"	m
sitedir	command-t/ruby/command-t/Makefile	/^sitedir = $(DESTDIR)\/Library\/Ruby\/Site$/;"	m
sitelibdir	command-t/ruby/command-t/Makefile	/^sitelibdir = $(sitedir)\/$(ruby_version)$/;"	m
skip_latency_measure	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:skip_latency_measure()$/;"	f
snakecase	vim-ruby-refactoring/plugin/refactorings/general/introducevariable.vim	/^function! s:snakecase(word)$/;"	f
sname	vim-rails/autoload/rails.vim	/^function! s:sname()$/;"	f
snipMate#expandSnip	snipmate.vim/autoload/snipMate.vim	/^fun snipMate#expandSnip(snip, col)$/;"	f
snipMate#jumpTabStop	snipmate.vim/autoload/snipMate.vim	/^fun snipMate#jumpTabStop(backwards)$/;"	f
snippets_dir	snipmate.vim/plugin/snipMate.vim	/^	let snippets_dir = substitute(globpath(&rtp, 'snippets\/'), "\\n", ',', 'g')$/;"	v
sort_parameter_declaration_position_pairs	vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:sort_parameter_declaration_position_pairs(pair1, pair2)$/;"	f
sort_parameters_by_declaration	vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:sort_parameters_by_declaration(parameters)$/;"	f
sorted_matches_for	command-t/ruby/command-t/finder.rb	/^    def sorted_matches_for str, options = {}$/;"	f	class:CommandT.Finder
specEdit	vim-rails/autoload/rails.vim	/^function! s:specEdit(cmd,...) abort$/;"	f
specList	vim-rails/autoload/rails.vim	/^function! s:specList(A,L,P)$/;"	f
split	vim-rails/autoload/rails.vim	/^function! s:split(arg, ...)$/;"	f
srcdir	command-t/ruby/command-t/Makefile	/^srcdir = .$/;"	m
stage_info	vim-fugitive/plugin/fugitive.vim	/^function! s:stage_info(lnum) abort$/;"	f
start_latency_measure	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:start_latency_measure()$/;"	f
startswith	vim-rails/autoload/rails.vim	/^function! s:startswith(string,prefix)$/;"	f
stepmatch	vim-cucumber/ftplugin/cucumber.vim	/^function! s:stepmatch(receiver,target)$/;"	f
steps	vim-cucumber/ftplugin/cucumber.vim	/^function! s:steps(lnum)$/;"	f
string_decode	vim-unimpaired/plugin/unimpaired.vim	/^function! s:string_decode(str)$/;"	f
string_encode	vim-unimpaired/plugin/unimpaired.vim	/^function! s:string_encode(str)$/;"	f
stub_finder	command-t/spec/command-t/controller_spec.rb	/^  def stub_finder(sorted_matches=[])$/;"	f
stub_match_window	command-t/spec/command-t/controller_spec.rb	/^  def stub_match_window(selection)$/;"	f
stub_prompt	command-t/spec/command-t/controller_spec.rb	/^  def stub_prompt(abbrev='')$/;"	f
stub_vim	command-t/spec/command-t/controller_spec.rb	/^  def stub_vim(working_directory)$/;"	f
stylesheetEdit	vim-rails/autoload/rails.vim	/^function! s:stylesheetEdit(cmd,...)$/;"	f
stylesheetList	vim-rails/autoload/rails.vim	/^function! s:stylesheetList(A,L,P)$/;"	f
sub	vim-bundler/plugin/bundler.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sub	vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sub	vim-rails/autoload/rails.vim	/^function! s:sub(str,pat,rep)$/;"	f
sub	vim-rake/plugin/rake.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sub	vim-scriptease/plugin/scriptease.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
subprocess	vim-l9/autoload/l9/async.py	/^import subprocess$/;"	i
supertab_close_preview	supertab/plugin/supertab.vim	/^    augroup supertab_close_preview$/;"	a
syn	vim-cucumber/indent/cucumber.vim	/^function! s:syn(lnum)$/;"	f
synname	vim-endwise/plugin/endwise.vim	/^function! s:synname()$/;"	f
synname	vim-ruby/ftplugin/ruby.vim	/^function! s:synname()$/;"	f
syntaxfile	vim-bundler/plugin/bundler.vim	/^function! s:syntaxfile()$/;"	f
syntaxlock	vim-bundler/plugin/bundler.vim	/^function! s:syntaxlock()$/;"	f
sysconfdir	command-t/ruby/command-t/Makefile	/^sysconfdir = $(prefix)\/etc$/;"	m
t:miniBufExplAutoUpdate	minibufexpl.vim/plugin/minibufexpl.vim	/^let t:miniBufExplAutoUpdate = 0$/;"	v
t:miniBufExplSortBy	minibufexpl.vim/plugin/minibufexpl.vim	/^let t:miniBufExplSortBy = g:miniBufExplSortBy$/;"	v
t:skipEligibleBuffersCheck	minibufexpl.vim/plugin/minibufexpl.vim	/^let t:skipEligibleBuffersCheck = 0$/;"	v
tag_finder	command-t/ruby/command-t/controller.rb	/^    def tag_finder$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
taglist	command-t/ruby/command-t/scanner/tag_scanner.rb	/^    def taglist$/;"	f	class:CommandT.TagScanner.paths
target_prefix	command-t/ruby/command-t/Makefile	/^target_prefix = $/;"	m
tcomment#CollectFileTypes	tcomment_vim/autoload/tcomment.vim	/^function! tcomment#CollectFileTypes()$/;"	f
tcomment#Comment	tcomment_vim/autoload/tcomment.vim	/^function! tcomment#Comment(beg, end, ...)$/;"	f
tcomment#CommentAs	tcomment_vim/autoload/tcomment.vim	/^function! tcomment#CommentAs(beg, end, commentAnyway, filetype, ...)$/;"	f
tcomment#Complete	tcomment_vim/autoload/tcomment.vim	/^function! tcomment#Complete(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
tcomment#CompleteArgs	tcomment_vim/autoload/tcomment.vim	/^function! tcomment#CompleteArgs(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
tcomment#DefineType	tcomment_vim/autoload/tcomment.vim	/^function! tcomment#DefineType(name, commentdef, ...)$/;"	f
tcomment#GetCommentDef	tcomment_vim/autoload/tcomment.vim	/^function! tcomment#GetCommentDef(name)$/;"	f
tcomment#GuessCommentType	tcomment_vim/autoload/tcomment.vim	/^function! tcomment#GuessCommentType(...) "{{{3$/;"	f
tcomment#Operator	tcomment_vim/autoload/tcomment.vim	/^function! tcomment#Operator(type, ...) "{{{3$/;"	f
tcomment#OperatorAnyway	tcomment_vim/autoload/tcomment.vim	/^function! tcomment#OperatorAnyway(type) "{{{3$/;"	f
tcomment#OperatorLine	tcomment_vim/autoload/tcomment.vim	/^function! tcomment#OperatorLine(type) "{{{3$/;"	f
tcomment#OperatorLineAnyway	tcomment_vim/autoload/tcomment.vim	/^function! tcomment#OperatorLineAnyway(type) "{{{3$/;"	f
tcomment#SetOption	tcomment_vim/autoload/tcomment.vim	/^function! tcomment#SetOption(name, arg) "{{{3$/;"	f
tcomment#TextObjectInlineComment	tcomment_vim/autoload/tcomment.vim	/^function! tcomment#TextObjectInlineComment() "{{{3$/;"	f
tcomment#TypeExists	tcomment_vim/autoload/tcomment.vim	/^function! tcomment#TypeExists(name)$/;"	f
term	command-t/ruby/command-t/controller.rb	/^    def term$/;"	f	class:CommandT.Controller.quickfix.ensure_appropriate_window_selection
threading	vim-l9/autoload/l9/async.py	/^import threading$/;"	i
throw	vim-bundler/plugin/bundler.vim	/^function! s:throw(string) abort$/;"	f
throw	vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
throw	vim-rake/plugin/rake.vim	/^function! s:throw(string) abort$/;"	f
time	vim-scriptease/plugin/scriptease.vim	/^function! s:time(cmd)$/;"	f
timerBegin	vim-l9/plugin/l9.vim	/^  function s:timerBegin(tag)$/;"	f
timerDump	vim-l9/plugin/l9.vim	/^  function s:timerDump()$/;"	f
timerStop	vim-l9/plugin/l9.vim	/^  function s:timerStop()$/;"	f
tlist_pyrex_settings	taglist_46/plugin/taglist.vim	/^let tlist_pyrex_settings='python;c:classe;m:memder;f:function'$/;"	v
toLowerForIgnoringCase	FuzzyFinder/autoload/fuf.vim	/^function s:toLowerForIgnoringCase(str)$/;"	f
toggle	vim-unimpaired/plugin/unimpaired.vim	/^function! s:toggle(op)$/;"	f
toggleIgnoreFilter	nerdtree/autoload/nerdtree.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	nerdtree/autoload/nerdtree.vim	/^function! s:toggleZoom()$/;"	f
toggle_focus	command-t/ruby/command-t/controller.rb	/^    def toggle_focus$/;"	f	class:CommandT.Controller.quickfix
togglebg#map	vim-colors-solarized/autoload/togglebg.vim	/^function! togglebg#map(mapActivation)$/;"	f
topdir	command-t/ruby/command-t/Makefile	/^topdir = \/System\/Library\/Frameworks\/Ruby.framework\/Versions\/1.8\/usr\/lib\/ruby\/1.8\/universal-darwin12.0$/;"	m
truncated_match	command-t/ruby/command-t/match_window.rb	/^    def truncated_match str$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
txtfiles	command-t/Makefile	/^txtfiles    := $(shell find doc -name '*.txt')$/;"	m
type	vim-multiple-cursors/spec/benchmark_spec.rb	/^def type(string)$/;"	f
type	vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def type(string)$/;"	f
unfocus	command-t/ruby/command-t/match_window.rb	/^    def unfocus$/;"	f	class:CommandT.MatchWindow
unfocus	command-t/ruby/command-t/prompt.rb	/^    def unfocus$/;"	f	class:CommandT.Prompt
unimpaired_paste	vim-unimpaired/plugin/unimpaired.vim	/^augroup unimpaired_paste$/;"	a
uniq	vim-rails/autoload/rails.vim	/^function! s:uniq(list) abort$/;"	f
unlet_for	vim-scriptease/plugin/scriptease.vim	/^function! s:unlet_for(files) abort$/;"	f
unload	command-t/ruby/command-t/controller.rb	/^    def unload$/;"	f	class:CommandT.Controller.quickfix
unload	command-t/ruby/command-t/match_window.rb	/^    def unload$/;"	f	class:CommandT.MatchWindow
unlock	command-t/ruby/command-t/match_window.rb	/^    def unlock$/;"	f	class:CommandT.MatchWindow.match_with_syntax_highlight
upDirCurrentRootClosed	nerdtree/autoload/nerdtree.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
upDirCurrentRootOpen	nerdtree/autoload/nerdtree.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
updateBufTimes	FuzzyFinder/autoload/fuf/buffer.vim	/^function s:updateBufTimes()$/;"	f
updateData	FuzzyFinder/autoload/fuf/mrufile.vim	/^function s:updateData()$/;"	f
updateInfo	FuzzyFinder/autoload/fuf/mrucmd.vim	/^function s:updateInfo(cmd)$/;"	f
update_visual_markers	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:update_visual_markers(region)$/;"	f
url_decode	vim-unimpaired/plugin/unimpaired.vim	/^function! s:url_decode(str)$/;"	f
url_encode	vim-unimpaired/plugin/unimpaired.vim	/^function! s:url_encode(str)$/;"	f
vendorarchdir	command-t/ruby/command-t/Makefile	/^vendorarchdir = $(vendorlibdir)\/$(sitearch)$/;"	m
vendordir	command-t/ruby/command-t/Makefile	/^vendordir = $(libdir)\/ruby\/vendor_ruby$/;"	m
vendorlibdir	command-t/ruby/command-t/Makefile	/^vendorlibdir = $(vendordir)\/$(ruby_version)$/;"	m
viewEdit	vim-rails/autoload/rails.vim	/^function! s:viewEdit(cmd,...)$/;"	f
viewList	vim-rails/autoload/rails.vim	/^function! s:viewList(A,L,P)$/;"	f
vim	vim-l9/autoload/l9/async.py	/^import vim$/;"	i
vimfiles	command-t/Makefile	/^vimfiles    := $(shell find plugin -name '*.vim')$/;"	m
wait_for_user_input	vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:wait_for_user_input(mode)$/;"	f
warn	command-t/ruby/command-t/stub.rb	/^    def warn *msg$/;"	f	class:CommandT.Stub
warn	vim-bundler/plugin/bundler.vim	/^function! s:warn(str)$/;"	f
warn	vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str)$/;"	f
warn	vim-rails/autoload/rails.vim	/^function! s:warn(str)$/;"	f
warn	vim-rake/plugin/rake.vim	/^function! s:warn(str)$/;"	f
wild_ignore	command-t/ruby/command-t/vim.rb	/^    def self.wild_ignore$/;"	F	class:CommandT.VIM
with_statement	vim-l9/autoload/l9/async.py	/^from __future__ import with_statement$/;"	i
wrap	vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,...)$/;"	f
wrap_a	vim-ruby/ftplugin/ruby.vim	/^function! s:wrap_a(back,forward)$/;"	f
wrap_i	vim-ruby/ftplugin/ruby.vim	/^function! s:wrap_i(back,forward)$/;"	f
wrapreg	vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,...)$/;"	f
xml_decode	vim-unimpaired/plugin/unimpaired.vim	/^function! s:xml_decode(str)$/;"	f
xml_encode	vim-unimpaired/plugin/unimpaired.vim	/^function! s:xml_encode(str)$/;"	f
xml_entity_decode	vim-unimpaired/plugin/unimpaired.vim	/^function! s:xml_entity_decode(str)$/;"	f
yA	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> yA  :call <SID>setup_paste()<CR>A$/;"	m
yI	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> yI  :call <SID>setup_paste()<CR>I$/;"	m
yO	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> yO  :call <SID>setup_paste()<CR>O$/;"	m
yP	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> yP  :call <SID>setup_paste()<CR>i$/;"	m
yS	vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
ygI	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> ygI :call <SID>setup_paste()<CR>gI$/;"	m
ygi	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> ygi :call <SID>setup_paste()<CR>gi$/;"	m
yo	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> yo  :call <SID>setup_paste()<CR>o$/;"	m
yp	vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> yp  :call <SID>setup_paste()<CR>a$/;"	m
ys	vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
zS	vim-scriptease/plugin/scriptease.vim	/^function! s:zS(count)$/;"	f
zS	vim-scriptease/plugin/scriptease.vim	/^nmap zS <Plug>ScripteaseSynnames$/;"	m
