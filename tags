!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
%	bundle/matchit/plugin/matchit.vim	/^nnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'n') <CR>$/;"	m
%	bundle/matchit/plugin/matchit.vim	/^onoremap <silent> %  v:<C-U>call <SID>Match_wrapper('',1,'o') <CR>$/;"	m
%	bundle/matchit/plugin/matchit.vim	/^vnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'v') <CR>m'gv``$/;"	m
<2-LeftMouse>	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <2-LeftMouse>   \\|:call <SID>DoFoldOrOpenEntry('', 'e')<CR>$/;"	m
<2-RightMouse>	bundle/project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <2-RightMouse> <space>$/;"	m
<3-LeftMouse>	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <3-LeftMouse>  <Nop>$/;"	m
<3-RightMouse>	bundle/project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <3-RightMouse> <space>$/;"	m
<4-RightMouse>	bundle/project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <4-RightMouse> <space>$/;"	m
<C-2-LeftMouse>	bundle/project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <C-2-LeftMouse> <C-Return>$/;"	m
<C-Down>	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <C-Down> \\|:silent call <SID>MoveDown()<CR>$/;"	m
<C-G>S	bundle/vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	bundle/vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-LeftMouse>	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <C-LeftMouse>   <LeftMouse>$/;"	m
<C-Return>	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <C-Return> \\|:call <SID>DoFoldOrOpenEntry('silent! only', 'e')<CR>$/;"	m
<C-S>	bundle/vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-Up>	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <C-Up>   \\|:silent call <SID>MoveUp()<CR>$/;"	m
<C-W><C-D>	bundle/vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> <C-W><C-D>  :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W><C-F>	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-F> :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>\\<Lt>C-F>",'split')<CR>$/;"	m
<C-W><C-O>	bundle/project-1.4.1/plugin/project.vim	/^                nmap <silent> <unique> <C-W><C-O> <C-W>o$/;"	m
<C-W><C-]>	bundle/vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> <C-W><C-]>  :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W><C-]>	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W><C-]>  :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>]	bundle/vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> <C-W>]      :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W>]	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>]      :<C-U>exe v:count1."stag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>d	bundle/vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> <C-W>d      :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W>f	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>f     :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>f",'split')<CR>$/;"	m
<C-W>g<C-]>	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g<C-]> :<C-U>exe        "stjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>g]	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g]     :<C-U>exe      "stselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>gf	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>gf    :<C-U>exe <SID>gf(v:count1,"\\<Lt>C-W>gf",'tabedit')<CR>$/;"	m
<C-W>g}	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>g}     :<C-U>exe        "ptjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-W>o	bundle/project-1.4.1/plugin/project.vim	/^                nmap <silent> <unique> <C-W>o <Plug>ProjectOnly$/;"	m
<C-W>}	bundle/vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> <C-W>}      :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
<C-W>}	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-W>}      :<C-U>exe          "ptag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-X><CR>	bundle/vim-endwise/plugin/endwise.vim	/^    imap <C-X><CR> <CR><Plug>AlwaysEnd$/;"	m
<C-]>	bundle/vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> <C-]>       :<C-U>exe <SID>jump('edit',v:count)<CR>$/;"	m
<C-]>	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> <C-]>       :<C-U>exe  v:count1."tag <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
<C-^>	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <C-^> <Nop>$/;"	m
<CR>	bundle/vim-endwise/plugin/endwise.vim	/^    imap <CR>      <CR><Plug>DiscretionaryEnd$/;"	m
<F12>	bundle/project-1.4.1/plugin/project.vim	/^        nmap <silent> <F12> <Plug>ToggleProject$/;"	m
<F1>	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <F1> :let g:proj_doinghelp = 1<CR><F1>$/;"	m
<F5>	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent>           <F5> :call <SID>RefreshEntriesFromDir(1)<CR>$/;"	m
<LocalLeader>0	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer>          <LocalLeader>0 \\|:call <SID>ListSpawn("")<CR>$/;"	m
<LocalLeader><Down>	bundle/project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <LocalLeader><Down> <C-Down>$/;"	m
<LocalLeader><Up>	bundle/project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <LocalLeader><Up> <C-Up>$/;"	m
<LocalLeader>C	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>C :call <SID>CreateEntriesFromDir(1)<CR>$/;"	m
<LocalLeader>E	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>E :call <SID>OpenEntry(line('.'), '', 'e', 1)<CR>$/;"	m
<LocalLeader>F0	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer>          <LocalLeader>F0 \\|:call <SID>ListSpawn("_fold")<CR>$/;"	m
<LocalLeader>G	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>G \\|:call <SID>GrepAll(1, line('.'), "")<CR>$/;"	m
<LocalLeader>I	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>I :echo Project_GetFname(line('.'))<CR>$/;"	m
<LocalLeader>L	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>L \\|:call <SID>LoadAll(1, line('.'))<CR>$/;"	m
<LocalLeader>R	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>R :call <SID>RefreshEntriesFromDir(1)<CR>$/;"	m
<LocalLeader>S	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>S \\|:call <SID>LoadAllSplit(0, line('.'))<CR>$/;"	m
<LocalLeader>T	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>T \\|:call <SID>DoFoldOrOpenEntry('', 'tabe')<CR>$/;"	m
<LocalLeader>W	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>W \\|:call <SID>WipeAll(1, line('.'))<CR>$/;"	m
<LocalLeader>c	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>c :call <SID>CreateEntriesFromDir(0)<CR>$/;"	m
<LocalLeader>e	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>e :call <SID>OpenEntry(line('.'), '', '', 0)<CR>$/;"	m
<LocalLeader>f0	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer>          <LocalLeader>f0 \\|:call <SID>ListSpawn("_fold")<CR>$/;"	m
<LocalLeader>g	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>g \\|:call <SID>GrepAll(0, line('.'), "")<CR>$/;"	m
<LocalLeader>i	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>i :echo <SID>RecursivelyConstructDirectives(line('.'))<CR>$/;"	m
<LocalLeader>l	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>l \\|:call <SID>LoadAll(0, line('.'))<CR>$/;"	m
<LocalLeader>o	bundle/project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <LocalLeader>o <C-Return>$/;"	m
<LocalLeader>r	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>r :call <SID>RefreshEntriesFromDir(0)<CR>$/;"	m
<LocalLeader>s	bundle/project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <LocalLeader>s <S-Return>$/;"	m
<LocalLeader>v	bundle/project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <LocalLeader>v <M-CR>$/;"	m
<LocalLeader>w	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <LocalLeader>w \\|:call <SID>WipeAll(0, line('.'))<CR>$/;"	m
<M-2-LeftMouse>	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <M-2-LeftMouse> <M-CR>$/;"	m
<M-CR>	bundle/project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <M-CR> <Return><C-W>p$/;"	m
<P	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <P :call <SID>putline('[p')<CR><']$/;"	m
<Plug>(a)	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(a) <C-o>:call <SID>apply_user_input_next('i')<CR>$/;"	m
<Plug>(a)	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(a) :call <SID>apply_user_input_next('n')<CR>$/;"	m
<Plug>(d)	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(d) <C-o>:call <SID>detect_bad_input()<CR>$/;"	m
<Plug>(d)	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(d) :call <SID>detect_bad_input()<CR>$/;"	m
<Plug>(i)	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(i) <C-o>:call <SID>process_user_input()<CR>$/;"	m
<Plug>(i)	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(i) :call <SID>process_user_input()<CR>$/;"	m
<Plug>(n)	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(n) :<C-u>call multiple_cursors#new('v')<CR>$/;"	m
<Plug>(p)	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(p) :<C-u>call multiple_cursors#prev()<CR>$/;"	m
<Plug>(s)	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(s) :<C-u>call multiple_cursors#skip()<CR>$/;"	m
<Plug>(w)	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(w) <C-o>:call <SID>wait_for_user_input('')<CR>$/;"	m
<Plug>(w)	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(w) :call <SID>wait_for_user_input('')<CR>$/;"	m
<Plug>AlwaysEnd	bundle/vim-endwise/plugin/endwise.vim	/^  imap    <script> <Plug>AlwaysEnd        <SID>AlwaysEnd$/;"	m
<Plug>Csurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>DBDescribeProcedure	bundle/dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBDescribeProcedure :DBDescribeProcedure<CR>$/;"	m
<Plug>DBDescribeProcedureAskName	bundle/dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBDescribeProcedureAskName$/;"	m
<Plug>DBDescribeTable	bundle/dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBDescribeTable :DBDescribeTable<CR>$/;"	m
<Plug>DBDescribeTableAskName	bundle/dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBDescribeTableAskName$/;"	m
<Plug>DBExecSQL	bundle/dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBExecSQL :DBExecSQL<CR>$/;"	m
<Plug>DBExecSQLUnderCursor	bundle/dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBExecSQLUnderCursor :DBExecSQLUnderCursor<CR>$/;"	m
<Plug>DBExecSQLUnderTopXCursor	bundle/dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBExecSQLUnderTopXCursor :DBExecSQLUnderCursorTopX<CR>$/;"	m
<Plug>DBHistory	bundle/dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBHistory :DBHistory<CR>$/;"	m
<Plug>DBListColumn	bundle/dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBListColumn :DBListColumn<CR>$/;"	m
<Plug>DBListProcedure	bundle/dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBListProcedure$/;"	m
<Plug>DBListTable	bundle/dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBListTable$/;"	m
<Plug>DBListView	bundle/dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBListView$/;"	m
<Plug>DBOrientationToggle	bundle/dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBOrientationToggle :DBOrientationToggle<CR>$/;"	m
<Plug>DBPromptForBufferParameters	bundle/dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBPromptForBufferParameters$/;"	m
<Plug>DBSelectFromTable	bundle/dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBSelectFromTable :DBSelectFromTable<CR>$/;"	m
<Plug>DBSelectFromTableAskName	bundle/dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBSelectFromTableAskName$/;"	m
<Plug>DBSelectFromTableWithWhere	bundle/dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBSelectFromTableWithWhere$/;"	m
<Plug>DBSelectFromTopXTable	bundle/dbext_2000/plugin/dbext.vim	/^    nmap <unique> <script> <Plug>DBSelectFromTopXTable :DBSelectFromTableTopX<CR>$/;"	m
<Plug>DiscretionaryEnd	bundle/vim-endwise/plugin/endwise.vim	/^  imap    <script> <Plug>DiscretionaryEnd <SID>DiscretionaryEnd$/;"	m
<Plug>Dsurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>ISurround	bundle/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	bundle/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>NERDTreeMirrorOpen	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeMirrorOpen   :call <SID>NERDTreeMirrorOrCreate()$/;"	m
<Plug>NERDTreeMirrorToggle	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeMirrorToggle :call <SID>NERDTreeMirrorToggle()$/;"	m
<Plug>NERDTreeSteppedClose	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeSteppedClose :call <SID>NERDTreeSteppedClose()$/;"	m
<Plug>NERDTreeSteppedOpen	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeSteppedOpen  :call <SID>NERDTreeSteppedOpen()$/;"	m
<Plug>NERDTreeTabsClose	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeTabsClose    :call <SID>NERDTreeCloseAllTabs()$/;"	m
<Plug>NERDTreeTabsOpen	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeTabsOpen     :call <SID>NERDTreeOpenAllTabs()$/;"	m
<Plug>NERDTreeTabsToggle	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeTabsToggle   :call <SID>NERDTreeToggleAllTabs()$/;"	m
<Plug>ProjectOnly	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <script> <Plug>ProjectOnly :call <SID>DoProjectOnly()<CR>$/;"	m
<Plug>ScripteaseFilter	bundle/vim-scriptease/plugin/scriptease.vim	/^nnoremap <silent> <Plug>ScripteaseFilter :<C-U>set opfunc=<SID>filterop<CR>g@$/;"	m
<Plug>ScripteaseSynnames	bundle/vim-scriptease/plugin/scriptease.vim	/^nnoremap <silent> <Plug>ScripteaseSynnames :<C-U>exe <SID>zS(v:count)<CR>$/;"	m
<Plug>SlimeConfig	bundle/vim-slime/plugin/slime.vim	/^noremap <unique> <script> <silent> <Plug>SlimeConfig :<c-u>SlimeConfig<cr>$/;"	m
<Plug>SlimeLineSend	bundle/vim-slime/plugin/slime.vim	/^noremap <unique> <script> <silent> <Plug>SlimeLineSend :<c-u>call <SID>SlimeSendLines(v:count1)<cr>$/;"	m
<Plug>SlimeMotionSend	bundle/vim-slime/plugin/slime.vim	/^noremap <unique> <script> <silent> <Plug>SlimeMotionSend <SID>Operator$/;"	m
<Plug>SlimeParagraphSend	bundle/vim-slime/plugin/slime.vim	/^noremap <unique> <script> <silent> <Plug>SlimeParagraphSend <SID>Operatorip$/;"	m
<Plug>SlimeRegionSend	bundle/vim-slime/plugin/slime.vim	/^noremap <unique> <script> <silent> <Plug>SlimeRegionSend :<c-u>call <SID>SlimeSendOp(visualmode(), 1)<cr>$/;"	m
<Plug>SuperTabBackward	bundle/supertab/plugin/supertab.vim	/^  imap <script> <Plug>SuperTabBackward <c-r>=SuperTab('p')<cr>$/;"	m
<Plug>SuperTabForward	bundle/supertab/plugin/supertab.vim	/^  imap <script> <Plug>SuperTabForward <c-r>=SuperTab('n')<cr>$/;"	m
<Plug>SurroundRepeat	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>ToggleBackground	bundle/vim-colors-solarized/autoload/togglebg.vim	/^inoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>a$/;"	m
<Plug>ToggleBackground	bundle/vim-colors-solarized/autoload/togglebg.vim	/^nnoremap <unique> <script> <Plug>ToggleBackground <SID>TogBG$/;"	m
<Plug>ToggleBackground	bundle/vim-colors-solarized/autoload/togglebg.vim	/^vnoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>gv$/;"	m
<Plug>ToggleProject	bundle/project-1.4.1/plugin/project.vim	/^nnoremap <script> <Plug>ToggleProject :call <SID>DoToggleProject()<CR>$/;"	m
<Plug>VSurround	bundle/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>$/;"	m
<Plug>VgSurround	bundle/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>$/;"	m
<Plug>YSsurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSsurround :<C-U>call <SID>opfunc2(v:count1)<CR>$/;"	m
<Plug>YSurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSurround  :<C-U>set opfunc=<SID>opfunc2<CR>g@$/;"	m
<Plug>Yssurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Yssurround :<C-U>call <SID>opfunc(v:count1)<CR>$/;"	m
<Plug>Ysurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Ysurround  :<C-U>set opfunc=<SID>opfunc<CR>g@$/;"	m
<Plug>unimpairedBlankDown	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedBlankDown :<C-U>call <SID>BlankDown(v:count1)<CR>$/;"	m
<Plug>unimpairedBlankUp	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedBlankUp   :<C-U>call <SID>BlankUp(v:count1)<CR>$/;"	m
<Plug>unimpairedContextNext	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedContextNext     :call <SID>Context(0)<CR>$/;"	m
<Plug>unimpairedContextNext	bundle/vim-unimpaired/plugin/unimpaired.vim	/^onoremap <silent> <Plug>unimpairedContextNext     :call <SID>ContextMotion(0)<CR>$/;"	m
<Plug>unimpairedContextPrevious	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedContextPrevious :call <SID>Context(1)<CR>$/;"	m
<Plug>unimpairedContextPrevious	bundle/vim-unimpaired/plugin/unimpaired.vim	/^onoremap <silent> <Plug>unimpairedContextPrevious :call <SID>ContextMotion(1)<CR>$/;"	m
<Plug>unimpairedDirectoryNext	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedDirectoryNext     :<C-U>edit <C-R>=<SID>fnameescape(<SID>FileByOffset(v:count1))<CR><CR>$/;"	m
<Plug>unimpairedDirectoryPrevious	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedDirectoryPrevious :<C-U>edit <C-R>=<SID>fnameescape(<SID>FileByOffset(-v:count1))<CR><CR>$/;"	m
<Plug>unimpairedMoveDown	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedMoveDown :<C-U>call <SID>Move('+',v:count1,'Down')<CR>$/;"	m
<Plug>unimpairedMoveUp	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedMoveUp   :<C-U>call <SID>Move('--',v:count1,'Up')<CR>$/;"	m
<Plug>unimpairedONext	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nmap <silent> <Plug>unimpairedONext     <Plug>unimpairedDirectoryNext:echohl WarningMSG<Bar>echo "]o is deprecated. Use ]f"<Bar>echohl NONE<CR>$/;"	m
<Plug>unimpairedOPrevious	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nmap <silent> <Plug>unimpairedOPrevious <Plug>unimpairedDirectoryPrevious:echohl WarningMSG<Bar>echo "[o is deprecated. Use [f"<Bar>echohl NONE<CR>$/;"	m
<Plug>unimpairedPaste	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPaste :call <SID>setup_paste()<CR>$/;"	m
<Plug>unimpairedPutAbove	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPutAbove :call <SID>putline('[p')<CR>$/;"	m
<Plug>unimpairedPutBelow	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPutBelow :call <SID>putline(']p')<CR>$/;"	m
<Return>	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <Return>   \\|:call <SID>DoFoldOrOpenEntry('', 'e')<CR>$/;"	m
<RightMouse>	bundle/project-1.4.1/plugin/project.vim	/^        nmap     <buffer> <silent> <RightMouse>   <space>$/;"	m
<S-2-LeftMouse>	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <S-2-LeftMouse> \\|:call <SID>DoFoldOrOpenEntry('', 'sp')<CR>$/;"	m
<S-LeftMouse>	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <S-LeftMouse>   <LeftMouse>$/;"	m
<S-Return>	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <S-Return> \\|:call <SID>DoFoldOrOpenEntry('', 'sp')<CR>$/;"	m
<SID>AlwaysEnd	bundle/vim-endwise/plugin/endwise.vim	/^  inoremap <silent> <SID>AlwaysEnd        <C-R>=<SID>crend(1)<CR>$/;"	m
<SID>DiscretionaryEnd	bundle/vim-endwise/plugin/endwise.vim	/^  inoremap <silent> <SID>DiscretionaryEnd <C-R>=<SID>crend(0)<CR>$/;"	m
<SID>Operator	bundle/vim-slime/plugin/slime.vim	/^noremap <SID>Operator :<c-u>set opfunc=<SID>SlimeSendOp<cr>g@$/;"	m
<SID>TogBG	bundle/vim-colors-solarized/autoload/togglebg.vim	/^noremap <SID>TogBG  :call <SID>TogBG()<CR>$/;"	m
<SID>xx	bundle/taglist_46/plugin/taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
<SID>xx	bundle/vim-rails/autoload/rails.vim	/^map <SID>xx <SID>xx$/;"	m
<c-c><c-c>	bundle/vim-slime/plugin/slime.vim	/^    nmap <c-c><c-c> <Plug>SlimeParagraphSend$/;"	m
<c-c>v	bundle/vim-slime/plugin/slime.vim	/^    nmap <c-c>v <Plug>SlimeConfig$/;"	m
<c-r><tab>	bundle/snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <c-r><tab> <c-r>=ShowAvailableSnips()<cr>$/;"	m
<c-x>	bundle/supertab/plugin/supertab.vim	/^  imap <silent> <c-x> <c-r>=<SID>ManualCompletionEnter()<cr>$/;"	m
<cr>	bundle/supertab/plugin/supertab.vim	/^      inoremap <silent> <cr> <c-r>=<SID>SelectCompletion(1)<cr>$/;"	m
<leader>rap	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  nnoremap <leader>rap  :RAddParameter<cr>$/;"	m
<leader>rapn	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  nnoremap <leader>rapn :RAddParameterNB<cr>$/;"	m
<leader>rcpc	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  nnoremap <leader>rcpc :RConvertPostConditional<cr>$/;"	m
<leader>rec	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  vnoremap <leader>rec  :RExtractConstant<cr>$/;"	m
<leader>rel	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  nnoremap <leader>rel  :RExtractLet<cr>$/;"	m
<leader>relv	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  vnoremap <leader>relv :RExtractLocalVariable<cr>$/;"	m
<leader>rem	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  vnoremap <leader>rem  :RExtractMethod<cr>$/;"	m
<leader>rit	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  nnoremap <leader>rit  :RInlineTemp<cr>$/;"	m
<leader>riv	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  nnoremap <leader>riv  :RIntroduceVariable<cr>$/;"	m
<leader>rriv	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  vnoremap <leader>rriv :RRenameInstanceVariable<cr>$/;"	m
<leader>rrlv	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  vnoremap <leader>rrlv :RRenameLocalVariable<cr>$/;"	m
<p	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> <p :call <SID>putline(']p')<CR><']$/;"	m
<s-tab>	bundle/snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <s-tab> <c-r>=BackwardsSnippet()<cr>$/;"	m
<space>	bundle/project-1.4.1/plugin/project.vim	/^        nnoremap <buffer> <silent> <space>  \\|:silent exec 'vertical resize '.(match(g:proj_flags, '\\Ct')!=-1 && winwidth('.') > g:proj_window_width?(g:proj_window_width):(winwidth('.') + g:proj_window_increment))<CR>$/;"	m
<tab>	bundle/snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <tab> <c-r>=TriggerSnippet()<cr>$/;"	m
=P	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> =P :call <SID>putline('[p')<CR>=']$/;"	m
=p	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> =p :call <SID>putline(']p')<CR>=']$/;"	m
>P	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> >P :call <SID>putline('[p')<CR>>']$/;"	m
>p	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> >p :call <SID>putline(']p')<CR>>']$/;"	m
AG_COMPRESS	bundle/the_silver_searcher/src/decompress.h	/^    AG_COMPRESS,$/;"	e	enum:__anon1
AG_COMPRESS	bundle/the_silver_searcher/src/util.h	/^    AG_COMPRESS,$/;"	e	enum:__anon8
AG_GZIP	bundle/the_silver_searcher/src/decompress.h	/^    AG_GZIP,$/;"	e	enum:__anon1
AG_GZIP	bundle/the_silver_searcher/src/util.h	/^    AG_GZIP,$/;"	e	enum:__anon8
AG_NO_COMPRESSION	bundle/the_silver_searcher/src/decompress.h	/^    AG_NO_COMPRESSION,$/;"	e	enum:__anon1
AG_NO_COMPRESSION	bundle/the_silver_searcher/src/util.h	/^    AG_NO_COMPRESSION,$/;"	e	enum:__anon8
AG_XZ	bundle/the_silver_searcher/src/decompress.h	/^    AG_XZ,$/;"	e	enum:__anon1
AG_ZIP	bundle/the_silver_searcher/src/decompress.h	/^    AG_ZIP,$/;"	e	enum:__anon1
AG_ZIP	bundle/the_silver_searcher/src/util.h	/^    AG_ZIP$/;"	e	enum:__anon8
ARCHIVE	bundle/vim-coffee-script/Makefile	/^ARCHIVE = vim-coffee-script-$(VERSION).zip$/;"	m
ARCHIVE_DIRS	bundle/vim-coffee-script/Makefile	/^ARCHIVE_DIRS = after autoload compiler doc ftdetect ftplugin indent syntax$/;"	m
Abbrev	bundle/vim-rails/autoload/rails.vim	/^function! s:Abbrev(bang,...) abort$/;"	f
AcceptSelection	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:AcceptSelection(action)$/;"	f
Add	bundle/vim-cucumber/syntax/cucumber.vim	/^function! s:Add(name)$/;"	f
AddBracketExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddBracketExpand(abbr,expn)$/;"	f
AddColonExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddColonExpand(abbr,expn)$/;"	f
AddModeExtra	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:AddModeExtra(mode, extra, beg, end) "{{{3$/;"	f
AddParameter	bundle/vim-ruby-refactoring/plugin/refactorings/general/addparameter.vim	/^function! AddParameter()$/;"	f
AddParameterNB	bundle/vim-ruby-refactoring/plugin/refactorings/general/addparameternb.vim	/^function! AddParameterNB()$/;"	f
AddParenExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddParenExpand(abbr,expn,...)$/;"	f
AddSelectiveExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddSelectiveExpand(abbr,pat,expn,...)$/;"	f
AddTabExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddTabExpand(abbr,expn)$/;"	f
AddToClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:AddToClasspath(classpath,path)$/;"	f
AltFiletype	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:AltFiletype(filetype) "{{{3$/;"	f
Alter	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=+ -complete=customlist,dbext#DB_completeTables Alter             :call dbext#DB_execSql("alter " . <q-args>)$/;"	c
Alternate	bundle/vim-rails/autoload/rails.vim	/^function! s:Alternate(cmd,line1,line2,count,...)$/;"	f
Args	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function s:Args()$/;"	f
Args	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function s:Args()$/;"	f
Asyncer	bundle/vim-l9/autoload/l9/async.py	/^class Asyncer:$/;"	c
AutoUpdate	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>AutoUpdate(curBufNum,force)$/;"	f
BackupDir	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  class BackupDir$/;"	c	class:VimRubyInstaller
BackwardsSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! BackwardsSnippet()$/;"	f
BinSearchToAppend	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:BinSearchToAppend(start, end, line, cmp, direction)$/;"	f
BinSearchToAppend2	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:BinSearchToAppend2(start, end, line, cmp, direction, accessor,$/;"	f
Blame	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
BlankDown	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:BlankDown(count) abort$/;"	f
BlankUp	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:BlankUp(count) abort$/;"	f
BlockGetCommentRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:BlockGetCommentRx(cdef)$/;"	f
BlockGetCommentString	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:BlockGetCommentString(cdef)$/;"	f
BlockGetMiddleString	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:BlockGetMiddleString(cdef)$/;"	f
Bookmark.AddBookmark	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot)$/;"	f
Bookmark.GetSelected	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name)$/;"	f
Bookmark.Write	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(...)$/;"	f
Bookmark.compareTo	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(...)$/;"	f
Bookmark.openInNewTab	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot()$/;"	f
Bookmark.validate	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
Browse	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufAbbreviations	bundle/vim-rails/autoload/rails.vim	/^function! s:BufAbbreviations()$/;"	f
BufAddHandler	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>BufAddHandler()$/;"	f
BufCommands	bundle/vim-rails/autoload/rails.vim	/^function! s:BufCommands()$/;"	f
BufDatabase	bundle/vim-rails/autoload/rails.vim	/^function! s:BufDatabase(...)$/;"	f
BufDeleteHandler	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>BufDeleteHandler()$/;"	f
BufEnterHandler	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>BufEnterHandler() abort$/;"	f
BufEnterHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:BufEnterHook()$/;"	f
BufInit	bundle/vim-rails/plugin/rails.vim	/^function! s:BufInit(path)$/;"	f
BufLineAccessor	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:BufLineAccessor(line, context)$/;"	f
BufLineMover	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:BufLineMover(from, to, context)$/;"	f
BufLineSwapper	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:BufLineSwapper(line1, line2, context)$/;"	f
BufMappings	bundle/vim-rails/autoload/rails.vim	/^function! s:BufMappings()$/;"	f
BufNavCommands	bundle/vim-rails/autoload/rails.vim	/^function! s:BufNavCommands()$/;"	f
BufProjectionCommands	bundle/vim-rails/autoload/rails.vim	/^function! s:BufProjectionCommands()$/;"	f
BufReadIndex	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex()$/;"	f
BufReadIndexFile	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile()$/;"	f
BufReadObject	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject()$/;"	f
BufScriptWrappers	bundle/vim-rails/autoload/rails.vim	/^function! s:BufScriptWrappers()$/;"	f
BufSettings	bundle/vim-rails/autoload/rails.vim	/^function! s:BufSettings()$/;"	f
BufSyntax	bundle/vim-rails/autoload/rails.vim	/^function! s:BufSyntax()$/;"	f
BufWinEnterHandler	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:BufWinEnterHandler()$/;"	f
BufWinEnterHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:BufWinEnterHook()$/;"	f
BufWriteIndexFile	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile()$/;"	f
Buffer	bundle/Gundo/autoload/gundo.py	/^class Buffer(object):$/;"	c
BuildAllBufferDicts	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>BuildAllBufferDicts()$/;"	f
BuildBufferFinalDict	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>BuildBufferFinalDict(arg,deleted)$/;"	f
BuildBufferList	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>BuildBufferList(curBufNum)$/;"	f
BuildBufferPathSignDict	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>BuildBufferPathSignDict(bufnrs, ...)$/;"	f
BuildBufferUniqNameDict	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>BuildBufferUniqNameDict(bufnrs)$/;"	f
BuildContextStack	autoload/omni/cpp/namespaces.vim	/^function! s:BuildContextStack(namespaces, szCurrentScope)$/;"	f
BuildPrompt	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:BuildPrompt(upd)$/;"	f
BuildTabStops	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:BuildTabStops(snip, lnum, col, indent)$/;"	f
Bundle	bundle/vim-bundler/plugin/bundler.vim	/^function! s:Bundle(bang,arg)$/;"	f
BundleComplete	bundle/vim-bundler/plugin/bundler.vim	/^function! s:BundleComplete(A,L,P)$/;"	f
CASE_INSENSITIVE	bundle/the_silver_searcher/src/options.h	/^    CASE_INSENSITIVE,$/;"	e	enum:case_behavior
CASE_SENSITIVE	bundle/the_silver_searcher/src/options.h	/^    CASE_SENSITIVE,$/;"	e	enum:case_behavior
CASE_SENSITIVE_RETRY_INSENSITIVE	bundle/the_silver_searcher/src/options.h	/^    CASE_SENSITIVE_RETRY_INSENSITIVE \/* for future use *\/$/;"	e	enum:case_behavior
CASE_SMART	bundle/the_silver_searcher/src/options.h	/^    CASE_SMART,$/;"	e	enum:case_behavior
CHECK_AND_RETURN	bundle/the_silver_searcher/src/util.c	/^#define CHECK_AND_RETURN(/;"	d	file:
CMiniBufExplorer	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! CMiniBufExplorer echoe 'CMiniBufExplorer is depreciated, please use MBEClose instead.'$/;"	c
CONFIG_FILE	bundle/html5.vim/Makefile	/^CONFIG_FILE=config.mk$/;"	m
CURL_OPT	bundle/html5.vim/Makefile	/^CURL_OPT=$/;"	m
CacheErrors	bundle/syntastic/plugin/syntastic.vim	/^function! s:CacheErrors(...)$/;"	f
Call	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=+ Call              :call dbext#DB_execSql("call " . <q-args>)$/;"	c
CanUseOmnicompletion	autoload/omni/cpp/maycomplete.vim	/^function! s:CanUseOmnicompletion()$/;"	f
CaptureKeyPresses	bundle/supertab/plugin/supertab.vim	/^function! s:CaptureKeyPresses() " {{{$/;"	f
Char2Num	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:Char2Num(c)$/;"	f
Choose	bundle/matchit/plugin/matchit.vim	/^fun! s:Choose(patterns, string, comma, branch, prefix, suffix, ...)$/;"	f
ChooseSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:ChooseSnippet(scope, trigger)$/;"	f
CleanUp	bundle/matchit/plugin/matchit.vim	/^fun! s:CleanUp(options, mode, startline, startcol, ...)$/;"	f
ClearAllCtrlPCaches	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearAllCtrlPCaches cal ctrlp#clra()$/;"	c
ClearCache	bundle/syntastic/plugin/syntastic.vim	/^function! s:ClearCache()$/;"	f
ClearCtrlPCache	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearCtrlPCache     cal ctrlp#clr()$/;"	c
Close	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Close()$/;"	f
Close	bundle/snipmate.vim/ftplugin/html_snip_helper.vim	/^fun! Close()$/;"	f
CloseIfOnlyNerdTreeLeft	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:CloseIfOnlyNerdTreeLeft()$/;"	f
ClosePreview	bundle/supertab/plugin/supertab.vim	/^function! s:ClosePreview() " {{{$/;"	f
CoffeeBufNew	bundle/vim-coffee-script/ftplugin/coffee.vim	/^augroup CoffeeBufNew | augroup END$/;"	a
CoffeeBufUpdate	bundle/vim-coffee-script/ftplugin/coffee.vim	/^augroup CoffeeBufUpdate | augroup END$/;"	a
CoffeeCompile	bundle/vim-coffee-script/ftplugin/coffee.vim	/^\\        CoffeeCompile call s:CoffeeCompile(<line1>, <line2>, <q-args>)$/;"	c
CoffeeCompile	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompile(startline, endline, args)$/;"	f
CoffeeCompileClose	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileClose()$/;"	f
CoffeeCompileResetVars	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileResetVars()$/;"	f
CoffeeCompileToBuf	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeCompileToBuf(buf, startline, endline)$/;"	f
CoffeeComplete	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeComplete(cmd, cmdline, cursor)$/;"	f
CoffeeLint	bundle/vim-coffee-script/ftplugin/coffee.vim	/^command! -range=% -bang -bar -nargs=* CoffeeLint$/;"	c
CoffeeLint	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeLint(startline, endline, bang, args)$/;"	f
CoffeeMake	bundle/vim-coffee-script/compiler/coffee.vim	/^command! -bang -bar -nargs=* CoffeeMake$/;"	c
CoffeeMakeDeprecated	bundle/vim-coffee-script/compiler/coffee.vim	/^function! s:CoffeeMakeDeprecated(bang, args)$/;"	f
CoffeeRun	bundle/vim-coffee-script/ftplugin/coffee.vim	/^command! -range=% -bar -nargs=* CoffeeRun$/;"	c
CoffeeRun	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeRun(startline, endline, args)$/;"	f
CoffeeRunClose	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeRunClose()$/;"	f
CoffeeRunResetVars	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeRunResetVars()$/;"	f
CoffeeUpdateMakePrg	bundle/vim-coffee-script/compiler/coffee.vim	/^augroup CoffeeUpdateMakePrg$/;"	a
CoffeeWatch	bundle/vim-coffee-script/ftplugin/coffee.vim	/^\\        CoffeeWatch call s:CoffeeWatch(<q-args>)$/;"	c
CoffeeWatch	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatch(args)$/;"	f
CoffeeWatchClose	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatchClose()$/;"	f
CoffeeWatchResetVars	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatchResetVars()$/;"	f
CoffeeWatchUpdate	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:CoffeeWatchUpdate()$/;"	f
Colorscheme_Complete	bundle/guicolorscheme/plugin/guicolorscheme.vim	/^function! s:Colorscheme_Complete(A,L,P)$/;"	f
CommandEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:CommandEdit(cmd, name, projections, ...)$/;"	f
CommandLineCompletion	bundle/supertab/plugin/supertab.vim	/^function! s:CommandLineCompletion() " {{{$/;"	f
CommandList	bundle/vim-rails/autoload/rails.vim	/^function! s:CommandList(A,L,P)$/;"	f
CommentBlock	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:CommentBlock(beg, end, commentMode, uncomment, checkRx, cdef, indentStr)$/;"	f
CommentDef	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:CommentDef(beg, end, checkRx, commentMode, cstart, cend)$/;"	f
Commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(args) abort$/;"	f
CommitComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
CompilerSet	bundle/vim-cucumber/compiler/cucumber.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	bundle/vim-haml/compiler/haml.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	bundle/vim-haml/compiler/sass.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	bundle/vim-ruby/compiler/eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	bundle/vim-ruby/compiler/rake.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	bundle/vim-ruby/compiler/rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	bundle/vim-ruby/compiler/ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	bundle/vim-ruby/compiler/rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
Complete	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:Complete(A,L,P)$/;"	f
CompleteCheckerName	bundle/syntastic/plugin/syntastic.vim	/^function! s:CompleteCheckerName(argLead, cmdLine, cursorPos)$/;"	f
Complete_breakadd	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:Complete_breakadd(A, L, P)$/;"	f
Complete_breakdel	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:Complete_breakdel(A, L, P)$/;"	f
Complete_cd	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_cd(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_console	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_console(A,L,P)$/;"	f
Complete_destroy	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_destroy(A,L,P)$/;"	f
Complete_edit	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_edit(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_environments	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_environments(...)$/;"	f
Complete_find	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_find(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_generate	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_generate(A,L,P)$/;"	f
Complete_preview	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_preview(A,L,P)$/;"	f
Complete_related	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_related(A,L,P)$/;"	f
Complete_ruby	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_ruby(A,L,P)$/;"	f
Complete_script	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_script(ArgLead,CmdLine,P)$/;"	f
Complete_server	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_server(A,L,P)$/;"	f
CompletionReset	bundle/supertab/plugin/supertab.vim	/^function! s:CompletionReset(char) " {{{$/;"	f
ConfFlag	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^function s:ConfFlag()$/;"	f
ConstructFromComments	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:ConstructFromComments(commentMode)$/;"	f
ConstructInfo	bundle/project-1.4.1/plugin/project.vim	/^    function! s:ConstructInfo(home, c_d, scriptin, scriptout, flags, filter)$/;"	f
Context	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:Context(reverse)$/;"	f
ContextCompletion	bundle/supertab/plugin/supertab.vim	/^function! s:ContextCompletion() " {{{$/;"	f
ContextDiscover	bundle/supertab/plugin/supertab.vim	/^function! s:ContextDiscover() " {{{$/;"	f
ContextMotion	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:ContextMotion(reverse)$/;"	f
ContextText	bundle/supertab/plugin/supertab.vim	/^function! s:ContextText() " {{{$/;"	f
ConvertPostConditional	bundle/vim-ruby-refactoring/plugin/refactorings/general/postconditional.vim	/^function! ConvertPostConditional()$/;"	f
Copen	bundle/vim-dispatch/plugin/dispatch.vim	/^command! -bang Copen call dispatch#copen(<bang>0)$/;"	c
Count	bundle/matchit/plugin/matchit.vim	/^fun! s:Count(string, pattern, ...)$/;"	f
Count	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:Count(haystack, needle)$/;"	f
Create	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=+ Create            :call dbext#DB_execSql("create " . <q-args>)$/;"	c
CreateBufferUniqName	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>CreateBufferUniqName(bufNum)$/;"	f
CreateEntriesFromDir	bundle/project-1.4.1/plugin/project.vim	/^    function! s:CreateEntriesFromDir(recursive)$/;"	f
CreateNewFile	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:CreateNewFile(...)$/;"	f
CreateWindow	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>CreateWindow(bufName, vSplit, brSplit, forceEdge, isPluginWindow, doDebug)$/;"	f
Creator.BufNamePrefix	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreatePrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreatePrimary(name)$/;"	f
Creator.CreateSecondary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateSecondary(dir)$/;"	f
Creator.New	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.TogglePrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.TogglePrimary(dir)$/;"	f
Creator._bindMappings	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createTreeWin	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._nextBufferName	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._setCommonBufOptions	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator.createMirror	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createPrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createPrimary(name)$/;"	f
Creator.createSecondary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createSecondary(dir)$/;"	f
Creator.togglePrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.togglePrimary(dir)$/;"	f
CtrlP	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlP         cal ctrlp#init(0, { 'dir': <q-args> })$/;"	c
CtrlPAug	bundle/ctrlp.vim/autoload/ctrlp.vim	/^	aug CtrlPAug$/;"	a
CtrlPBookmarkDir	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBookmarkDir cal ctrlp#init(ctrlp#bookmarkdir#id())$/;"	c
CtrlPBookmarkDirAdd	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPBookmarkDirAdd$/;"	c
CtrlPBufTag	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPBufTag$/;"	c
CtrlPBufTagAll	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBufTagAll cal ctrlp#init(ctrlp#buffertag#cmd(1))$/;"	c
CtrlPBuffer	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBuffer   cal ctrlp#init(1)$/;"	c
CtrlPChange	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPChange$/;"	c
CtrlPChangeAll	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPChangeAll   cal ctrlp#init(ctrlp#changes#cmd(1))$/;"	c
CtrlPClearAllCaches	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearAllCaches cal ctrlp#clra()$/;"	c
CtrlPClearCache	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearCache     cal ctrlp#clr()$/;"	c
CtrlPCurFile	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurFile cal ctrlp#init(0, { 'mode': 'c' })$/;"	c
CtrlPCurWD	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurWD   cal ctrlp#init(0, { 'mode': '' })$/;"	c
CtrlPDir	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPDir$/;"	c
CtrlPLastMode	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? CtrlPLastMode cal ctrlp#init(-1, { 'args': <q-args> })$/;"	c
CtrlPLine	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPLine$/;"	c
CtrlPMRUFiles	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPMRUFiles cal ctrlp#init(2, { 'dir': <q-args> })$/;"	c
CtrlPMixed	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPMixed       cal ctrlp#init(ctrlp#mixed#id())$/;"	c
CtrlPQuickfix	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPQuickfix cal ctrlp#init(ctrlp#quickfix#id())$/;"	c
CtrlPRTS	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRTS       cal ctrlp#init(ctrlp#rtscript#id())$/;"	c
CtrlPRoot	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRoot    cal ctrlp#init(0, { 'mode': 'r' })$/;"	c
CtrlPTag	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPTag      cal ctrlp#init(ctrlp#tag#id())$/;"	c
CtrlPUndo	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPUndo      cal ctrlp#init(ctrlp#undo#id())$/;"	c
CucumberComplete	bundle/vim-cucumber/ftplugin/cucumber.vim	/^function! CucumberComplete(findstart,base) abort$/;"	f
CurrentFiletypes	bundle/syntastic/plugin/syntastic.vim	/^function! s:CurrentFiletypes()$/;"	f
Cursor.column	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.column() dict$/;"	f
Cursor.line	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.line() dict$/;"	f
Cursor.move	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.move(line, column) dict$/;"	f
Cursor.new	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.new(position)$/;"	f
Cursor.remove_visual_selection	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.remove_visual_selection() dict$/;"	f
Cursor.update_highlight	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_highlight() dict$/;"	f
Cursor.update_line_length	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_line_length() dict$/;"	f
Cursor.update_position	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_position(pos) dict$/;"	f
Cursor.update_visual_selection	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_visual_selection(region) dict$/;"	f
CursorManager.add	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.add(pos, ...) dict$/;"	f
CursorManager.debug	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.debug() dict$/;"	f
CursorManager.delete_current	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.delete_current() dict$/;"	f
CursorManager.get	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.get(i) dict$/;"	f
CursorManager.get_current	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.get_current() dict$/;"	f
CursorManager.initialize	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.initialize() dict$/;"	f
CursorManager.is_empty	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.is_empty() dict$/;"	f
CursorManager.loop_done	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.loop_done() dict$/;"	f
CursorManager.new	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.new()$/;"	f
CursorManager.next	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.next() dict$/;"	f
CursorManager.reapply_visual_selection	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.reapply_visual_selection() dict$/;"	f
CursorManager.remove_highlight	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.remove_highlight(hi_id) dict$/;"	f
CursorManager.reset	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.reset(restore_view, restore_setting) dict$/;"	f
CursorManager.restore_user_settings	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.restore_user_settings() dict$/;"	f
CursorManager.size	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.size() dict$/;"	f
CursorManager.start_loop	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.start_loop() dict$/;"	f
CursorManager.update_current	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.update_current() dict$/;"	f
CustomComplete	bundle/vim-rails/autoload/rails.vim	/^function! s:CustomComplete(A,L,P,cmd)$/;"	f
CycleBuffer	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>CycleBuffer(forward,...)$/;"	f
CygwinPath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:CygwinPath(path)$/;"	f
DBCheckModeline	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBCheckModeline$/;"	c
DBCommit	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=0 DBCommit          :call dbext#DB_commit()$/;"	c
DBCompleteProcedures	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 -bang DBCompleteProcedures$/;"	c
DBCompleteTables	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 -bang DBCompleteTables$/;"	c
DBCompleteViews	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 -bang DBCompleteViews$/;"	c
DBConnect	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=0 DBConnect         :call dbext#DB_connect()$/;"	c
DBDescribeProcedure	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=* -range DBDescribeProcedure$/;"	c
DBDescribeProcedureAskName	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBDescribeProcedureAskName$/;"	c
DBDescribeTable	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=* -range DBDescribeTable$/;"	c
DBDescribeTableAskName	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBDescribeTableAskName$/;"	c
DBDisconnect	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=* DBDisconnect      :call dbext#DB_disconnect(<q-args>)$/;"	c
DBDisconnectAll	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=* DBDisconnectAll   :call dbext#DB_disconnectAll()$/;"	c
DBExecRangeSQL	bundle/dbext_2000/plugin/dbext.vim	/^command! -range -nargs=0 DBExecRangeSQL <line1>,<line2>call dbext#DB_execRangeSql()$/;"	c
DBExecSQL	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBExecSQL$/;"	c
DBExecSQL	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=+ DBExecSQL         :call dbext#DB_execSql(<q-args>)$/;"	c
DBExecSQLTopX	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=+ DBExecSQLTopX     :call dbext#DB_execSqlTopX(<q-args>)$/;"	c
DBExecSQLUnderCursor	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBExecSQLUnderCursor$/;"	c
DBExecSQLUnderCursorTopX	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBExecSQLUnderCursorTopX$/;"	c
DBExecVisualSQL	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 -range DBExecVisualSQL :call dbext#DB_execSql(DB_getVisualBlock())$/;"	c
DBExecVisualSQLTopX	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 -range DBExecVisualSQLTopX :call dbext#DB_execSqlTopX(DB_getVisualBlock())$/;"	c
DBGetOption	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=* -complete=customlist,dbext#DB_completeSettings DBGetOption :echo DB_listOption(<q-args>)$/;"	c
DBGetOption	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=? DBGetOption       :echo DB_listOption(<q-args>)$/;"	c
DBHistory	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBHistory$/;"	c
DBListColumn	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=* DBListColumn$/;"	c
DBListConnections	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=0 DBListConnections :call dbext#DB_getListConnections()$/;"	c
DBListProcedure	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=? DBListProcedure$/;"	c
DBListTable	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=? DBListTable$/;"	c
DBListVar	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=0 DBListVar         :call dbext#DB_sqlVarList()$/;"	c
DBListView	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=? DBListView$/;"	c
DBOrientationToggle	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBOrientationToggle$/;"	c
DBPromptForBufferParameters	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBPromptForBufferParameters$/;"	c
DBResultsClose	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBResultsClose$/;"	c
DBResultsOpen	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBResultsOpen$/;"	c
DBResultsRefresh	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBResultsRefresh$/;"	c
DBResultsToggleResize	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBResultsToggleResize$/;"	c
DBRollback	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=0 DBRollback        :call dbext#DB_rollback()$/;"	c
DBSelectFromTable	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=* -range DBSelectFromTable$/;"	c
DBSelectFromTableAskName	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBSelectFromTableAskName$/;"	c
DBSelectFromTableTopX	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=* -range DBSelectFromTableTopX$/;"	c
DBSelectFromTableWithWhere	bundle/dbext_2000/plugin/dbext.vim	/^    command! -nargs=0 DBSelectFromTableWithWhere$/;"	c
DBSetOption	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=* -complete=customlist,dbext#DB_completeSettings DBSetOption :call dbext#DB_setMultipleOptions(<q-args>)$/;"	c
DBSetOption	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=1 DBSetOption       :call dbext#DB_setMultipleOptions(<q-args>)$/;"	c
DBSetVar	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=* -complete=customlist,dbext#DB_completeVariable DBSetVar :call dbext#DB_sqlVarAssignment(<bang>0, 'set '.<q-args>)$/;"	c
DBSetVar	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=1 -bang DBSetVar    :call dbext#DB_sqlVarAssignment(<bang>0, 'set '.<q-args>)$/;"	c
DBVarRangeAssign	bundle/dbext_2000/plugin/dbext.vim	/^command! -range -nargs=0 -bang DBVarRangeAssign <line1>,<line2>call dbext#DB_sqlVarRangeAssignment(<bang>0)$/;"	c
DB_ASA_describeProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_describeProcedure(proc_name)$/;"	f
DB_ASA_describeTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_describeTable(table_name)$/;"	f
DB_ASA_execSql	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_execSql(str)$/;"	f
DB_ASA_getDictionaryProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_getDictionaryProcedure() $/;"	f
DB_ASA_getDictionaryTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_getDictionaryTable() $/;"	f
DB_ASA_getDictionaryView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_getDictionaryView() $/;"	f
DB_ASA_getListColumn	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_getListColumn(table_name) $/;"	f
DB_ASA_getListProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_getListProcedure(proc_prefix)$/;"	f
DB_ASA_getListTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_getListTable(table_prefix)$/;"	f
DB_ASA_getListView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_getListView(view_prefix)$/;"	f
DB_ASA_stripHeaderFooter	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASA_stripHeaderFooter(result)$/;"	f
DB_ASE_describeProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_describeProcedure(procedure_name)$/;"	f
DB_ASE_describeTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_describeTable(table_name)$/;"	f
DB_ASE_execSql	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_execSql(str)$/;"	f
DB_ASE_getDictionaryProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_getDictionaryProcedure() "{{{$/;"	f
DB_ASE_getDictionaryTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_getDictionaryTable() "{{{$/;"	f
DB_ASE_getDictionaryView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_getDictionaryView() "{{{$/;"	f
DB_ASE_getListColumn	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_getListColumn(table_name) "{{{$/;"	f
DB_ASE_getListProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_getListProcedure(proc_prefix)$/;"	f
DB_ASE_getListTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_getListTable(table_prefix)$/;"	f
DB_ASE_getListView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_getListView(view_prefix)$/;"	f
DB_ASE_stripHeaderFooter	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ASE_stripHeaderFooter(result) "{{{$/;"	f
DB_DB2_describeProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_describeProcedure(procedure_name)$/;"	f
DB_DB2_describeTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_describeTable(table_name)$/;"	f
DB_DB2_execSql	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_execSql(str)$/;"	f
DB_DB2_getDictionaryProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_getDictionaryProcedure()$/;"	f
DB_DB2_getDictionaryTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_getDictionaryTable()$/;"	f
DB_DB2_getDictionaryView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_getDictionaryView() $/;"	f
DB_DB2_getListColumn	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_getListColumn(table_name) $/;"	f
DB_DB2_getListProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_getListProcedure(proc_prefix)$/;"	f
DB_DB2_getListTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_getListTable(table_prefix)$/;"	f
DB_DB2_getListView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_getListView(view_prefix)$/;"	f
DB_DB2_stripHeaderFooter	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DB2_stripHeaderFooter(result) $/;"	f
DB_DBI_Autoload	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_Autoload()$/;"	f
DB_DBI_describeProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_describeProcedure(procedure_name)$/;"	f
DB_DBI_describeTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_describeTable(table_name)$/;"	f
DB_DBI_execSql	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_execSql(str)$/;"	f
DB_DBI_execStr	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_execStr(str)$/;"	f
DB_DBI_getDictionaryProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_getDictionaryProcedure() "{{{$/;"	f
DB_DBI_getDictionaryTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_getDictionaryTable() "{{{$/;"	f
DB_DBI_getDictionaryView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_getDictionaryView() "{{{$/;"	f
DB_DBI_getListColumn	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_getListColumn(table_name)$/;"	f
DB_DBI_getListProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_getListProcedure(proc_prefix)$/;"	f
DB_DBI_getListTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_getListTable(table_prefix)$/;"	f
DB_DBI_getListView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_getListView(view_prefix)$/;"	f
DB_DBI_setOption	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_setOption(option_name, value) "{{{$/;"	f
DB_DBI_stripHeaderFooter	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DBI_stripHeaderFooter(result)$/;"	f
DB_DictionaryCreate	bundle/dbext_2000/plugin/dbext.vim	/^function! DB_DictionaryCreate( drop_dict, which ) $/;"	f
DB_DictionaryDelete	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_DictionaryDelete( which ) "{{{$/;"	f
DB_FIREBIRD_describeProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_describeProcedure(procedure_name)$/;"	f
DB_FIREBIRD_describeTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_describeTable(table_name)$/;"	f
DB_FIREBIRD_execSql	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_execSql(str)$/;"	f
DB_FIREBIRD_getDictionaryProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_getDictionaryProcedure() "{{{$/;"	f
DB_FIREBIRD_getDictionaryTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_getDictionaryTable() "{{{$/;"	f
DB_FIREBIRD_getDictionaryView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_getDictionaryView() "{{{$/;"	f
DB_FIREBIRD_getListColumn	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_getListColumn(table_name) "{{{$/;"	f
DB_FIREBIRD_getListProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_getListProcedure(proc_prefix)$/;"	f
DB_FIREBIRD_getListTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_getListTable(table_prefix)$/;"	f
DB_FIREBIRD_getListView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_getListView(view_prefix)$/;"	f
DB_FIREBIRD_stripHeaderFooter	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_FIREBIRD_stripHeaderFooter(result) "{{{$/;"	f
DB_HANA_describeProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_describeProcedure(proc_name)$/;"	f
DB_HANA_describeTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_describeTable(table_name)$/;"	f
DB_HANA_execSql	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_execSql(str)$/;"	f
DB_HANA_getDictionaryProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_getDictionaryProcedure() $/;"	f
DB_HANA_getDictionaryTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_getDictionaryTable() $/;"	f
DB_HANA_getDictionaryView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_getDictionaryView() $/;"	f
DB_HANA_getListColumn	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_getListColumn(table_name) $/;"	f
DB_HANA_getListProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_getListProcedure(proc_prefix)$/;"	f
DB_HANA_getListTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_getListTable(table_prefix)$/;"	f
DB_HANA_getListView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_getListView(view_prefix)$/;"	f
DB_HANA_stripHeaderFooter	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_HANA_stripHeaderFooter(result)$/;"	f
DB_INGRES_describeProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_describeProcedure(procedure_name)$/;"	f
DB_INGRES_describeTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_describeTable(table_name)$/;"	f
DB_INGRES_execSql	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_execSql(str)$/;"	f
DB_INGRES_getDictionaryProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_getDictionaryProcedure() $/;"	f
DB_INGRES_getDictionaryTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_getDictionaryTable() $/;"	f
DB_INGRES_getDictionaryView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_getDictionaryView() $/;"	f
DB_INGRES_getListColumn	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_getListColumn(table_name) $/;"	f
DB_INGRES_getListProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_getListProcedure(proc_prefix)$/;"	f
DB_INGRES_getListTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_getListTable(table_prefix)$/;"	f
DB_INGRES_getListView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_getListView(view_prefix)$/;"	f
DB_INGRES_stripHeaderFooter	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INGRES_stripHeaderFooter(result)$/;"	f
DB_INTERBASE_describeProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_describeProcedure(procedure_name)$/;"	f
DB_INTERBASE_describeTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_describeTable(table_name)$/;"	f
DB_INTERBASE_execSql	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_execSql(str)$/;"	f
DB_INTERBASE_getDictionaryProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_getDictionaryProcedure() $/;"	f
DB_INTERBASE_getDictionaryTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_getDictionaryTable() $/;"	f
DB_INTERBASE_getDictionaryView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_getDictionaryView() $/;"	f
DB_INTERBASE_getListColumn	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_getListColumn(table_name) $/;"	f
DB_INTERBASE_getListProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_getListProcedure(proc_prefix)$/;"	f
DB_INTERBASE_getListTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_getListTable(table_prefix)$/;"	f
DB_INTERBASE_getListView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_getListView(view_prefix)$/;"	f
DB_INTERBASE_stripHeaderFooter	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_INTERBASE_stripHeaderFooter(result)$/;"	f
DB_MYSQL_describeProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_describeProcedure(procedure_name)$/;"	f
DB_MYSQL_describeTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_describeTable(table_name)$/;"	f
DB_MYSQL_execSql	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_execSql(str)$/;"	f
DB_MYSQL_getDictionaryProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_getDictionaryProcedure() "{{{$/;"	f
DB_MYSQL_getDictionaryTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_getDictionaryTable() "{{{$/;"	f
DB_MYSQL_getDictionaryView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_getDictionaryView() "{{{$/;"	f
DB_MYSQL_getListColumn	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_getListColumn(table_name) "{{{$/;"	f
DB_MYSQL_getListProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_getListProcedure(proc_prefix)$/;"	f
DB_MYSQL_getListTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_getListTable(table_prefix)$/;"	f
DB_MYSQL_getListView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_getListView(view_prefix)$/;"	f
DB_MYSQL_stripHeaderFooter	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_MYSQL_stripHeaderFooter(result) "{{{$/;"	f
DB_ODBC_describeProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_describeProcedure(procedure_name)$/;"	f
DB_ODBC_describeTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_describeTable(table_name)$/;"	f
DB_ODBC_execSql	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_execSql(str)$/;"	f
DB_ODBC_getDictionaryProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_getDictionaryProcedure() "{{{$/;"	f
DB_ODBC_getDictionaryTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_getDictionaryTable() "{{{$/;"	f
DB_ODBC_getDictionaryView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_getDictionaryView() "{{{$/;"	f
DB_ODBC_getListColumn	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_getListColumn(table_name)$/;"	f
DB_ODBC_getListProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_getListProcedure(proc_prefix)$/;"	f
DB_ODBC_getListTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_getListTable(table_prefix)$/;"	f
DB_ODBC_getListView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_getListView(view_prefix)$/;"	f
DB_ODBC_stripHeaderFooter	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ODBC_stripHeaderFooter(result)$/;"	f
DB_ORA_describeProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_describeProcedure(procedure_name)$/;"	f
DB_ORA_describeTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_describeTable(table_name)$/;"	f
DB_ORA_execSql	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_execSql(str)$/;"	f
DB_ORA_getDictionaryProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_getDictionaryProcedure() "{{{$/;"	f
DB_ORA_getDictionaryTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_getDictionaryTable() "{{{$/;"	f
DB_ORA_getDictionaryView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_getDictionaryView() "{{{$/;"	f
DB_ORA_getListColumn	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_getListColumn(table_name) "{{{$/;"	f
DB_ORA_getListProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_getListProcedure(proc_prefix)$/;"	f
DB_ORA_getListTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_getListTable(table_prefix)$/;"	f
DB_ORA_getListView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_getListView(view_prefix)$/;"	f
DB_ORA_stripHeaderFooter	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ORA_stripHeaderFooter(result) "{{{$/;"	f
DB_PGSQL_check_pgpass	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_check_pgpass()$/;"	f
DB_PGSQL_describeProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_describeProcedure(procedure_name)$/;"	f
DB_PGSQL_describeTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_describeTable(table_name)$/;"	f
DB_PGSQL_execSql	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_execSql(str)$/;"	f
DB_PGSQL_getDictionaryProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_getDictionaryProcedure() $/;"	f
DB_PGSQL_getDictionaryTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_getDictionaryTable() $/;"	f
DB_PGSQL_getDictionaryView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_getDictionaryView() $/;"	f
DB_PGSQL_getListColumn	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_getListColumn(table_name) $/;"	f
DB_PGSQL_getListProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_getListProcedure(proc_prefix)$/;"	f
DB_PGSQL_getListTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_getListTable(table_prefix)$/;"	f
DB_PGSQL_getListView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_getListView(view_prefix)$/;"	f
DB_PGSQL_stripHeaderFooter	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_PGSQL_stripHeaderFooter(result)$/;"	f
DB_RDB_describeProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_describeProcedure(procedure_name) "{{{$/;"	f
DB_RDB_describeTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_describeTable(table_name) "{{{$/;"	f
DB_RDB_execSql	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_execSql(str) "{{{$/;"	f
DB_RDB_getDictionaryProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_getDictionaryProcedure() "{{{$/;"	f
DB_RDB_getDictionaryTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_getDictionaryTable() "{{{$/;"	f
DB_RDB_getDictionaryView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_getDictionaryView() "{{{$/;"	f
DB_RDB_getListColumn	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_getListColumn(table_name) "{{{$/;"	f
DB_RDB_getListProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_getListProcedure(proc_prefix) "{{{$/;"	f
DB_RDB_getListTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_getListTable(table_prefix) "{{{$/;"	f
DB_RDB_getListView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_getListView(view_prefix) "{{{$/;"	f
DB_RDB_stripHeaderFooter	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_RDB_stripHeaderFooter(result) "{{{$/;"	f
DB_SQLITE_describeProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_describeProcedure(procedure_name)$/;"	f
DB_SQLITE_describeTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_describeTable(table_name)$/;"	f
DB_SQLITE_execSql	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_execSql(str)$/;"	f
DB_SQLITE_getDictionaryProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_getDictionaryProcedure() $/;"	f
DB_SQLITE_getDictionaryTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_getDictionaryTable()$/;"	f
DB_SQLITE_getDictionaryView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_getDictionaryView()$/;"	f
DB_SQLITE_getListColumn	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_getListColumn(table_name)$/;"	f
DB_SQLITE_getListProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_getListProcedure(proc_prefix)$/;"	f
DB_SQLITE_getListTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_getListTable(table_prefix)$/;"	f
DB_SQLITE_getListView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_getListView(view_prefix)$/;"	f
DB_SQLITE_stripHeaderFooter	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLITE_stripHeaderFooter(result)$/;"	f
DB_SQLSRV_describeProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_describeProcedure(procedure_name)$/;"	f
DB_SQLSRV_describeTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_describeTable(table_name)$/;"	f
DB_SQLSRV_execSql	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_execSql(str)$/;"	f
DB_SQLSRV_getDictionaryProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_getDictionaryProcedure() "{{{$/;"	f
DB_SQLSRV_getDictionaryTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_getDictionaryTable() "{{{$/;"	f
DB_SQLSRV_getDictionaryView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_getDictionaryView() "{{{$/;"	f
DB_SQLSRV_getListColumn	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_getListColumn(table_name)$/;"	f
DB_SQLSRV_getListProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_getListProcedure(proc_prefix)$/;"	f
DB_SQLSRV_getListTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_getListTable(table_prefix)$/;"	f
DB_SQLSRV_getListView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_getListView(view_prefix)$/;"	f
DB_SQLSRV_stripHeaderFooter	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_SQLSRV_stripHeaderFooter(result)$/;"	f
DB_ULTRALITE_describeProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_describeProcedure(proc_name)$/;"	f
DB_ULTRALITE_describeTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_describeTable(table_name)$/;"	f
DB_ULTRALITE_execSql	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_execSql(str)$/;"	f
DB_ULTRALITE_getDictionaryProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_getDictionaryProcedure() $/;"	f
DB_ULTRALITE_getDictionaryTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_getDictionaryTable() $/;"	f
DB_ULTRALITE_getDictionaryView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_getDictionaryView() $/;"	f
DB_ULTRALITE_getListColumn	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_getListColumn(table_name) $/;"	f
DB_ULTRALITE_getListProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_getListProcedure(proc_prefix)$/;"	f
DB_ULTRALITE_getListTable	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_getListTable(table_prefix)$/;"	f
DB_ULTRALITE_getListView	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_getListView(view_prefix)$/;"	f
DB_ULTRALITE_stripHeaderFooter	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_ULTRALITE_stripHeaderFooter(result)$/;"	f
DB_addBufDictList	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_addBufDictList( buf_nbr ) "{{{$/;"	f
DB_addToResultBuffer	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_addToResultBuffer(output, do_clear)$/;"	f
DB_buildLists	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_buildLists()$/;"	f
DB_delBufDictList	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_delBufDictList( buf_nbr ) "{{{$/;"	f
DB_errorMsg	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_errorMsg(msg)$/;"	f
DB_escapeStr	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_escapeStr(value)$/;"	f
DB_execCmd	bundle/dbext_2000/plugin/dbext.vim	/^function! DB_execCmd(name, ...)$/;"	f
DB_fullPath2Bin	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_fullPath2Bin(executable_name) $/;"	f
DB_get	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_get(name, ...)$/;"	f
DB_getCommentChars	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_getCommentChars()$/;"	f
DB_getDefault	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_getDefault(name)$/;"	f
DB_getDictionaryName	bundle/dbext_2000/plugin/dbext.vim	/^function! DB_getDictionaryName( which ) $/;"	f
DB_getInput	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_getInput(prompt, default_value, cancel_value)$/;"	f
DB_getListColumn	bundle/dbext_2000/plugin/dbext.vim	/^function! DB_getListColumn(...) $/;"	f
DB_getLoginScript	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_getLoginScript(filename)$/;"	f
DB_getObjectAndQuote	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_getObjectAndQuote(object) "{{{ $/;"	f
DB_getObjectName	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_getObjectName(object) "{{{ $/;"	f
DB_getObjectOwner	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_getObjectOwner(object) "{{{$/;"	f
DB_getParameters	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_getParameters(scope)$/;"	f
DB_getTblAlias	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_getTblAlias(table_name) $/;"	f
DB_getTitle	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_getTitle() $/;"	f
DB_getVisualBlock	bundle/dbext_2000/plugin/dbext.vim	/^function! DB_getVisualBlock() range$/;"	f
DB_historyAdd	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_historyAdd(sql)$/;"	f
DB_historyDel	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_historyDel(line)$/;"	f
DB_historyOpen	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_historyOpen()$/;"	f
DB_historySave	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_historySave(auto_hide)$/;"	f
DB_historyUse	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_historyUse(line)$/;"	f
DB_listOption	bundle/dbext_2000/plugin/dbext.vim	/^function! DB_listOption(...) $/;"	f
DB_option	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_option(param, value, separator)$/;"	f
DB_pad	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_pad(side, length, value)$/;"	f
DB_parseHostVariables	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_parseHostVariables(query)$/;"	f
DB_parseJProperties	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_parseJProperties(query)$/;"	f
DB_parseJava	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_parseJava(query)$/;"	f
DB_parsePHP	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_parsePHP(query)$/;"	f
DB_parsePerl	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_parsePerl(query)$/;"	f
DB_parseProfile	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_parseProfile(value)$/;"	f
DB_parseSQL	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_parseSQL(query)$/;"	f
DB_parseVB	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_parseVB(query)$/;"	f
DB_parseVim	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_parseVim(query)$/;"	f
DB_promptForParameters	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_promptForParameters(...)$/;"	f
DB_removeEmptyLines	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_removeEmptyLines(sql)$/;"	f
DB_resBufName	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_resBufName()$/;"	f
DB_resetBufferParameters	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_resetBufferParameters(use_defaults)$/;"	f
DB_resetGlobalParameters	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_resetGlobalParameters()$/;"	f
DB_restoreConnParameters	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_restoreConnParameters()$/;"	f
DB_runCmd	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_runCmd(cmd, sql, result)$/;"	f
DB_saveConnParameters	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_saveConnParameters()$/;"	f
DB_saveSize	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_saveSize(buf_name)$/;"	f
DB_searchReplace	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_searchReplace(str, exp_find_str, exp_get_value, count_matches)$/;"	f
DB_set	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_set(name, value)$/;"	f
DB_setGlobal	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_setGlobal(name, value)$/;"	f
DB_setWType	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_setWType(name, value)$/;"	f
DB_sqlVarInit	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_sqlVarInit()$/;"	f
DB_sqlVarRemoveTemp	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_sqlVarRemoveTemp()$/;"	f
DB_sqlVarSet	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_sqlVarSet(name, value, temporary)$/;"	f
DB_sqlVarSubstitute	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_sqlVarSubstitute(sql)$/;"	f
DB_stripComments	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_stripComments(mdl_options)$/;"	f
DB_stripLeadFollowQuotesSpace	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_stripLeadFollowQuotesSpace(str)$/;"	f
DB_stripLeadFollowSpaceLines	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_stripLeadFollowSpaceLines(str)$/;"	f
DB_switchToBuffer	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_switchToBuffer(buf_name, buf_file, get_buf_nr_name)$/;"	f
DB_validateBufferParameters	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_validateBufferParameters()$/;"	f
DB_varToString	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_varToString(name)$/;"	f
DB_warningMsg	bundle/dbext_2000/autoload/dbext.vim	/^function! s:DB_warningMsg(msg)$/;"	f
DEBUG	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>DEBUG(msg, level)$/;"	f
DECLTYPE	bundle/the_silver_searcher/src/uthash.h	/^#define DECLTYPE(/;"	d
DECLTYPE_ASSIGN	bundle/the_silver_searcher/src/uthash.h	/^#define DECLTYPE_ASSIGN(/;"	d
DECOMPRESS_H	bundle/the_silver_searcher/src/decompress.h	/^#define DECOMPRESS_H$/;"	d
DEFAULT_CONTEXT_LEN	bundle/the_silver_searcher/src/options.h	/^#define DEFAULT_CONTEXT_LEN /;"	d
DEPEND_DIR	bundle/html5.vim/Makefile	/^DEPEND_DIR=\/tmp\/vim-deps$/;"	m
DIRS	bundle/html5.vim/Makefile	/^DIRS=`ls -1F | grep \/ | sed -e 's\/\\\/\/\/'`$/;"	m
DefRuby	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:DefRuby()$/;"	f
DefaultValue	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:DefaultValue(option)$/;"	f
DefineSnips	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:DefineSnips(dir, aliasft, realft)$/;"	f
Delete	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=+ -complete=customlist,dbext#DB_completeTables Delete            :call dbext#DB_execSql("delete " . <q-args>)$/;"	c
DeleteBuffer	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>DeleteBuffer(action,bang,...)$/;"	f
DetachBuffer	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>DetachBuffer(bufNum)$/;"	f
Detect	bundle/vim-bundler/plugin/bundler.vim	/^function! s:Detect(path)$/;"	f
Detect	bundle/vim-rails/plugin/rails.vim	/^function! s:Detect(filename)$/;"	f
Detect	bundle/vim-rake/plugin/rake.vim	/^function! s:Detect(path)$/;"	f
DetectCoffee	bundle/vim-coffee-script/ftdetect/coffee.vim	/^function! s:DetectCoffee()$/;"	f
Diff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(bang,...)$/;"	f
DirComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
DirComplete	bundle/vim-rake/plugin/rake.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
Disarm	bundle/vim-scriptease/plugin/scriptease.vim	/^command! -bang -bar -nargs=* -complete=customlist,s:Complete Disarm$/;"	c
Dispatch	bundle/vim-dispatch/plugin/dispatch.vim	/^command! -bang -nargs=* -complete=custom,dispatch#command_complete Dispatch$/;"	c
DispatchComplete	bundle/vim-dispatch/plugin/dispatch.vim	/^function! DispatchComplete(id)$/;"	f
DisplayBuffers	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>DisplayBuffers(curBufNum)$/;"	f
DisplayIncludeTree	autoload/omni/cpp/includes.vim	/^function! s:DisplayIncludeTree(szFilePath, indent, ...)$/;"	f
DisplayInfo	bundle/project-1.4.1/plugin/project.vim	/^    function! s:DisplayInfo()$/;"	f
DoEnsurePlacementSize_au	bundle/project-1.4.1/plugin/project.vim	/^    function! s:DoEnsurePlacementSize_au()$/;"	f
DoEntryFromDir	bundle/project-1.4.1/plugin/project.vim	/^    function! s:DoEntryFromDir(recursive, line, name, absolute_dir, dir, c_d, filter_directive, filter, foldlev, sort)$/;"	f
DoFoldOrOpenEntry	bundle/project-1.4.1/plugin/project.vim	/^    function! s:DoFoldOrOpenEntry(cmd0, cmd1)$/;"	f
DoProjectOnly	bundle/project-1.4.1/plugin/project.vim	/^        function! s:DoProjectOnly()$/;"	f
DoReplacements	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:DoReplacements(text, tokens, replacements) "{{{3$/;"	f
DoSetup	bundle/project-1.4.1/plugin/project.vim	/^    function! s:DoSetup()$/;"	f
DoSetupAndSplit	bundle/project-1.4.1/plugin/project.vim	/^    function! s:DoSetupAndSplit()$/;"	f
DoSetupAndSplit_au	bundle/project-1.4.1/plugin/project.vim	/^    function! s:DoSetupAndSplit_au()$/;"	f
DoToggleProject	bundle/project-1.4.1/plugin/project.vim	/^    function! s:DoToggleProject()$/;"	f
Drop	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=+ -complete=customlist,dbext#DB_completeTables Drop              :call dbext#DB_execSql("drop " . <q-args>)$/;"	c
ELMT_FROM_HH	bundle/the_silver_searcher/src/uthash.h	/^#define ELMT_FROM_HH(/;"	d
Edit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
Edit	bundle/vim-rails/autoload/rails.vim	/^function! s:Edit(count,cmd,...)$/;"	f
Edit	bundle/vim-rake/plugin/rake.vim	/^function! s:Edit(cmd,bang,file)$/;"	f
EditClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditClasspath()$/;"	f
EditComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditRunComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
EnableLongestEnhancement	bundle/supertab/plugin/supertab.vim	/^function! s:EnableLongestEnhancement() " {{{$/;"	f
EncodeCommentPart	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:EncodeCommentPart(string)$/;"	f
EndColRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:EndColRx(pos)$/;"	f
EndLineRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:EndLineRx(pos)$/;"	f
EndPosRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:EndPosRx(mode, line, col)$/;"	f
EnsureTrailingSeparator	autoload/multvals.vim	/^function! s:EnsureTrailingSeparator(array, sep, ...)$/;"	f
Env	bundle/vim-ruby/bin/vim-ruby-install.rb	/^class Env$/;"	c
ErrMsg	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
Errors	bundle/syntastic/plugin/syntastic.vim	/^command! Errors call s:ShowLocList()$/;"	c
Escape	autoload/multvals.vim	/^function! s:Escape(str)$/;"	f
ExecMatchFunc	autoload/multvals.vim	/^function! s:ExecMatchFunc(funcName, def, expr, pat, start)$/;"	f
ExecWinCmdNoEa	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:ExecWinCmdNoEa(winCmd)$/;"	f
ExecuteInTree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
Executor	bundle/vim-l9/autoload/l9/async.py	/^class Executor:$/;"	c
ExitingOneLineScope	bundle/vim-javascript/indent/javascript.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
ExpandMap	bundle/supertab/plugin/supertab.vim	/^function! s:ExpandMap(map) " {{{$/;"	f
ExtendCDef	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:ExtendCDef(beg, end, commentMode, cdef, args)$/;"	f
ExtendTagItemToPopupItem	autoload/omni/cpp/complete.vim	/^function! s:ExtendTagItemToPopupItem(tagItem, szTypeName)$/;"	f
ExtraBrackets	bundle/vim-ruby/indent/ruby.vim	/^function s:ExtraBrackets(lnum)$/;"	f
Extract	bundle/vim-rails/autoload/rails.vim	/^function! s:Extract(bang,...) range abort$/;"	f
ExtractCommentsPart	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:ExtractCommentsPart(key)$/;"	f
ExtractConstant	bundle/vim-ruby-refactoring/plugin/refactorings/general/extractconstant.vim	/^function! ExtractConstant()$/;"	f
ExtractIntoRspecLet	bundle/vim-ruby-refactoring/plugin/refactorings/general/rspec_extractlet.vim	/^function! ExtractIntoRspecLet()$/;"	f
ExtractLocalVariable	bundle/vim-ruby-refactoring/plugin/refactorings/general/extractvariable.vim	/^function! ExtractLocalVariable()$/;"	f
ExtractMethod	bundle/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! ExtractMethod() range$/;"	f
ExtractScopeFromTypeInfo	autoload/omni/cpp/utils.vim	/^function! s:ExtractScopeFromTypeInfo(szTypeInfo)$/;"	f
ExtractSnips	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ExtractSnips(dir, ft)$/;"	f
ExtractSnipsFile	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ExtractSnipsFile(file, ft)$/;"	f
ExtractTypeInfoFromDecl	autoload/omni/cpp/items.vim	/^function! s:ExtractTypeInfoFromDecl(tokens)$/;"	f
FALSE	bundle/the_silver_searcher/src/util.h	/^#define FALSE /;"	d
FGForBG	bundle/vim-css-color/after/syntax/css.vim	/^function! s:FGForBG(color)$/;"	f
FILES	bundle/html5.vim/Makefile	/^FILES=`ls -1 | grep '.vim$$'`$/;"	m
FileByOffset	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:FileByOffset(num)$/;"	f
FileRead	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead()$/;"	f
FileWriter	bundle/vim-ruby/bin/vim-ruby-install.rb	/^class FileWriter$/;"	c
Filename	bundle/snipmate.vim/autoload/snipMate.vim	/^fun! Filename(...)$/;"	f
Filetype	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:Filetype(...) "{{{3$/;"	f
FilterClassMembers	autoload/omni/cpp/complete.vim	/^function! s:FilterClassMembers(tagPopupList, szAccessFilter)$/;"	f
FilterClassScopeMembers	autoload/omni/cpp/complete.vim	/^function! s:FilterClassScopeMembers(tagPopupList, szAccessFilter)$/;"	f
FilterNamespaceScopeMembers	autoload/omni/cpp/complete.vim	/^function! s:FilterNamespaceScopeMembers(tagPopupList)$/;"	f
FilterOverloadedFunctions	autoload/omni/cpp/complete.vim	/^function! s:FilterOverloadedFunctions(tagPopupList)$/;"	f
FilterStaticClassMembers	autoload/omni/cpp/complete.vim	/^function! s:FilterStaticClassMembers(tagPopupList, szAccessFilter)$/;"	f
Find	bundle/vim-rails/autoload/rails.vim	/^function! s:Find(count,cmd,...)$/;"	f
FindBufferForName	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:FindBufferForName(fileName)$/;"	f
FindBundlerRoot	bundle/vim-bundler/plugin/bundler.vim	/^function! s:FindBundlerRoot(path) abort$/;"	f
FindCreateWindow	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>FindCreateWindow(bufName, vSplit, brSplit, forceEdge, isPluginWindow, doDebug)$/;"	f
FindFoldBottom	bundle/project-1.4.1/plugin/project.vim	/^    function! s:FindFoldBottom(line)$/;"	f
FindFoldTop	bundle/project-1.4.1/plugin/project.vim	/^    function! s:FindFoldTop(line)$/;"	f
FindStartPositionOfCompletion	autoload/omni/cpp/complete.vim	/^function! s:FindStartPositionOfCompletion()$/;"	f
FindWindow	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>FindWindow(bufName, doDebug)$/;"	f
Findcomplete	autoload/pathogen.vim	/^function! s:Findcomplete(A,L,P) " {{{1$/;"	f
FinishCommit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit()$/;"	f
FocusDispatch	bundle/vim-dispatch/plugin/dispatch.vim	/^command! -bang -nargs=* -complete=custom,dispatch#command_complete FocusDispatch$/;"	c
FocusExplorer	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>FocusExplorer()$/;"	f
Foo	bundle/vim-ruby-refactoring/test/testcases.rb	/^class Foo$/;"	c
ForceUpdate	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ForceUpdate()$/;"	f
ForwardToZshChecker	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:ForwardToZshChecker()$/;"	f
GF	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GIT_SOURCES	bundle/html5.vim/Makefile	/^GIT_SOURCES=$/;"	m
GUDebugEcho	bundle/genutils-2.5/autoload/genutils.vim	/^command! -complete=file -nargs=* GUDebugEcho :echo <q-args>$/;"	c
GenerateEntry	bundle/project-1.4.1/plugin/project.vim	/^    function! s:GenerateEntry(recursive, line, name, absolute_dir, dir, c_d, filter_directive, filter, foldlev, sort)$/;"	f
GetAccessFilter	autoload/omni/cpp/complete.vim	/^function! s:GetAccessFilter(szFilter, szAccessFilter)$/;"	f
GetActiveBuffer	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>GetActiveBuffer()$/;"	f
GetAllUsingNamespaceMapFromCurrentBuffer	autoload/omni/cpp/namespaces.vim	/^function! s:GetAllUsingNamespaceMapFromCurrentBuffer(...)$/;"	f
GetAllUsingNamespaceMapFromFile	autoload/omni/cpp/namespaces.vim	/^function! s:GetAllUsingNamespaceMapFromFile(szFilePath, ...)$/;"	f
GetBufferRubyClass	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
GetBufferRubyEntity	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
GetBufferRubyModule	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
GetBufferRubySingletonMethods	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
GetCd	bundle/project-1.4.1/plugin/project.vim	/^    function! s:GetCd(info, home)$/;"	f
GetCflags	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:GetCflags(ft, ck, opts)$/;"	f
GetCheckerVar	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:GetCheckerVar(scope, filetype, subchecker, name, default)$/;"	f
GetClassScopeAtCursor	autoload/omni/cpp/namespaces.vim	/^function! s:GetClassScopeAtCursor()$/;"	f
GetCoffeeHtmlIndent	bundle/vim-coffee-script/after/indent/html.vim	/^function! GetCoffeeHtmlIndent(curlinenum)$/;"	f
GetCoffeeIndent	bundle/vim-coffee-script/indent/coffee.vim	/^function! GetCoffeeIndent(curlnum)$/;"	f
GetColorschemeFile	bundle/guicolorscheme/plugin/guicolorscheme.vim	/^function! s:GetColorschemeFile(fname)$/;"	f
GetCommentDefinition	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GetCommentDefinition(beg, end, commentMode, ...)$/;"	f
GetCommentDefinitionForType	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GetCommentDefinitionForType(beg, end, commentMode, filetype) "{{{3$/;"	f
GetCommentReplace	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GetCommentReplace(cdef, cms0)$/;"	f
GetCucumberIndent	bundle/vim-cucumber/indent/cucumber.vim	/^function! GetCucumberIndent()$/;"	f
GetCustomCommentString	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GetCustomCommentString(ft, commentMode, ...)$/;"	f
GetDefaultPolicy	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:GetDefaultPolicy(curlnum)$/;"	f
GetErubyIndent	bundle/vim-ruby/indent/eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetFilter	bundle/project-1.4.1/plugin/project.vim	/^    function! s:GetFilter(info, parent_filter)$/;"	f
GetFlags	bundle/project-1.4.1/plugin/project.vim	/^    function! s:GetFlags(info)$/;"	f
GetHamlIndent	bundle/vim-haml/indent/haml.vim	/^function! GetHamlIndent()$/;"	f
GetHome	bundle/project-1.4.1/plugin/project.vim	/^    function! s:GetHome(info, parent_home)$/;"	f
GetIncludeDirs	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:GetIncludeDirs(filetype)$/;"	f
GetIncludeListFromCurrentBuffer	autoload/omni/cpp/includes.vim	/^function! s:GetIncludeListFromCurrentBuffer()$/;"	f
GetIncludeListFromFile	autoload/omni/cpp/includes.vim	/^function! s:GetIncludeListFromFile(szFilePath, bUpdate) $/;"	f
GetIndentString	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GetIndentString(line, start)$/;"	f
GetJavascriptIndent	bundle/vim-javascript/indent/javascript.vim	/^function GetJavascriptIndent()$/;"	f
GetMSL	bundle/vim-javascript/indent/javascript.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
GetMSL	bundle/vim-ruby/indent/ruby.vim	/^function s:GetMSL(lnum)$/;"	f
GetMakePrg	bundle/vim-coffee-script/compiler/coffee.vim	/^function! s:GetMakePrg()$/;"	f
GetMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function s:GetMakeprg()$/;"	f
GetMavenClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenClasspath()$/;"	f
GetMavenProperties	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenProperties()$/;"	f
GetNamespaceAliasListFromLine	autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceAliasListFromLine(szLine)$/;"	f
GetNamespaceAliasMap	autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceAliasMap()$/;"	f
GetNamespaceListFromLine	autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceListFromLine(szLine)$/;"	f
GetNextInOrder	autoload/multvals.vim	/^function! s:GetNextInOrder(val, val1, val2, dir)$/;"	f
GetNextWinnrInStack	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:GetNextWinnrInStack(dir)$/;"	f
GetOcamlBuildMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function s:GetOcamlBuildMakeprg()$/;"	f
GetOcamlcMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function s:GetOcamlcMakeprg()$/;"	f
GetOtherMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function s:GetOtherMakeprg()$/;"	f
GetPrevNormalLine	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:GetPrevNormalLine(startlnum)$/;"	f
GetRubyIndent	bundle/vim-ruby/indent/ruby.vim	/^function GetRubyIndent(...)$/;"	f
GetRubyVarType	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
GetSassIndent	bundle/vim-haml/indent/sass.vim	/^function! GetSassIndent()$/;"	f
GetScriptin	bundle/project-1.4.1/plugin/project.vim	/^    function! s:GetScriptin(info, home)$/;"	f
GetScriptout	bundle/project-1.4.1/plugin/project.vim	/^    function! s:GetScriptout(info, home)$/;"	f
GetSelectedBuffer	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>GetSelectedBuffer()$/;"	f
GetShell	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:GetShell()$/;"	f
GetSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:GetSnippet(word, scope)$/;"	f
GetSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! GetSnippets(dir, filetypes)$/;"	f
GetStartEnd	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GetStartEnd(beg, end, commentMode) "{{{3$/;"	f
GetStopPositionForLocalSearch	autoload/omni/cpp/namespaces.vim	/^function! s:GetStopPositionForLocalSearch()$/;"	f
GetSymbol	autoload/omni/cpp/items.vim	/^function! s:GetSymbol(tokens)$/;"	f
GetSyntaxName	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GetSyntaxName(lnum, col) "{{{3$/;"	f
GetTagOfSameScope	autoload/omni/cpp/utils.vim	/^function! s:GetTagOfSameScope(listTags, szScopeToMatch)$/;"	f
GetTrimmedLine	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:GetTrimmedLine(lnum)$/;"	f
GetTypeInfoOfReturnedType	autoload/omni/cpp/items.vim	/^function! s:GetTypeInfoOfReturnedType(contextStack, szFunctionName)$/;"	f
GetTypeInfoOfVariable	autoload/omni/cpp/items.vim	/^function! s:GetTypeInfoOfVariable(contextStack, szVariable, bSearchDecl)$/;"	f
GetUsingNamespaceListFromMap	autoload/omni/cpp/namespaces.vim	/^function! s:GetUsingNamespaceListFromMap(namespaceMap, ...)$/;"	f
GetValaModules	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! s:GetValaModules()$/;"	f
GetVarIndent	bundle/vim-javascript/indent/javascript.vim	/^function s:GetVarIndent(lnum)$/;"	f
GetWinDim	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:GetWinDim(dir, win)$/;"	f
Gist	bundle/Gist.vim/plugin/gist.vim	/^command! -nargs=? -range=% Gist :call gist#Gist(<count>, <line1>, <line2>, <f-args>)$/;"	c
GistDelete	bundle/Gist.vim/autoload/gist.vim	/^function! s:GistDelete(gistid)$/;"	f
GistDetectFiletype	bundle/Gist.vim/autoload/gist.vim	/^function! s:GistDetectFiletype(gistid)$/;"	f
GistGet	bundle/Gist.vim/autoload/gist.vim	/^function! s:GistGet(gistid, clipboard)$/;"	f
GistGetAuthHeader	bundle/Gist.vim/autoload/gist.vim	/^function! s:GistGetAuthHeader()$/;"	f
GistGetFileName	bundle/Gist.vim/autoload/gist.vim	/^function! s:GistGetFileName(gistid)$/;"	f
GistList	bundle/Gist.vim/autoload/gist.vim	/^function! s:GistList(gistls, page)$/;"	f
GistListAction	bundle/Gist.vim/autoload/gist.vim	/^function! s:GistListAction(shift)$/;"	f
GistPost	bundle/Gist.vim/autoload/gist.vim	/^function! s:GistPost(content, private, desc, anonymous)$/;"	f
GistPostBuffers	bundle/Gist.vim/autoload/gist.vim	/^function! s:GistPostBuffers(private, desc, anonymous)$/;"	f
GistUpdate	bundle/Gist.vim/autoload/gist.vim	/^function! s:GistUpdate(content, gistid, gistnm, desc)$/;"	f
GistWrite	bundle/Gist.vim/autoload/gist.vim	/^function! s:GistWrite(fname)$/;"	f
Git	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang,cmd) abort$/;"	f
GitComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A,L,P) abort$/;"	f
GlobPath	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:GlobPath(dirs, depth)$/;"	f
Grep	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
GrepAll	bundle/project-1.4.1/plugin/project.vim	/^    function! s:GrepAll(recurse, lineno, pattern)$/;"	f
GuessCommentMode	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GuessCommentMode(commentMode) "{{{3$/;"	f
GuessCurrentCommentString	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GuessCurrentCommentString(commentMode)$/;"	f
GuessFileType	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GuessFileType(beg, end, commentMode, filetype, ...)$/;"	f
GuiColorScheme	bundle/guicolorscheme/plugin/guicolorscheme.vim	/^command! -complete=customlist,s:Colorscheme_Complete -nargs=1 GuiColorScheme :call s:GuiColorScheme("<args>")$/;"	c
GuiColorScheme	bundle/guicolorscheme/plugin/guicolorscheme.vim	/^function! s:GuiColorScheme(fname)$/;"	f
GundoAug	bundle/Gundo/autoload/gundo.vim	/^augroup GundoAug$/;"	a
GundoClose	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoClose()"{{{$/;"	f
GundoDidNotLoad	bundle/Gundo/autoload/gundo.vim	/^    function! s:GundoDidNotLoad()$/;"	f
GundoGetTargetState	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoGetTargetState()"{{{$/;"	f
GundoGoToWindowForBufferName	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoGoToWindowForBufferName(name)"{{{$/;"	f
GundoHide	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoHide()"{{{$/;"	f
GundoHide	bundle/Gundo/plugin/gundo.vim	/^command! -nargs=0 GundoHide call gundo#GundoHide()$/;"	c
GundoInlineHelpLength	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoInlineHelpLength()"{{{$/;"	f
GundoIsVisible	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoIsVisible()"{{{$/;"	f
GundoMapGraph	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoMapGraph()"{{{$/;"	f
GundoMapPreview	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoMapPreview()"{{{$/;"	f
GundoMouseDoubleClick	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoMouseDoubleClick()"{{{$/;"	f
GundoMove	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoMove(direction) range"{{{$/;"	f
GundoOpen	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoOpen()"{{{$/;"	f
GundoOpenGraph	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoOpenGraph()"{{{$/;"	f
GundoOpenPreview	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoOpenPreview()"{{{$/;"	f
GundoPlayTo	bundle/Gundo/autoload/gundo.py	/^def GundoPlayTo():$/;"	f
GundoPlayTo	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoPlayTo()"{{{$/;"	f
GundoRenderChangePreview	bundle/Gundo/autoload/gundo.py	/^def GundoRenderChangePreview():$/;"	f
GundoRenderChangePreview	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoRenderChangePreview()"{{{$/;"	f
GundoRenderGraph	bundle/Gundo/autoload/gundo.py	/^def GundoRenderGraph():$/;"	f
GundoRenderGraph	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoRenderGraph()"{{{$/;"	f
GundoRenderGraph	bundle/Gundo/plugin/gundo.vim	/^command! -nargs=0 GundoRenderGraph call gundo#GundoRenderGraph()$/;"	c
GundoRenderPreview	bundle/Gundo/autoload/gundo.py	/^def GundoRenderPreview():$/;"	f
GundoRenderPreview	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoRenderPreview()"{{{$/;"	f
GundoResizeBuffers	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoResizeBuffers(backto)"{{{$/;"	f
GundoRevert	bundle/Gundo/autoload/gundo.py	/^def GundoRevert():$/;"	f
GundoRevert	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoRevert()"{{{$/;"	f
GundoSettingsGraph	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoSettingsGraph()"{{{$/;"	f
GundoSettingsPreview	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoSettingsPreview()"{{{$/;"	f
GundoShow	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoShow()"{{{$/;"	f
GundoShow	bundle/Gundo/plugin/gundo.vim	/^command! -nargs=0 GundoShow call gundo#GundoShow()$/;"	c
GundoSyntaxGraph	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoSyntaxGraph()"{{{$/;"	f
GundoToggle	bundle/Gundo/autoload/gundo.vim	/^            command! -nargs=0 GundoToggle call s:GundoDidNotLoad()$/;"	c
GundoToggle	bundle/Gundo/autoload/gundo.vim	/^    command! -nargs=0 GundoToggle call s:GundoDidNotLoad()$/;"	c
GundoToggle	bundle/Gundo/autoload/gundo.vim	/^function! s:GundoToggle()"{{{$/;"	f
GundoToggle	bundle/Gundo/plugin/gundo.vim	/^command! -nargs=0 GundoToggle call gundo#GundoToggle()$/;"	c
HASH_ADD	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_ADD(/;"	d
HASH_ADD_INT	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_ADD_INT(/;"	d
HASH_ADD_KEYPTR	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_ADD_KEYPTR(/;"	d
HASH_ADD_PTR	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_ADD_PTR(/;"	d
HASH_ADD_STR	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_ADD_STR(/;"	d
HASH_ADD_TO_BKT	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_ADD_TO_BKT(/;"	d
HASH_BER	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_BER(/;"	d
HASH_BKT_CAPACITY_THRESH	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_BKT_CAPACITY_THRESH /;"	d
HASH_BLOOM_ADD	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_BLOOM_ADD(/;"	d
HASH_BLOOM_BITLEN	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_BLOOM_BITLEN /;"	d
HASH_BLOOM_BITSET	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_BLOOM_BITSET(/;"	d
HASH_BLOOM_BITTEST	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_BLOOM_BITTEST(/;"	d
HASH_BLOOM_BYTELEN	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_BLOOM_BYTELEN /;"	d
HASH_BLOOM_FREE	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_BLOOM_FREE(/;"	d
HASH_BLOOM_MAKE	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_BLOOM_MAKE(/;"	d
HASH_BLOOM_SIGNATURE	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_BLOOM_SIGNATURE /;"	d
HASH_BLOOM_TEST	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_BLOOM_TEST(/;"	d
HASH_CLEAR	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_CLEAR(/;"	d
HASH_CNT	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_CNT(/;"	d
HASH_COUNT	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_COUNT(/;"	d
HASH_DEL	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_DEL(/;"	d
HASH_DELETE	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_DELETE(/;"	d
HASH_DEL_IN_BKT	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_DEL_IN_BKT(/;"	d
HASH_EMIT_KEY	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_EMIT_KEY(/;"	d
HASH_EXPAND_BUCKETS	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_EXPAND_BUCKETS(/;"	d
HASH_FCN	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_FCN /;"	d
HASH_FIND	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_FIND(/;"	d
HASH_FIND_INT	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_FIND_INT(/;"	d
HASH_FIND_IN_BKT	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_FIND_IN_BKT(/;"	d
HASH_FIND_PTR	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_FIND_PTR(/;"	d
HASH_FIND_STR	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_FIND_STR(/;"	d
HASH_FNV	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_FNV(/;"	d
HASH_FSCK	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_FSCK(/;"	d
HASH_INITIAL_NUM_BUCKETS	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_INITIAL_NUM_BUCKETS /;"	d
HASH_INITIAL_NUM_BUCKETS_LOG2	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_INITIAL_NUM_BUCKETS_LOG2 /;"	d
HASH_ITER	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_ITER(/;"	d
HASH_JEN	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_JEN(/;"	d
HASH_JEN_MIX	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_JEN_MIX(/;"	d
HASH_KEYCMP	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_KEYCMP(/;"	d
HASH_MAKE_TABLE	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_MAKE_TABLE(/;"	d
HASH_MUR	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_MUR(/;"	d
HASH_OAT	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_OAT(/;"	d
HASH_OOPS	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_OOPS(/;"	d
HASH_SAX	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_SAX(/;"	d
HASH_SELECT	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_SELECT(/;"	d
HASH_SFH	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_SFH(/;"	d
HASH_SIGNATURE	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_SIGNATURE /;"	d
HASH_SORT	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_SORT(/;"	d
HASH_SRT	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_SRT(/;"	d
HASH_TO_BKT	bundle/the_silver_searcher/src/uthash.h	/^#define HASH_TO_BKT(/;"	d
HAVE_LZMA_H	bundle/the_silver_searcher/src/win32/config.h	/^#define HAVE_LZMA_H$/;"	d
HL	bundle/guicolorscheme/plugin/guicolorscheme.vim	/^function! s:HL(group, fg, bg, attr) "{{{$/;"	f
HasATagFileOrTagEnvChanged	autoload/omni/cpp/complete.vim	/^function! s:HasATagFileOrTagEnvChanged()$/;"	f
HasEligibleBuffers	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>HasEligibleBuffers()$/;"	f
HasTagEnvChanged	autoload/omni/cpp/complete.vim	/^function! s:HasTagEnvChanged()$/;"	f
HasTrailingSeparator	autoload/multvals.vim	/^function! s:HasTrailingSeparator(array, sep)$/;"	f
Helptags	autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
HexForHSLValue	bundle/vim-css-color/after/syntax/css.vim	/^function! s:HexForHSLValue(h,s,l)$/;"	f
HexForRGBValue	bundle/vim-css-color/after/syntax/css.vim	/^function! s:HexForRGBValue(r,g,b)$/;"	f
HiDefaults	bundle/vim-rails/autoload/rails.vim	/^function! s:HiDefaults()$/;"	f
HiLink	bundle/vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	bundle/vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
Hmac	bundle/webapi-vim/autoload/webapi/hmac.vim	/^function! s:Hmac(key, text, hash, blocksize)$/;"	f
HtmlIndentClose	bundle/html5.vim/indent/html.vim	/^fun! <SID>HtmlIndentClose(lnum, pattern)$/;"	f
HtmlIndentCloseAlt	bundle/html5.vim/indent/html.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentGet	bundle/html5.vim/indent/html.vim	/^fun! HtmlIndentGet(lnum)$/;"	f
HtmlIndentOpen	bundle/html5.vim/indent/html.vim	/^fun! <SID>HtmlIndentOpen(lnum, pattern)$/;"	f
HtmlIndentOpenAlt	bundle/html5.vim/indent/html.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentSum	bundle/html5.vim/indent/html.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
IGNORE_H	bundle/the_silver_searcher/src/ignore.h	/^#define IGNORE_H$/;"	d
IfFocusOnStartup	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IfFocusOnStartup()$/;"	f
IgnoreError	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:IgnoreError(text)$/;"	f
IgnoreError	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:IgnoreError(text)$/;"	f
IgnoreFile	bundle/syntastic/plugin/syntastic.vim	/^function! s:IgnoreFile(filename)$/;"	f
InMultiVarStatement	bundle/vim-javascript/indent/javascript.vim	/^function s:InMultiVarStatement(lnum)$/;"	f
InOneLineScope	bundle/vim-javascript/indent/javascript.vim	/^function s:InOneLineScope(lnum)$/;"	f
IndentWithContinuation	bundle/vim-javascript/indent/javascript.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
Init	bundle/supertab/plugin/supertab.vim	/^function! s:Init() " {{{$/;"	f
Init	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:Init()$/;"	f
InitBuffer	bundle/supertab/plugin/supertab.vim	/^function! s:InitBuffer() " {{{$/;"	f
InitComplete	autoload/omni/cpp/complete.vim	/^function! s:InitComplete()$/;"	f
InlineReplacement	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:InlineReplacement(text, rx, tokens, replacements) "{{{3$/;"	f
InlineTemp	bundle/vim-ruby-refactoring/plugin/refactorings/general/inlinetemp.vim	/^function! InlineTemp()$/;"	f
Insert	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=+ -complete=customlist,dbext#DB_completeTables Insert            :call dbext#DB_execSql("insert " . <q-args>)$/;"	c
InsertRefs	bundle/matchit/plugin/matchit.vim	/^fun! s:InsertRefs(groupBR, prefix, group, suffix, matchline)$/;"	f
IntroduceVariable	bundle/vim-ruby-refactoring/plugin/refactorings/general/introducevariable.vim	/^function! IntroduceVariable()$/;"	f
Invert	bundle/vim-rails/autoload/rails.vim	/^function! s:Invert(bang)$/;"	f
InvokeFuncs	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:InvokeFuncs(funcList)$/;"	f
IsAbsolutePath	bundle/project-1.4.1/plugin/project.vim	/^    function! s:IsAbsolutePath(path)$/;"	f
IsBufferIgnored	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>IsBufferIgnored(buf)$/;"	f
IsBundlerProject	bundle/vim-bundler/plugin/bundler.vim	/^function! s:IsBundlerProject()$/;"	f
IsCached	autoload/omni/cpp/complete.vim	/^function! s:IsCached(cache, szKey1, szKey2)$/;"	f
IsComment	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsComment(lnum, col)$/;"	f
IsCommentOrString	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsCommentOrString(lnum, col)$/;"	f
IsCurrentWindowNERDTree	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IsCurrentWindowNERDTree()$/;"	f
IsInClassDef	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
IsInMultilineComment	bundle/vim-javascript/indent/javascript.vim	/^function s:IsInMultilineComment(lnum, col)$/;"	f
IsInString	bundle/vim-javascript/indent/javascript.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInString	bundle/vim-ruby/indent/ruby.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInStringDelimiter	bundle/vim-ruby/indent/ruby.vim	/^function s:IsInStringDelimiter(lnum, col)$/;"	f
IsInStringOrComment	bundle/vim-javascript/indent/javascript.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrComment	bundle/vim-ruby/indent/ruby.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrDocumentation	bundle/vim-ruby/indent/ruby.vim	/^function s:IsInStringOrDocumentation(lnum, col)$/;"	f
IsLineComment	bundle/vim-javascript/indent/javascript.vim	/^function s:IsLineComment(lnum, col)$/;"	f
IsNERDTreeOpenInCurrentTab	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IsNERDTreeOpenInCurrentTab()$/;"	f
IsNERDTreePresentInCurrentTab	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IsNERDTreePresentInCurrentTab()$/;"	f
IsPosInClassDef	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
IsPreviewOpen	bundle/supertab/plugin/supertab.vim	/^function! s:IsPreviewOpen() " {{{$/;"	f
IsRedrawRequiredAfterMake	bundle/syntastic/plugin/syntastic.vim	/^function! s:IsRedrawRequiredAfterMake()$/;"	f
IsRegularExpression	autoload/multvals.vim	/^function! s:IsRegularExpression(str)$/;"	f
IsShellValid	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:IsShellValid()$/;"	f
IsString	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsString(lnum, col)$/;"	f
IsTypeInfoResolved	autoload/omni/cpp/utils.vim	/^function! s:IsTypeInfoResolved(szTypeInfo)$/;"	f
IsUnnamedType	autoload/omni/cpp/items.vim	/^function! s:IsUnnamedType(tagItem)$/;"	f
JshintNew	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function s:JshintNew()$/;"	f
JumpInit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit() abort$/;"	f
KeyLoop	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:KeyLoop()$/;"	f
KeyMap.Add	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
L9Assert	bundle/vim-l9/plugin/l9.vim	/^  command -nargs=* L9Assert :$/;"	c
L9Assert	bundle/vim-l9/plugin/l9.vim	/^  command -nargs=* L9Assert call eval((<args>) ? 0 : s:handleFailedAssersion(<q-args>))$/;"	c
L9GrepBuffer	bundle/vim-l9/plugin/l9.vim	/^command -nargs=? L9GrepBuffer    call l9#grepBuffers(<q-args>, [bufnr('%')])$/;"	c
L9GrepBufferAll	bundle/vim-l9/plugin/l9.vim	/^command -nargs=? L9GrepBufferAll call l9#grepBuffers(<q-args>, range(1, bufnr('$')))$/;"	c
L9Timer	bundle/vim-l9/plugin/l9.vim	/^  command -nargs=1 L9Timer :$/;"	c
L9Timer	bundle/vim-l9/plugin/l9.vim	/^  command -nargs=1 L9Timer call s:timerBegin(<q-args>)$/;"	c
L9TimerDump	bundle/vim-l9/plugin/l9.vim	/^  command -nargs=0 L9TimerDump :$/;"	c
L9TimerDump	bundle/vim-l9/plugin/l9.vim	/^  command -nargs=0 L9TimerDump call s:timerDump()$/;"	c
L9TimerStop	bundle/vim-l9/plugin/l9.vim	/^  command -nargs=0 L9TimerStop :$/;"	c
L9TimerStop	bundle/vim-l9/plugin/l9.vim	/^  command -nargs=0 L9TimerStop call s:timerStop()$/;"	c
LOG_H	bundle/the_silver_searcher/src/log.h	/^#define LOG_H$/;"	d
LOG_LEVEL_DEBUG	bundle/the_silver_searcher/src/log.h	/^    LOG_LEVEL_DEBUG = 10,$/;"	e	enum:log_level
LOG_LEVEL_ERR	bundle/the_silver_searcher/src/log.h	/^    LOG_LEVEL_ERR   = 40,$/;"	e	enum:log_level
LOG_LEVEL_MSG	bundle/the_silver_searcher/src/log.h	/^    LOG_LEVEL_MSG   = 20,$/;"	e	enum:log_level
LOG_LEVEL_NONE	bundle/the_silver_searcher/src/log.h	/^    LOG_LEVEL_NONE  = 100$/;"	e	enum:log_level
LOG_LEVEL_WARN	bundle/the_silver_searcher/src/log.h	/^    LOG_LEVEL_WARN  = 30,$/;"	e	enum:log_level
LZMA_HEADER_SOMETIMES	bundle/the_silver_searcher/src/decompress.c	/^const uint8_t LZMA_HEADER_SOMETIMES[3] = { 0x5D, 0x00, 0x00 };$/;"	v
LegacyCommandEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:LegacyCommandEdit(cmd,name,target,prefix,suffix)$/;"	f
LineHasOpeningBrackets	bundle/vim-javascript/indent/javascript.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
ListAdd	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>ListAdd(list,val)$/;"	f
ListPop	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>ListPop(list,val)$/;"	f
ListPush	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>ListPush(list,val)$/;"	f
ListSpawn	bundle/project-1.4.1/plugin/project.vim	/^    function! s:ListSpawn(varnamesegment)$/;"	f
LoadAll	bundle/project-1.4.1/plugin/project.vim	/^    function! s:LoadAll(recurse, line)$/;"	f
LoadAllSplit	bundle/project-1.4.1/plugin/project.vim	/^    function! s:LoadAllSplit(recurse, line)$/;"	f
LoadClasspathFromConfigFile	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:LoadClasspathFromConfigFile()$/;"	f
LoadPlugin	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:LoadPlugin()$/;"	f
LocalSearchDecl	autoload/omni/cpp/items.vim	/^function! s:LocalSearchDecl(name)$/;"	f
Log	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd,...)$/;"	f
Log	bundle/vim-rails/autoload/rails.vim	/^function! s:Log(bang,arg)$/;"	f
MBEClose	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang MBEClose     let t:skipEligibleBuffersCheck = 0 | call <SID>StopExplorer('<bang>' == '!')$/;"	c
MBECloseAll	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang MBECloseAll  tabdo let t:skipEligibleBuffersCheck = 0 | call <SID>StopExplorer('<bang>' == '!') | let s:TabsMBEState = 0$/;"	c
MBEDeleteBuffer	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>MBEDeleteBuffer()$/;"	f
MBEFocus	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! MBEFocus           call <SID>FocusExplorer()$/;"	c
MBEFocusAll	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! MBEFocusAll        tabdo call <SID>FocusExplorer()$/;"	c
MBEOpen	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang MBEOpen      let t:skipEligibleBuffersCheck = 1 | if '<bang>' == '!' | call <SID>StopExplorer(0) | endif | call <SID>StartExplorer(bufnr("%"))$/;"	c
MBEOpenAll	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang MBEOpenAll   tabdo let t:skipEligibleBuffersCheck = 1 | if '<bang>' == '!' | call <SID>StopExplorer(0) | endif | call <SID>StartExplorer(bufnr("%")) | let s:TabsMBEState = 1$/;"	c
MBESelectBuffer	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>MBESelectBuffer(split)$/;"	f
MBEToggle	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang MBEToggle    call <SID>ToggleExplorer(0,'<bang>'=='!')$/;"	c
MBEToggleAll	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang MBEToggleAll call <SID>ToggleExplorer(1,'<bang>'=='!')$/;"	c
MBEToggleMRU	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang MBEToggleMRU       call <SID>ToggleMRU()$/;"	c
MBEToggleMRUAll	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang MBEToggleMRUAll    tabdo call <SID>ToggleMRU()$/;"	c
MBEbb	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! MBEbb call <SID>CycleBuffer(0,1)$/;"	c
MBEbd	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang -nargs=* MBEbd call <SID>DeleteBuffer(0,'<bang>'=='!',<f-args>)$/;"	c
MBEbf	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! MBEbf call <SID>CycleBuffer(1,1)$/;"	c
MBEbn	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! MBEbn call <SID>CycleBuffer(1)$/;"	c
MBEbp	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! MBEbp call <SID>CycleBuffer(0)$/;"	c
MBEbun	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang -nargs=* MBEbun call <SID>DeleteBuffer(2,'<bang>'=='!',<f-args>)$/;"	c
MBEbw	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! -bang -nargs=* MBEbw call <SID>DeleteBuffer(1,'<bang>'=='!',<f-args>)$/;"	c
MISSING_BUFFER	bundle/Gundo/autoload/gundo.py	/^MISSING_BUFFER = "Cannot find Gundo's target buffer (%s)"$/;"	v
MISSING_WINDOW	bundle/Gundo/autoload/gundo.py	/^MISSING_WINDOW = "Cannot find window (%s) for Gundo's target buffer (%s)"$/;"	v
MKFILES	bundle/html5.vim/Makefile	/^MKFILES=Makefile `ls -1 | grep '.mk$$'`$/;"	m
MRU	bundle/mru.vim/plugin/mru.vim	/^command! -nargs=? -complete=customlist,s:MRU_Complete MRU$/;"	c
MRUCmp	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>MRUCmp(tab1, tab2)$/;"	f
MRU_AddFile	bundle/mru.vim/plugin/mru.vim	/^function! s:MRU_AddFile(acmd_bufnr)$/;"	f
MRU_Add_Menu	bundle/mru.vim/plugin/mru.vim	/^    let MRU_Add_Menu = 1$/;"	v
MRU_Auto_Close	bundle/mru.vim/plugin/mru.vim	/^    let MRU_Auto_Close = 1$/;"	v
MRU_Cmd	bundle/mru.vim/plugin/mru.vim	/^function! s:MRU_Cmd(pat)$/;"	f
MRU_Complete	bundle/mru.vim/plugin/mru.vim	/^function! s:MRU_Complete(ArgLead, CmdLine, CursorPos)$/;"	f
MRU_Edit_File	bundle/mru.vim/plugin/mru.vim	/^function! s:MRU_Edit_File(filename, sanitized)$/;"	f
MRU_Exclude_Files	bundle/mru.vim/plugin/mru.vim	/^    let MRU_Exclude_Files = ''$/;"	v
MRU_File	bundle/mru.vim/plugin/mru.vim	/^                let MRU_File = $USERPROFILE . '\\_vim_mru_files'$/;"	v
MRU_File	bundle/mru.vim/plugin/mru.vim	/^        let MRU_File = $HOME . '\/.vim_mru_files'$/;"	v
MRU_File	bundle/mru.vim/plugin/mru.vim	/^        let MRU_File = $VIM . '\/_vim_mru_files'$/;"	v
MRU_Include_Files	bundle/mru.vim/plugin/mru.vim	/^    let MRU_Include_Files = ''$/;"	v
MRU_LoadList	bundle/mru.vim/plugin/mru.vim	/^function! s:MRU_LoadList()$/;"	f
MRU_Max_Entries	bundle/mru.vim/plugin/mru.vim	/^    let MRU_Max_Entries = 100$/;"	v
MRU_Max_Menu_Entries	bundle/mru.vim/plugin/mru.vim	/^    let MRU_Max_Menu_Entries = 10$/;"	v
MRU_Max_Submenu_Entries	bundle/mru.vim/plugin/mru.vim	/^    let MRU_Max_Submenu_Entries = 10$/;"	v
MRU_Open_File_In_Tab	bundle/mru.vim/plugin/mru.vim	/^function! s:MRU_Open_File_In_Tab(fname, esc_fname)$/;"	f
MRU_Open_File_Use_Tabs	bundle/mru.vim/plugin/mru.vim	/^    let MRU_Open_File_Use_Tabs = 0$/;"	v
MRU_Open_Window	bundle/mru.vim/plugin/mru.vim	/^function! s:MRU_Open_Window(...)$/;"	f
MRU_Refresh_Menu	bundle/mru.vim/plugin/mru.vim	/^function! s:MRU_Refresh_Menu()$/;"	f
MRU_SaveList	bundle/mru.vim/plugin/mru.vim	/^function! s:MRU_SaveList()$/;"	f
MRU_Select_File_Cmd	bundle/mru.vim/plugin/mru.vim	/^function! s:MRU_Select_File_Cmd(opt) range$/;"	f
MRU_Use_Current_Window	bundle/mru.vim/plugin/mru.vim	/^    let MRU_Use_Current_Window = 0$/;"	v
MRU_Warn_Msg	bundle/mru.vim/plugin/mru.vim	/^function! s:MRU_Warn_Msg(msg)$/;"	f
MRU_Window_Edit_File	bundle/mru.vim/plugin/mru.vim	/^function! s:MRU_Window_Edit_File(fname, multi, edit_type, open_type)$/;"	f
MRU_Window_Height	bundle/mru.vim/plugin/mru.vim	/^    let MRU_Window_Height = 8$/;"	v
MRU_Window_Open_Always	bundle/mru.vim/plugin/mru.vim	/^    let MRU_Window_Open_Always = 0$/;"	v
MRU_add_files_to_menu	bundle/mru.vim/plugin/mru.vim	/^function! s:MRU_add_files_to_menu(prefix, file_list)$/;"	f
MRU_escape_filename	bundle/mru.vim/plugin/mru.vim	/^function! s:MRU_escape_filename(fname)$/;"	f
MUR_FMIX	bundle/the_silver_searcher/src/uthash.h	/^#define MUR_FMIX(/;"	d
MUR_GETBLOCK	bundle/the_silver_searcher/src/uthash.h	/^#define MUR_GETBLOCK(/;"	d
MUR_ONE_THREE	bundle/the_silver_searcher/src/uthash.h	/^#define MUR_ONE_THREE(/;"	d
MUR_PLUS0_ALIGNED	bundle/the_silver_searcher/src/uthash.h	/^#define MUR_PLUS0_ALIGNED(/;"	d
MUR_PLUS1_ALIGNED	bundle/the_silver_searcher/src/uthash.h	/^#define MUR_PLUS1_ALIGNED(/;"	d
MUR_PLUS2_ALIGNED	bundle/the_silver_searcher/src/uthash.h	/^#define MUR_PLUS2_ALIGNED(/;"	d
MUR_PLUS3_ALIGNED	bundle/the_silver_searcher/src/uthash.h	/^#define MUR_PLUS3_ALIGNED(/;"	d
MUR_ROTL32	bundle/the_silver_searcher/src/uthash.h	/^#define MUR_ROTL32(/;"	d
MUR_THREE_ONE	bundle/the_silver_searcher/src/uthash.h	/^#define MUR_THREE_ONE(/;"	d
MUR_TWO_TWO	bundle/the_silver_searcher/src/uthash.h	/^#define MUR_TWO_TWO(/;"	d
Make	bundle/vim-dispatch/plugin/dispatch.vim	/^command! -bang -nargs=* -complete=file Make$/;"	c
MakeSnip	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! MakeSnip(scope, trigger, content, ...)$/;"	f
ManualCompletionEnter	bundle/supertab/plugin/supertab.vim	/^function! s:ManualCompletionEnter() " {{{$/;"	f
MapNextFamily	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:MapNextFamily(map,cmd)$/;"	f
MapNorms	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapNorms()$/;"	f
MapSpecs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapSpecs()$/;"	f
MarkToOpen	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MarkToOpen()$/;"	f
Match	autoload/multvals.vim	/^function! s:Match(expr, pat, start)$/;"	f
Match	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:Match(expr, pat, start)$/;"	f
Match	bundle/vim-javascript/indent/javascript.vim	/^function s:Match(lnum, regex)$/;"	f
Match	bundle/vim-ruby/indent/ruby.vim	/^function s:Match(lnum, regex)$/;"	f
MatchColorValue	bundle/vim-css-color/after/syntax/css.vim	/^function! s:MatchColorValue(color, pattern)$/;"	f
MatchDebug	bundle/matchit/plugin/matchit.vim	/^  command! -nargs=0 MatchDebug call s:Match_debug()$/;"	c
MatchIt	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchIt(items, pat, limit, exc)$/;"	f
MatchLast	bundle/vim-ruby/indent/ruby.vim	/^function s:MatchLast(lnum, regex)$/;"	f
Match_debug	bundle/matchit/plugin/matchit.vim	/^fun! s:Match_debug()$/;"	f
Match_wrapper	bundle/matchit/plugin/matchit.vim	/^function! s:Match_wrapper(word, forward, mode) range$/;"	f
MatchedItems	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchedItems(items, pat, limit)$/;"	f
Matchend	autoload/multvals.vim	/^function! s:Matchend(expr, pat, start)$/;"	f
Matchstr	autoload/multvals.vim	/^function! s:Matchstr(expr, pat, start)$/;"	f
MavenOutputDirectory	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:MavenOutputDirectory()$/;"	f
MenuController.New	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
MiniBufExpl	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^augroup MiniBufExpl$/;"	a
MiniBufExplorer	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! MiniBufExplorer echoe 'MiniBufExplorer is depreciated, please use MBEOpen instead.'$/;"	c
Move	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination)$/;"	f
Move	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:Move(cmd, count, map) abort$/;"	f
MoveComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P)$/;"	f
MoveDown	bundle/project-1.4.1/plugin/project.vim	/^    function! s:MoveDown()$/;"	f
MoveUp	bundle/project-1.4.1/plugin/project.vim	/^    function! s:MoveUp()$/;"	f
Mru	bundle/mru.vim/plugin/mru.vim	/^command! -nargs=? -complete=customlist,s:MRU_Complete Mru$/;"	c
MultiMatch	bundle/matchit/plugin/matchit.vim	/^fun! s:MultiMatch(spflag, mode)$/;"	f
MultipleCursorsFind	bundle/vim-multiple-cursors/plugin/multiple_cursors.vim	/^command! -nargs=1 -range=% MultipleCursorsFind $/;"	c
MvAddElement	autoload/multvals.vim	/^function! MvAddElement(array, sep, ele, ...)$/;"	f
MvBISortElements	autoload/multvals.vim	/^function! MvBISortElements(array, sep, cmp, direction, ...)$/;"	f
MvCmpByPosition	autoload/multvals.vim	/^function! MvCmpByPosition(array, sep, ele1, ele2, direction, ...)$/;"	f
MvContainsElement	autoload/multvals.vim	/^function! MvContainsElement(array, sep, ele, ...)$/;"	f
MvContainsPattern	autoload/multvals.vim	/^function! MvContainsPattern(array, sep, pat, ...)$/;"	f
MvCrUnProtectedCharsPattern	autoload/multvals.vim	/^function! MvCrUnProtectedCharsPattern(sepChars)$/;"	f
MvElementAt	autoload/multvals.vim	/^function! MvElementAt(array, sep, index, ...)$/;"	f
MvElementLike	autoload/multvals.vim	/^function! MvElementLike(array, sep, pat, ...)$/;"	f
MvGetSelectedIndex	autoload/multvals.vim	/^function! MvGetSelectedIndex()$/;"	f
MvIndexOfElement	autoload/multvals.vim	/^function! MvIndexOfElement(array, sep, ele, ...)$/;"	f
MvIndexOfElementImpl	autoload/multvals.vim	/^function! s:MvIndexOfElementImpl(array, sep, ele, asPattern, ...)$/;"	f
MvIndexOfPattern	autoload/multvals.vim	/^function! MvIndexOfPattern(array, sep, pat, ...)$/;"	f
MvInsertElementAt	autoload/multvals.vim	/^function! MvInsertElementAt(array, sep, ele, index, ...)$/;"	f
MvIterCreate	autoload/multvals.vim	/^function! MvIterCreate(array, sep, iterName, ...)$/;"	f
MvIterDestroy	autoload/multvals.vim	/^function! MvIterDestroy(iterName)$/;"	f
MvIterHasNext	autoload/multvals.vim	/^function! MvIterHasNext(iterName)$/;"	f
MvIterNext	autoload/multvals.vim	/^function! MvIterNext(iterName)$/;"	f
MvIterNext	autoload/multvals.vim	/^function! s:MvIterNext(iterName, peek)$/;"	f
MvIterPeek	autoload/multvals.vim	/^function! MvIterPeek(iterName)$/;"	f
MvLastElement	autoload/multvals.vim	/^function! MvLastElement(array, sep, ...)$/;"	f
MvNumSearchNext	autoload/multvals.vim	/^function! MvNumSearchNext(array, sep, ele, dir, ...)$/;"	f
MvNumberOfElements	autoload/multvals.vim	/^function! MvNumberOfElements(array, sep, ...)$/;"	f
MvPromptForElement	autoload/multvals.vim	/^function! MvPromptForElement(array, sep, default, msg, skip, useDialog, ...)$/;"	f
MvPromptForElement2	autoload/multvals.vim	/^function! MvPromptForElement2(array, sep, default, msg, skip, useDialog, nCols,$/;"	f
MvPullToBack	autoload/multvals.vim	/^function! MvPullToBack(array, sep, ele, ...)$/;"	f
MvPullToBackElementAt	autoload/multvals.vim	/^function! MvPullToBackElementAt(array, sep, index, ...)$/;"	f
MvPushToFront	autoload/multvals.vim	/^function! MvPushToFront(array, sep, ele, ...)$/;"	f
MvPushToFrontElementAt	autoload/multvals.vim	/^function! MvPushToFrontElementAt(array, sep, index, ...)$/;"	f
MvQSortElements	autoload/multvals.vim	/^function! MvQSortElements(array, sep, cmp, direction, ...)$/;"	f
MvRemoveElement	autoload/multvals.vim	/^function! MvRemoveElement(array, sep, ele, ...)$/;"	f
MvRemoveElementAll	autoload/multvals.vim	/^function! MvRemoveElementAll(array, sep, ele, ...)$/;"	f
MvRemoveElementAt	autoload/multvals.vim	/^function! MvRemoveElementAt(array, sep, index, ...)$/;"	f
MvRemoveElementImpl	autoload/multvals.vim	/^function! s:MvRemoveElementImpl(array, sep, ele, asPattern, ...)$/;"	f
MvRemovePattern	autoload/multvals.vim	/^function! MvRemovePattern(array, sep, pat, ...)$/;"	f
MvRemovePatternAll	autoload/multvals.vim	/^function! MvRemovePatternAll(array, sep, pat, ...)$/;"	f
MvReplaceElementAt	autoload/multvals.vim	/^function! MvReplaceElementAt(array, sep, ele, index, ...)$/;"	f
MvRotateLeftAt	autoload/multvals.vim	/^function! MvRotateLeftAt(array, sep, index, ...)$/;"	f
MvRotateRightAt	autoload/multvals.vim	/^function! MvRotateRightAt(array, sep, index, ...)$/;"	f
MvSortElements	autoload/multvals.vim	/^function! s:MvSortElements(array, sep, cmp, direction, sortFunc, acc, wrt,$/;"	f
MvStrIndexAfterElement	autoload/multvals.vim	/^function! MvStrIndexAfterElement(array, sep, ele, ...)$/;"	f
MvStrIndexAfterElementImpl	autoload/multvals.vim	/^function! s:MvStrIndexAfterElementImpl(array, sep, ele, asPattern, ...)$/;"	f
MvStrIndexAfterPattern	autoload/multvals.vim	/^function! MvStrIndexAfterPattern(array, sep, pat, ...)$/;"	f
MvStrIndexOfElement	autoload/multvals.vim	/^function! MvStrIndexOfElement(array, sep, ele, ...)$/;"	f
MvStrIndexOfElementAt	autoload/multvals.vim	/^function! MvStrIndexOfElementAt(array, sep, index, ...)$/;"	f
MvStrIndexOfElementImpl	autoload/multvals.vim	/^function! s:MvStrIndexOfElementImpl(array, sep, ele, asPattern, ...)$/;"	f
MvStrIndexOfPattern	autoload/multvals.vim	/^function! MvStrIndexOfPattern(array, sep, pat, ...)$/;"	f
MvSwapElementsAt	autoload/multvals.vim	/^function! MvSwapElementsAt(array, sep, index1, index2, ...)$/;"	f
MyScriptId	autoload/multvals.vim	/^function! s:MyScriptId()$/;"	f
NAME	bundle/html5.vim/Makefile	/^NAME=`basename \\`pwd\\``$/;"	m
NERDTree	bundle/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTree :call g:NERDTreeCreator.CreatePrimary('<args>')$/;"	c
NERDTreeAddKeyMap	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddSubmenu	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeCWD call NERDTreeCWD()$/;"	c
NERDTreeCWD	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeClose	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeClose :call nerdtree#closeTreeIfOpen()$/;"	c
NERDTreeCloseAllTabs	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeCloseAllTabs()$/;"	f
NERDTreeCopyNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeFind	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFind call nerdtree#findAndRevealPath()$/;"	c
NERDTreeFocus	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFocus call NERDTreeFocus()$/;"	c
NERDTreeFocus	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeFocus	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeFocus()$/;"	f
NERDTreeFromBookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=1 -complete=customlist,nerdtree#completeBookmarks -bar NERDTreeFromBookmark call g:NERDTreeCreator.CreatePrimary('<args>')$/;"	c
NERDTreeHijackNetrw	bundle/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeMirror	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeMirror call g:NERDTreeCreator.CreateMirror()$/;"	c
NERDTreeMirrorOpen	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeMirrorOpen   call <SID>NERDTreeMirrorOrCreate()$/;"	c
NERDTreeMirrorOrCreate	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeMirrorOrCreate()$/;"	f
NERDTreeMirrorToggle	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeMirrorToggle call <SID>NERDTreeMirrorToggle()$/;"	c
NERDTreeMirrorToggle	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeMirrorToggle()$/;"	f
NERDTreeMoveNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeOpenAllTabs	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeOpenAllTabs()$/;"	f
NERDTreeQuickLook	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRestoreFocus	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeRestoreFocus()$/;"	f
NERDTreeRevealInFinder	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeSteppedClose	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeSteppedClose call <SID>NERDTreeSteppedClose()$/;"	c
NERDTreeSteppedClose	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeSteppedClose()$/;"	f
NERDTreeSteppedOpen	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeSteppedOpen  call <SID>NERDTreeSteppedOpen()$/;"	c
NERDTreeSteppedOpen	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeSteppedOpen()$/;"	f
NERDTreeTabsClose	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeTabsClose    call <SID>NERDTreeCloseAllTabs()$/;"	c
NERDTreeTabsOpen	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeTabsOpen     call <SID>NERDTreeOpenAllTabs()$/;"	c
NERDTreeTabsToggle	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeTabsToggle   call <SID>NERDTreeToggleAllTabs()$/;"	c
NERDTreeToggle	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTreeToggle :call g:NERDTreeCreator.TogglePrimary('<args>')$/;"	c
NERDTreeToggleAllTabs	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeToggleAllTabs()$/;"	f
NERDTreeUnfocus	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeUnfocus()$/;"	f
NO_DECLTYPE	bundle/the_silver_searcher/src/uthash.h	/^#define NO_DECLTYPE$/;"	d
NameCmp	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>NameCmp(tab1, tab2)$/;"	f
Navcommand	bundle/vim-rails/autoload/rails.vim	/^function! s:Navcommand(bang,...)$/;"	f
NewTags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:NewTags(name)$/;"	f
NextNormalWindow	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>NextNormalWindow()$/;"	f
NextNormalWindow	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NextNormalWindow()$/;"	f
Node	bundle/Gundo/autoload/gundo.py	/^class Node(object):$/;"	c
OPTIONS_H	bundle/the_silver_searcher/src/options.h	/^#define OPTIONS_H$/;"	d
OSSupportsShellredirHack	bundle/syntastic/plugin/syntastic.vim	/^function! s:OSSupportsShellredirHack()$/;"	f
Open	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Open()$/;"	f
Open	bundle/vim-bundler/plugin/bundler.vim	/^function! s:Open(cmd,gem,lcd)$/;"	f
OpenComplete	bundle/vim-bundler/plugin/bundler.vim	/^function! s:OpenComplete(A,L,P)$/;"	f
OpenEntry	bundle/project-1.4.1/plugin/project.vim	/^    function! s:OpenEntry(line, precmd, editcmd, dir)$/;"	f
OpenEntry2	bundle/project-1.4.1/plugin/project.vim	/^    function! s:OpenEntry2(line, infoline, fname, editcmd)$/;"	f
OpenMulti	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenMulti(...)$/;"	f
OpenNoMarks	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenNoMarks(md, line)$/;"	f
Opener.New	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._checkToCloseTree	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._gotoTargetWin	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._newSplit	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
PP	bundle/vim-scriptease/plugin/scriptease.vim	/^command! -bang -range=999998 -nargs=1 -complete=expression PP$/;"	c
PPmsg	bundle/vim-scriptease/plugin/scriptease.vim	/^command! -bang -range=0      -nargs=1 -complete=expression PPmsg$/;"	c
PRINT_H	bundle/the_silver_searcher/src/print.h	/^#define PRINT_H$/;"	d
PWD	bundle/html5.vim/Makefile	/^PWD=`pwd`$/;"	m
ParseArgs	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:ParseArgs(beg, end, commentMode, arglist) "{{{3$/;"	f
ParseCoffeeError	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:ParseCoffeeError(output, src, startline)$/;"	f
ParseSkip	bundle/matchit/plugin/matchit.vim	/^fun! s:ParseSkip(str)$/;"	f
ParseWords	bundle/matchit/plugin/matchit.vim	/^fun! s:ParseWords(groups)$/;"	f
Path.AbsolutePathFor	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(path)$/;"	f
Path.Resolve	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.Slash	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._ignorePatternMatches	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._str	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString()$/;"	f
Path.changeToDir	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.delete	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortOrderIndex	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore()$/;"	f
Path.isUnder	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.isUnixHiddenFile	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh()$/;"	f
Path.rename	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
PersistentVarName	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:PersistentVarName(pluginName, persistentVar)$/;"	f
PrevNonBlankNonString	bundle/vim-javascript/indent/javascript.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PrevNonBlankNonString	bundle/vim-ruby/indent/ruby.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
Preview	bundle/vim-rails/autoload/rails.vim	/^function! s:Preview(bang, lnum, uri) abort$/;"	f
PreviewCSSColorInLine	bundle/vim-css-color/after/syntax/css.vim	/^function! s:PreviewCSSColorInLine()$/;"	f
ProcessFile	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:ProcessFile(file, ft, ...)$/;"	f
ProcessLine	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:ProcessLine(uncomment, match, checkRx, replace)$/;"	f
ProcessSnippet	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:ProcessSnippet(snip)$/;"	f
Project	bundle/project-1.4.1/plugin/project.vim	/^    command -nargs=? -complete=file Project call <SID>Project('<args>')$/;"	c
Project	bundle/project-1.4.1/plugin/project.vim	/^function! s:Project(filename) " <<<$/;"	f
Project_ForEach	bundle/project-1.4.1/plugin/project.vim	/^    function! Project_ForEach(recurse, lineno, cmd, data, match)$/;"	f
Project_ForEachR	bundle/project-1.4.1/plugin/project.vim	/^    function! s:Project_ForEachR(recurse, lineno, info, cmd, data, match)$/;"	f
Project_GetAllFnames	bundle/project-1.4.1/plugin/project.vim	/^    function! Project_GetAllFnames(recurse, lineno, separator)$/;"	f
Project_GetFname	bundle/project-1.4.1/plugin/project.vim	/^    function! Project_GetFname(line)$/;"	f
PrtAdd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtAdd(char)$/;"	f
PrtBS	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtBS()$/;"	f
PrtClear	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClear()$/;"	f
PrtClearCache	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClearCache()$/;"	f
PrtCurEnd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurEnd()$/;"	f
PrtCurLeft	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurLeft()$/;"	f
PrtCurRight	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurRight()$/;"	f
PrtCurStart	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurStart()$/;"	f
PrtDelete	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDelete()$/;"	f
PrtDeleteEnt	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteEnt()$/;"	f
PrtDeleteMRU	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteMRU()$/;"	f
PrtDeleteWord	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteWord()$/;"	f
PrtExit	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExit()$/;"	f
PrtExpandDir	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExpandDir()$/;"	f
PrtFocusMap	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtFocusMap(char)$/;"	f
PrtHistory	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtHistory(...)$/;"	f
PrtInsert	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtInsert(...)$/;"	f
PrtSelectJump	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectJump(char)$/;"	f
PrtSelectMove	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectMove(dir)$/;"	f
PrtSwitcher	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSwitcher()$/;"	f
PylintNew	bundle/syntastic/syntax_checkers/python/pylint.vim	/^function s:PylintNew()$/;"	f
QSortR	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:QSortR(start, end, cmp, direction, accessor, swapper, context)$/;"	f
Queue	bundle/vim-l9/autoload/l9/async.py	/^import Queue$/;"	i
QuickFixCmdPostMake	bundle/vim-bundler/plugin/bundler.vim	/^function! s:QuickFixCmdPostMake()$/;"	f
QuickFixCmdPreMake	bundle/vim-bundler/plugin/bundler.vim	/^function! s:QuickFixCmdPreMake()$/;"	f
QuitIfLastOpen	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>QuitIfLastOpen() abort$/;"	f
QuitPreHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:QuitPreHook()$/;"	f
R	bundle/vim-rake/plugin/rake.vim	/^function! s:R(cmd,bang,...) abort$/;"	f
RAddParameter	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! RAddParameter                  call AddParameter()$/;"	c
RAddParameterNB	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! RAddParameterNB                call AddParameterNB()$/;"	c
RComplete	bundle/vim-rake/plugin/rake.vim	/^function! s:RComplete(A,L,P) abort$/;"	f
RConvertPostConditional	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! RConvertPostConditional        call ConvertPostConditional()$/;"	c
README_FILES	bundle/html5.vim/Makefile	/^README_FILES=`ls -1 | grep -i readme`$/;"	m
RECORD_FILE	bundle/html5.vim/Makefile	/^RECORD_FILE=.record$/;"	m
RECORD_SCRIPT	bundle/html5.vim/Makefile	/^RECORD_SCRIPT=.mkrecord$/;"	m
REF	bundle/vim-coffee-script/Makefile	/^REF = HEAD$/;"	m
RExtractConstant	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! -range RExtractConstant        call ExtractConstant()$/;"	c
RExtractLet	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! RExtractLet                    call ExtractIntoRspecLet()$/;"	c
RExtractLocalVariable	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! -range RExtractLocalVariable   call ExtractLocalVariable()$/;"	c
RExtractMethod	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! -range RExtractMethod          call ExtractMethod()$/;"	c
RInlineTemp	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! RInlineTemp                    call InlineTemp()$/;"	c
RIntroduceVariable	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! RIntroduceVariable             call IntroduceVariable()$/;"	c
RRenameInstanceVariable	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! -range RRenameInstanceVariable call RenameInstanceVariable()$/;"	c
RRenameLocalVariable	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! -range RRenameLocalVariable    call RenameLocalVariable()$/;"	c
Rails	bundle/vim-rails/plugin/rails.vim	/^command! -bar -bang -nargs=* -complete=dir Rails :if s:autoload()|execute rails#new_app_command(<bang>0,<f-args>)|endif$/;"	c
RailsBufInit	bundle/vim-rails/autoload/rails.vim	/^function! RailsBufInit(path)$/;"	f
RailsFile	bundle/vim-rails/autoload/rails.vim	/^function! RailsFile()$/;"	f
RailsFilePath	bundle/vim-rails/autoload/rails.vim	/^function! RailsFilePath()$/;"	f
RailsFileType	bundle/vim-rails/autoload/rails.vim	/^function! RailsFileType()$/;"	f
RailsFind	bundle/vim-rails/autoload/rails.vim	/^function! s:RailsFind()$/;"	f
RailsIncludeexpr	bundle/vim-rails/autoload/rails.vim	/^function! RailsIncludeexpr()$/;"	f
RailsIncludefind	bundle/vim-rails/autoload/rails.vim	/^function! s:RailsIncludefind(str,...)$/;"	f
RailsNamedRoutes	bundle/vim-rails/autoload/rails.vim	/^function! RailsNamedRoutes()$/;"	f
RailsRevision	bundle/vim-rails/autoload/rails.vim	/^function! RailsRevision()$/;"	f
RailsRoot	bundle/vim-rails/autoload/rails.vim	/^function! RailsRoot()$/;"	f
Rake	bundle/vim-rails/autoload/rails.vim	/^function! s:Rake(bang,lnum,arg)$/;"	f
Rake	bundle/vim-rake/plugin/rake.vim	/^function! s:Rake(bang,arg)$/;"	f
RakeComplete	bundle/vim-rake/plugin/rake.vim	/^function! s:RakeComplete(A,L,P)$/;"	f
RecordPrevBuffer_au	bundle/project-1.4.1/plugin/project.vim	/^    function! s:RecordPrevBuffer_au()$/;"	f
RecursivelyConstructDirectives	bundle/project-1.4.1/plugin/project.vim	/^    function! s:RecursivelyConstructDirectives(lineno)$/;"	f
Redraw	bundle/syntastic/plugin/syntastic.vim	/^function! s:Redraw()$/;"	f
Ref	bundle/matchit/plugin/matchit.vim	/^fun! s:Ref(string, d, ...)$/;"	f
Refresh	bundle/vim-rails/autoload/rails.vim	/^function! s:Refresh(bang)$/;"	f
RefreshBuffer	bundle/vim-rails/autoload/rails.vim	/^function! s:RefreshBuffer()$/;"	f
RefreshEntriesFromDir	bundle/project-1.4.1/plugin/project.vim	/^    function! s:RefreshEntriesFromDir(recursive)$/;"	f
RegHandler	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:RegHandler(regex, function, args)$/;"	f
Related	bundle/vim-rails/autoload/rails.vim	/^function! s:Related(cmd,line1,line2,count,...)$/;"	f
ReleaseKeyPresses	bundle/supertab/plugin/supertab.vim	/^function! s:ReleaseKeyPresses() " {{{$/;"	f
ReloadAllSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ReloadAllSnippets()$/;"	f
ReloadSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ReloadSnippets(ft)$/;"	f
Remove	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(force)$/;"	f
RemoveCComments	autoload/omni/cpp/utils.vim	/^function! s:RemoveCComments(szLine)$/;"	f
RemoveCarriageReturn	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:RemoveCarriageReturn(line)$/;"	f
RemoveDir	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:RemoveDir(dir)$/;"	f
RemoveSnippet	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:RemoveSnippet()$/;"	f
RemoveTrailingComments	bundle/vim-javascript/indent/javascript.vim	/^function s:RemoveTrailingComments(content)$/;"	f
RenameInstanceVariable	bundle/vim-ruby-refactoring/plugin/refactorings/general/renameinstancevariable.vim	/^function! RenameInstanceVariable()$/;"	f
RenameLocalVariable	bundle/vim-ruby-refactoring/plugin/refactorings/general/renamelocalvariable.vim	/^function! RenameLocalVariable()$/;"	f
Render	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Render(lines, pat)$/;"	f
RenderSyntax	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>RenderSyntax()$/;"	f
RepeatCommentstring	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:RepeatCommentstring(cdef) "{{{3$/;"	f
ReplaceCmd	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
ReplaceInLine	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:ReplaceInLine(text) "{{{3$/;"	f
Reset	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Reset(args)$/;"	f
ResetAllSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ResetAllSnippets()$/;"	f
ResetSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ResetSnippets(ft)$/;"	f
ResizeWindow	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>ResizeWindow()$/;"	f
Resolve	bundle/matchit/plugin/matchit.vim	/^fun! s:Resolve(source, target, output)$/;"	f
ResolveAliasInNamespaceList	autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasInNamespaceList(mapNamespaceAlias, listNamespaces)$/;"	f
ResolveAliasKey	autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasKey(mapNamespaceAlias, szAlias)$/;"	f
ResolveAliasKeys	autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasKeys(mapNamespaceAlias)$/;"	f
ResolveCCast	autoload/omni/cpp/items.vim	/^function! s:ResolveCCast(tokens)$/;"	f
ResolveCast	autoload/omni/cpp/items.vim	/^function! s:ResolveCast(tokens, startChar, endChar)$/;"	f
ResolveCppCast	autoload/omni/cpp/items.vim	/^function! s:ResolveCppCast(tokens)$/;"	f
ResolveNamespace	autoload/omni/cpp/namespaces.vim	/^function! s:ResolveNamespace(namespace, mapCurrentContexts)$/;"	f
ResolveSymbol	autoload/omni/cpp/items.vim	/^function! s:ResolveSymbol(contextStack, szSymbol, szTagFilter)$/;"	f
RestoreNERDTreeViewIfPossible	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:RestoreNERDTreeViewIfPossible()$/;"	f
RestoreWindowSettings2	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:RestoreWindowSettings2(id)$/;"	f
Rlib	bundle/vim-rake/plugin/rake.vim	/^function! s:Rlib(file)$/;"	f
RlibComplete	bundle/vim-rake/plugin/rake.vim	/^function! s:RlibComplete(A,L,P)$/;"	f
Rspec	bundle/vim-rake/plugin/rake.vim	/^function! s:Rspec(...)$/;"	f
RspecComplete	bundle/vim-rake/plugin/rake.vim	/^function! s:RspecComplete(A,L,P)$/;"	f
Rtask	bundle/vim-rake/plugin/rake.vim	/^function! s:Rtask(file)$/;"	f
RtaskComplete	bundle/vim-rake/plugin/rake.vim	/^function! s:RtaskComplete(A,L,P)$/;"	f
Rtest	bundle/vim-rake/plugin/rake.vim	/^function! s:Rtest(...)$/;"	f
RtestComplete	bundle/vim-rake/plugin/rake.vim	/^function! s:RtestComplete(A,L,P)$/;"	f
Rtestorspec	bundle/vim-rake/plugin/rake.vim	/^function! s:Rtestorspec(order,file)$/;"	f
RubyBalloonexpr	bundle/vim-ruby/ftplugin/ruby.vim	/^function! RubyBalloonexpr()$/;"	f
RubyCursorIdentifier	bundle/vim-ruby/ftplugin/ruby.vim	/^function! RubyCursorIdentifier()$/;"	f
RubyExtract	bundle/vim-rails/autoload/rails.vim	/^function! s:RubyExtract(bang, root, before, name) range abort$/;"	f
Runtime	bundle/vim-scriptease/plugin/scriptease.vim	/^command! -bang -bar -nargs=* -complete=customlist,s:Complete Runtime$/;"	c
SCANDIR_H	bundle/the_silver_searcher/src/scandir.h	/^#define SCANDIR_H$/;"	d
SEARCH_H	bundle/the_silver_searcher/src/search.h	/^#define SEARCH_H$/;"	d
SHA1CircularShift	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function s:SHA1CircularShift(bits, word)$/;"	f
SHA1Digest	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function! s:SHA1Digest(bytes)$/;"	f
SHA1Input	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function s:SHA1Input(context, message_array)$/;"	f
SHA1PadMessage	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function s:SHA1PadMessage(context)$/;"	f
SHA1ProcessMessageBlock	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function s:SHA1ProcessMessageBlock(context)$/;"	f
SHA1Reset	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function s:SHA1Reset(context)$/;"	f
SHA1Result	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function s:SHA1Result(context, Message_Digest)$/;"	f
SHELL	bundle/html5.vim/Makefile	/^SHELL=bash$/;"	m
SHELL	bundle/supertab/Makefile	/^SHELL=\/bin\/bash$/;"	m
SID	bundle/nerdtree/autoload/nerdtree.vim	/^function s:SID()$/;"	f
SID	bundle/vim-slime/plugin/slime.vim	/^function! s:SID()$/;"	f
SNR	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:SNR()$/;"	f
SVN_DIR	bundle/the_silver_searcher/src/ignore.h	/^#define SVN_DIR /;"	d
SVN_DIR_PROP_BASE	bundle/the_silver_searcher/src/ignore.h	/^#define SVN_DIR_PROP_BASE /;"	d
SVN_PROP_IGNORE	bundle/the_silver_searcher/src/ignore.h	/^#define SVN_PROP_IGNORE /;"	d
SYMLOOP_ERROR	bundle/the_silver_searcher/src/search.h	/^#define SYMLOOP_ERROR /;"	d
SYMLOOP_LOOP	bundle/the_silver_searcher/src/search.h	/^#define SYMLOOP_LOOP /;"	d
SYMLOOP_OK	bundle/the_silver_searcher/src/search.h	/^#define SYMLOOP_OK /;"	d
SaveClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveClasspath()$/;"	f
SaveGlobalFocus	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:SaveGlobalFocus()$/;"	f
SaveNERDTreeViewIfPossible	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:SaveNERDTreeViewIfPossible()$/;"	f
ScratchBufBuild	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:ScratchBufBuild(src, vert, size)$/;"	f
ScratchBufUpdate	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:ScratchBufUpdate(buf, text)$/;"	f
ScreenConfig	bundle/vim-slime/plugin/slime.vim	/^function! s:ScreenConfig() abort$/;"	f
ScreenSend	bundle/vim-slime/plugin/slime.vim	/^function! s:ScreenSend(config, text)$/;"	f
ScreenSessionNames	bundle/vim-slime/plugin/slime.vim	/^function! s:ScreenSessionNames(A,L,P)$/;"	f
Scriptnames	bundle/vim-scriptease/plugin/scriptease.vim	/^command! -bar Scriptnames call setqflist(s:names())|copen$/;"	c
SearchCode	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:SearchCode(lnum, regex)$/;"	f
SearchDecl	autoload/omni/cpp/items.vim	/^function! s:SearchDecl(szVariable)$/;"	f
SearchGlobalMembers	autoload/omni/cpp/complete.vim	/^function! s:SearchGlobalMembers(szBase)$/;"	f
SearchHeaders	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:SearchHeaders()$/;"	f
SearchMatchingKeyword	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:SearchMatchingKeyword(startlnum, open, close)$/;"	f
SearchMembers	autoload/omni/cpp/complete.vim	/^function! s:SearchMembers(resolvedTagItem, szBase)$/;"	f
SearchPair	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:SearchPair(startlnum, lookback, skip, open, close)$/;"	f
SearchTypeInfoOfDecl	autoload/omni/cpp/items.vim	/^function! s:SearchTypeInfoOfDecl(szVariable)$/;"	f
Select	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=+ -complete=customlist,dbext#DB_completeTables Select            :call dbext#DB_execSql("select " . <q-args>)$/;"	c
SelectCompletion	bundle/supertab/plugin/supertab.vim	/^    function! s:SelectCompletion(cr)$/;"	f
SelectJavascript	bundle/vim-javascript/ftdetect/javascript.vim	/^fun! s:SelectJavascript()$/;"	f
SelectWord	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:SelectWord()$/;"	f
Set	bundle/vim-rails/autoload/rails.vim	/^function! s:Set(bang,...)$/;"	f
SetBasePath	bundle/vim-rails/autoload/rails.vim	/^function! s:SetBasePath() abort$/;"	f
SetCompletionType	bundle/supertab/plugin/supertab.vim	/^function! s:SetCompletionType() " {{{$/;"	f
SetDefTxt	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetDefTxt()$/;"	f
SetDefaultCompletionType	bundle/supertab/plugin/supertab.vim	/^function! s:SetDefaultCompletionType() " {{{$/;"	f
SetMakePrg	bundle/vim-coffee-script/compiler/coffee.vim	/^function! s:SetMakePrg()$/;"	f
SetOption	bundle/vim-colors-solarized/colors/solarized.vim	/^function! s:SetOption(name,default)$/;"	f
SetWD	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetWD(args)$/;"	f
SetWhitespaceMode	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:SetWhitespaceMode(cdef) "{{{3$/;"	f
SetupAutoCommand	bundle/project-1.4.1/plugin/project.vim	/^    function! s:SetupAutoCommand(cwd)$/;"	f
SetupMake	bundle/vim-bundler/plugin/bundler.vim	/^function! s:SetupMake() abort$/;"	f
SetupScriptAutoCommand	bundle/project-1.4.1/plugin/project.vim	/^    function! s:SetupScriptAutoCommand(bufcmd, script)$/;"	f
ShiftWidth	bundle/vim-coffee-script/indent/coffee.vim	/^  function! s:ShiftWidth()$/;"	f
ShouldSkip	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:ShouldSkip(startlnum, lnum, col)$/;"	f
ShowAvailableSnips	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ShowAvailableSnips()$/;"	f
ShowBuffers	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>ShowBuffers()$/;"	f
ShowLocList	bundle/syntastic/plugin/syntastic.vim	/^function! s:ShowLocList()$/;"	f
SkipFile	bundle/syntastic/plugin/syntastic.vim	/^function! s:SkipFile()$/;"	f
SlimeConfig	bundle/vim-slime/plugin/slime.vim	/^command -bar -nargs=0 SlimeConfig call s:SlimeConfig()$/;"	c
SlimeConfig	bundle/vim-slime/plugin/slime.vim	/^function! s:SlimeConfig() abort$/;"	f
SlimeDispatch	bundle/vim-slime/plugin/slime.vim	/^function! s:SlimeDispatch(name, ...)$/;"	f
SlimeGetConfig	bundle/vim-slime/plugin/slime.vim	/^function! s:SlimeGetConfig()$/;"	f
SlimeSend	bundle/vim-slime/plugin/slime.vim	/^command -range -bar -nargs=0 SlimeSend <line1>,<line2>call s:SlimeSendRange()$/;"	c
SlimeSend	bundle/vim-slime/plugin/slime.vim	/^function! s:SlimeSend(text)$/;"	f
SlimeSend1	bundle/vim-slime/plugin/slime.vim	/^command -nargs=+ SlimeSend1 call s:SlimeSend(<q-args> . "\\r")$/;"	c
SlimeSendLines	bundle/vim-slime/plugin/slime.vim	/^function! s:SlimeSendLines(count) abort$/;"	f
SlimeSendOp	bundle/vim-slime/plugin/slime.vim	/^function! s:SlimeSendOp(type, ...) abort$/;"	f
SlimeSendRange	bundle/vim-slime/plugin/slime.vim	/^function! s:SlimeSendRange() range abort$/;"	f
SlimrbVersion	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^function! s:SlimrbVersion()$/;"	f
SolarizedHiTrail	bundle/vim-colors-solarized/colors/solarized.vim	/^augroup SolarizedHiTrail$/;"	a
SolarizedHiTrail	bundle/vim-colors-solarized/colors/solarized.vim	/^function! s:SolarizedHiTrail()$/;"	f
SolarizedMenu	bundle/vim-colors-solarized/colors/solarized.vim	/^function! SolarizedMenu()$/;"	f
SolarizedOptions	bundle/vim-colors-solarized/colors/solarized.vim	/^    command SolarizedOptions :call s:SolarizedOptions()$/;"	c
SolarizedOptions	bundle/vim-colors-solarized/colors/solarized.vim	/^function! s:SolarizedOptions()$/;"	f
SortGetElementAt	autoload/multvals.vim	/^function! s:SortGetElementAt(index, context)$/;"	f
SortMoveElement	autoload/multvals.vim	/^function! s:SortMoveElement(from, to, context)$/;"	f
SortR	bundle/project-1.4.1/plugin/project.vim	/^    function! s:SortR(start, end)$/;"	f
SortSwapElements	autoload/multvals.vim	/^function! s:SortSwapElements(index1, index2, context)$/;"	f
Spacer	autoload/multvals.vim	/^function! s:Spacer(width)$/;"	f
Spawn	bundle/project-1.4.1/plugin/project.vim	/^    function! s:Spawn(number)$/;"	f
SpawnAll	bundle/project-1.4.1/plugin/project.vim	/^    function! s:SpawnAll(recurse, number)$/;"	f
SpecInputs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SpecInputs(str)$/;"	f
SplitPattern	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SplitPattern(str)$/;"	f
StageDiff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageNext	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageNext(count)$/;"	f
StagePatch	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StagePrevious	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePrevious(count)$/;"	f
StageReloadSeek	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2)$/;"	f
StageToggle	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
Start	bundle/vim-dispatch/plugin/dispatch.vim	/^command! -bang -nargs=* -complete=custom,dispatch#command_complete Start$/;"	c
StartColRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:StartColRx(pos)$/;"	f
StartExplorer	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>StartExplorer(curBufNum)$/;"	f
StartLineRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:StartLineRx(pos)$/;"	f
StartPosRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:StartPosRx(mode, line, col)$/;"	f
Status	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
StopExplorer	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>StopExplorer(force)$/;"	f
SuperTab	bundle/supertab/plugin/supertab.vim	/^function! SuperTab(command) " {{{$/;"	f
SuperTabAlternateCompletion	bundle/supertab/plugin/supertab.vim	/^function! SuperTabAlternateCompletion(type) " {{{$/;"	f
SuperTabChain	bundle/supertab/plugin/supertab.vim	/^function! SuperTabChain(completefunc, completekeys) " {{{$/;"	f
SuperTabCodeComplete	bundle/supertab/plugin/supertab.vim	/^function! SuperTabCodeComplete(findstart, base) " {{{$/;"	f
SuperTabHelp	bundle/supertab/plugin/supertab.vim	/^    command SuperTabHelp :call <SID>SuperTabHelp()$/;"	c
SuperTabHelp	bundle/supertab/plugin/supertab.vim	/^function! s:SuperTabHelp() " {{{$/;"	f
SuperTabLongestHighlight	bundle/supertab/plugin/supertab.vim	/^function! SuperTabLongestHighlight(dir) " {{{$/;"	f
SuperTabSetCompletionType	bundle/supertab/plugin/supertab.vim	/^function! SuperTabSetCompletionType(type) " {{{$/;"	f
SuperTabSetDefaultCompletionType	bundle/supertab/plugin/supertab.vim	/^function! SuperTabSetDefaultCompletionType(type) " {{{$/;"	f
Support	bundle/vim-ruby/spec/spec_helper.rb	/^module Support$/;"	m
SwitchWindow	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! s:SwitchWindow(action, ...)$/;"	f
SwitchWindow	bundle/vim-coffee-script/ftplugin/coffee.vim	/^function! s:SwitchWindow(buf)$/;"	f
SyntasticAddToErrors	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticAddToErrors(errors, options)$/;"	f
SyntasticAutoloclistNotifier.AutoToggle	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.AutoToggle(loclist)$/;"	f
SyntasticAutoloclistNotifier.New	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.New()$/;"	f
SyntasticAutoloclistNotifier.refresh	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.refresh(loclist)$/;"	f
SyntasticBalloonsExprNotifier	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! SyntasticBalloonsExprNotifier()$/;"	f
SyntasticBalloonsNotifier.New	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.New()$/;"	f
SyntasticBalloonsNotifier.enabled	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.enabled()$/;"	f
SyntasticBalloonsNotifier.refresh	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.refresh(loclist)$/;"	f
SyntasticBalloonsNotifier.reset	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.reset(loclist)$/;"	f
SyntasticCheck	bundle/syntastic/plugin/syntastic.vim	/^command! -nargs=? -complete=custom,s:CompleteCheckerName SyntasticCheck call s:UpdateErrors(0, <f-args>) <bar> call s:Redraw()$/;"	c
SyntasticChecker.New	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.New(args)$/;"	f
SyntasticChecker._populateHighlightRegexes	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._populateHighlightRegexes(list)$/;"	f
SyntasticChecker.getFiletype	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getFiletype()$/;"	f
SyntasticChecker.getHighlightRegexFor	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getHighlightRegexFor(error)$/;"	f
SyntasticChecker.getLocList	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocList()$/;"	f
SyntasticChecker.getName	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getName()$/;"	f
SyntasticChecker.isAvailable	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.isAvailable()$/;"	f
SyntasticCursorNotifier.New	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.New()$/;"	f
SyntasticCursorNotifier.enabled	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.enabled()$/;"	f
SyntasticCursorNotifier.refresh	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.refresh(loclist)$/;"	f
SyntasticCursorNotifier.reset	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.reset(loclist)$/;"	f
SyntasticHighlightingNotifier.New	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.New()$/;"	f
SyntasticHighlightingNotifier.enabled	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.enabled()$/;"	f
SyntasticHighlightingNotifier.refresh	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.refresh(loclist)$/;"	f
SyntasticHighlightingNotifier.reset	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.reset(loclist)$/;"	f
SyntasticInfo	bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticInfo call s:registry.echoInfoFor(s:CurrentFiletypes())$/;"	c
SyntasticJavacEditClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^command! SyntasticJavacEditClasspath call s:EditClasspath()$/;"	c
SyntasticLoclist.New	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.New(rawLoclist)$/;"	f
SyntasticLoclist.current	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.current()$/;"	f
SyntasticLoclist.errors	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.errors()$/;"	f
SyntasticLoclist.extend	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.extend(other)$/;"	f
SyntasticLoclist.filter	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.filter(filters)$/;"	f
SyntasticLoclist.filteredRaw	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.filteredRaw()$/;"	f
SyntasticLoclist.getLength	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getLength()$/;"	f
SyntasticLoclist.getName	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getName()$/;"	f
SyntasticLoclist.hasErrorsOrWarningsToDisplay	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.hasErrorsOrWarningsToDisplay()$/;"	f
SyntasticLoclist.isEmpty	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isEmpty()$/;"	f
SyntasticLoclist.messages	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.messages(buf)$/;"	f
SyntasticLoclist.quietWarnings	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.quietWarnings()$/;"	f
SyntasticLoclist.setName	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setName(name)$/;"	f
SyntasticLoclist.show	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.show()$/;"	f
SyntasticLoclist.toRaw	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.toRaw()$/;"	f
SyntasticLoclist.warnings	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.warnings()$/;"	f
SyntasticLoclistHide	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclistHide()$/;"	f
SyntasticMake	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticMake(options)$/;"	f
SyntasticMakeprgBuilder.New	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.New(exe, args, fname, post_args, tail, filetype, subchecker)$/;"	f
SyntasticMakeprgBuilder._getOpt	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function g:SyntasticMakeprgBuilder._getOpt(name)$/;"	f
SyntasticMakeprgBuilder._optExists	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder._optExists(name)$/;"	f
SyntasticMakeprgBuilder._optName	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder._optName(name)$/;"	f
SyntasticMakeprgBuilder.args	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.args()$/;"	f
SyntasticMakeprgBuilder.exe	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.exe()$/;"	f
SyntasticMakeprgBuilder.fname	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.fname()$/;"	f
SyntasticMakeprgBuilder.makeprg	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.makeprg()$/;"	f
SyntasticMakeprgBuilder.post_args	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.post_args()$/;"	f
SyntasticMakeprgBuilder.tail	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^function! g:SyntasticMakeprgBuilder.tail()$/;"	f
SyntasticModeMap.Instance	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.Instance()$/;"	f
SyntasticModeMap._initModeMapFromGlobalOpts	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._initModeMapFromGlobalOpts()$/;"	f
SyntasticModeMap._isOneFiletypeActive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._isOneFiletypeActive(filetypes)$/;"	f
SyntasticModeMap._noFiletypesArePassive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._noFiletypesArePassive(filetypes)$/;"	f
SyntasticModeMap.allowsAutoChecking	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.allowsAutoChecking(filetype)$/;"	f
SyntasticModeMap.echoMode	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.echoMode()$/;"	f
SyntasticModeMap.isPassive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.isPassive()$/;"	f
SyntasticModeMap.toggleMode	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.toggleMode()$/;"	f
SyntasticNotifiers.Instance	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.Instance()$/;"	f
SyntasticNotifiers._initNotifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers._initNotifiers()$/;"	f
SyntasticNotifiers.refresh	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.refresh(loclist)$/;"	f
SyntasticNotifiers.reset	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.reset(loclist)$/;"	f
SyntasticRefreshCursor	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticRefreshCursor()$/;"	f
SyntasticRegistry.CreateAndRegisterChecker	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.CreateAndRegisterChecker(args)$/;"	f
SyntasticRegistry.Instance	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.Instance()$/;"	f
SyntasticRegistry._allCheckersFor	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._allCheckersFor(filetype)$/;"	f
SyntasticRegistry._filterCheckersByAvailability	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByAvailability(checkers)$/;"	f
SyntasticRegistry._filterCheckersByDefaultSettings	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByDefaultSettings(checkers, filetype)$/;"	f
SyntasticRegistry._filterCheckersByName	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByName(checkers, list)$/;"	f
SyntasticRegistry._filterCheckersByUserSettings	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByUserSettings(checkers, filetype)$/;"	f
SyntasticRegistry._haveLoadedCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._haveLoadedCheckers(filetype)$/;"	f
SyntasticRegistry._loadCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._loadCheckers(filetype)$/;"	f
SyntasticRegistry._userHasFiletypeSettings	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._userHasFiletypeSettings(filetype)$/;"	f
SyntasticRegistry._validateUniqueName	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._validateUniqueName(checker) abort$/;"	f
SyntasticRegistry.availableCheckersFor	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.availableCheckersFor(ftalias)$/;"	f
SyntasticRegistry.checkable	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.checkable(ftalias)$/;"	f
SyntasticRegistry.echoInfoFor	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.echoInfoFor(ftalias_list)$/;"	f
SyntasticRegistry.getActiveCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getActiveCheckers(ftalias)$/;"	f
SyntasticRegistry.getChecker	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getChecker(ftalias, name)$/;"	f
SyntasticRegistry.registerChecker	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.registerChecker(checker) abort$/;"	f
SyntasticRegistryNormaliseFiletype	bundle/syntastic/plugin/syntastic/registry.vim	/^function! s:SyntasticRegistryNormaliseFiletype(ftalias)$/;"	f
SyntasticReset	bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticReset call s:ClearCache() | call s:notifiers.refresh(g:SyntasticLoclist.New([]))$/;"	c
SyntasticSignsNotifier.New	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.New()$/;"	f
SyntasticSignsNotifier._bufSignIds	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._bufSignIds()$/;"	f
SyntasticSignsNotifier._removeSigns	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._removeSigns(ids)$/;"	f
SyntasticSignsNotifier._setup	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._setup()$/;"	f
SyntasticSignsNotifier._signErrors	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._signErrors(loclist)$/;"	f
SyntasticSignsNotifier.enabled	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.enabled()$/;"	f
SyntasticSignsNotifier.refresh	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.refresh(loclist)$/;"	f
SyntasticStatuslineFlag	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticStatuslineFlag()$/;"	f
SyntasticToggleMode	bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticToggleMode call s:ToggleMode()$/;"	c
SyntaxCheckers_ada_gcc_GetLocList	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_GetLocList()$/;"	f
SyntaxCheckers_ada_gcc_IsAvailable	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_IsAvailable()$/;"	f
SyntaxCheckers_applescript_osacompile_GetLocList	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^function! SyntaxCheckers_applescript_osacompile_GetLocList()$/;"	f
SyntaxCheckers_applescript_osacompile_IsAvailable	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^function! SyntaxCheckers_applescript_osacompile_IsAvailable()$/;"	f
SyntaxCheckers_asciidoc_asciidoc_GetLocList	bundle/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^function! SyntaxCheckers_asciidoc_asciidoc_GetLocList()$/;"	f
SyntaxCheckers_asciidoc_asciidoc_IsAvailable	bundle/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^function! SyntaxCheckers_asciidoc_asciidoc_IsAvailable()$/;"	f
SyntaxCheckers_c_checkpatch_GetLocList	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_GetLocList()$/;"	f
SyntaxCheckers_c_checkpatch_IsAvailable	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^function SyntaxCheckers_c_checkpatch_IsAvailable()$/;"	f
SyntaxCheckers_c_gcc_GetLocList	bundle/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_GetLocList()$/;"	f
SyntaxCheckers_c_gcc_IsAvailable	bundle/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_IsAvailable()$/;"	f
SyntaxCheckers_c_make_GetLocList	bundle/syntastic/syntax_checkers/c/make.vim	/^function! SyntaxCheckers_c_make_GetLocList()$/;"	f
SyntaxCheckers_c_make_IsAvailable	bundle/syntastic/syntax_checkers/c/make.vim	/^function SyntaxCheckers_c_make_IsAvailable()$/;"	f
SyntaxCheckers_c_oclint_GetLocList	bundle/syntastic/syntax_checkers/c/oclint.vim	/^function! SyntaxCheckers_c_oclint_GetLocList()$/;"	f
SyntaxCheckers_c_oclint_IsAvailable	bundle/syntastic/syntax_checkers/c/oclint.vim	/^function! SyntaxCheckers_c_oclint_IsAvailable()$/;"	f
SyntaxCheckers_c_sparse_GetLocList	bundle/syntastic/syntax_checkers/c/sparse.vim	/^function! SyntaxCheckers_c_sparse_GetLocList()$/;"	f
SyntaxCheckers_c_sparse_IsAvailable	bundle/syntastic/syntax_checkers/c/sparse.vim	/^function! SyntaxCheckers_c_sparse_IsAvailable()$/;"	f
SyntaxCheckers_c_splint_GetLocList	bundle/syntastic/syntax_checkers/c/splint.vim	/^function! SyntaxCheckers_c_splint_GetLocList()$/;"	f
SyntaxCheckers_c_splint_IsAvailable	bundle/syntastic/syntax_checkers/c/splint.vim	/^function! SyntaxCheckers_c_splint_IsAvailable()$/;"	f
SyntaxCheckers_c_ycm_GetLocList	bundle/syntastic/syntax_checkers/c/ycm.vim	/^function! SyntaxCheckers_c_ycm_GetLocList()$/;"	f
SyntaxCheckers_c_ycm_IsAvailable	bundle/syntastic/syntax_checkers/c/ycm.vim	/^function! SyntaxCheckers_c_ycm_IsAvailable()$/;"	f
SyntaxCheckers_co_coco_GetLocList	bundle/syntastic/syntax_checkers/co/coco.vim	/^function! SyntaxCheckers_co_coco_GetLocList()$/;"	f
SyntaxCheckers_cobol_cobc_GetLocList	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_GetLocList()$/;"	f
SyntaxCheckers_cobol_cobc_IsAvailable	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_IsAvailable()$/;"	f
SyntaxCheckers_coffee_coffee_GetLocList	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_GetLocList()$/;"	f
SyntaxCheckers_coffee_coffee_IsAvailable	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_IsAvailable()$/;"	f
SyntaxCheckers_coffee_coffeelint_GetLocList	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^function! SyntaxCheckers_coffee_coffeelint_GetLocList()$/;"	f
SyntaxCheckers_coffee_coffeelint_IsAvailable	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^function! SyntaxCheckers_coffee_coffeelint_IsAvailable()$/;"	f
SyntaxCheckers_coq_coqtop_GetLocList	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^function! SyntaxCheckers_coq_coqtop_GetLocList()$/;"	f
SyntaxCheckers_coq_coqtop_IsAvailable	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^function! SyntaxCheckers_coq_coqtop_IsAvailable()$/;"	f
SyntaxCheckers_cpp_cpplint_GetLocList	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^function! SyntaxCheckers_cpp_cpplint_GetLocList()$/;"	f
SyntaxCheckers_cpp_cpplint_IsAvailable	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^function! SyntaxCheckers_cpp_cpplint_IsAvailable()$/;"	f
SyntaxCheckers_cpp_gcc_GetLocList	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_GetLocList()$/;"	f
SyntaxCheckers_cpp_gcc_IsAvailable	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_IsAvailable()$/;"	f
SyntaxCheckers_cpp_oclint_GetLocList	bundle/syntastic/syntax_checkers/cpp/oclint.vim	/^function! SyntaxCheckers_cpp_oclint_GetLocList()$/;"	f
SyntaxCheckers_cpp_oclint_IsAvailable	bundle/syntastic/syntax_checkers/cpp/oclint.vim	/^function! SyntaxCheckers_cpp_oclint_IsAvailable()$/;"	f
SyntaxCheckers_cpp_ycm_GetLocList	bundle/syntastic/syntax_checkers/cpp/ycm.vim	/^function! SyntaxCheckers_cpp_ycm_GetLocList()$/;"	f
SyntaxCheckers_cpp_ycm_IsAvailable	bundle/syntastic/syntax_checkers/cpp/ycm.vim	/^function! SyntaxCheckers_cpp_ycm_IsAvailable()$/;"	f
SyntaxCheckers_cs_mcs_GetLocList	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^function! SyntaxCheckers_cs_mcs_GetLocList()$/;"	f
SyntaxCheckers_cs_mcs_IsAvailable	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^function! SyntaxCheckers_cs_mcs_IsAvailable()$/;"	f
SyntaxCheckers_css_csslint_GetLocList	bundle/syntastic/syntax_checkers/css/csslint.vim	/^function! SyntaxCheckers_css_csslint_GetLocList()$/;"	f
SyntaxCheckers_css_csslint_IsAvailable	bundle/syntastic/syntax_checkers/css/csslint.vim	/^function! SyntaxCheckers_css_csslint_IsAvailable()$/;"	f
SyntaxCheckers_css_phpcs_GetLocList	bundle/syntastic/syntax_checkers/css/phpcs.vim	/^function! SyntaxCheckers_css_phpcs_GetLocList()$/;"	f
SyntaxCheckers_css_phpcs_IsAvailable	bundle/syntastic/syntax_checkers/css/phpcs.vim	/^function! SyntaxCheckers_css_phpcs_IsAvailable()$/;"	f
SyntaxCheckers_css_prettycss_GetHighlightRegex	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_css_prettycss_GetLocList	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetLocList()$/;"	f
SyntaxCheckers_css_prettycss_IsAvailable	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_IsAvailable()$/;"	f
SyntaxCheckers_cucumber_cucumber_GetLocList	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^function! SyntaxCheckers_cucumber_cucumber_GetLocList()$/;"	f
SyntaxCheckers_cucumber_cucumber_IsAvailable	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^function! SyntaxCheckers_cucumber_cucumber_IsAvailable()$/;"	f
SyntaxCheckers_cuda_nvcc_GetLocList	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^function! SyntaxCheckers_cuda_nvcc_GetLocList()$/;"	f
SyntaxCheckers_cuda_nvcc_IsAvailable	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^function! SyntaxCheckers_cuda_nvcc_IsAvailable()$/;"	f
SyntaxCheckers_d_dmd_GetLocList	bundle/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_GetLocList()$/;"	f
SyntaxCheckers_d_dmd_IsAvailable	bundle/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_IsAvailable()$/;"	f
SyntaxCheckers_dart_dart_analyzer_GetHighlightRegex	bundle/syntastic/syntax_checkers/dart/dart_analyzer.vim	/^function! SyntaxCheckers_dart_dart_analyzer_GetHighlightRegex(error)$/;"	f
SyntaxCheckers_dart_dart_analyzer_GetLocList	bundle/syntastic/syntax_checkers/dart/dart_analyzer.vim	/^function! SyntaxCheckers_dart_dart_analyzer_GetLocList()$/;"	f
SyntaxCheckers_dart_dart_analyzer_IsAvailable	bundle/syntastic/syntax_checkers/dart/dart_analyzer.vim	/^function! SyntaxCheckers_dart_dart_analyzer_IsAvailable()$/;"	f
SyntaxCheckers_docbk_xmllint_GetLocList	bundle/syntastic/syntax_checkers/docbk/xmllint.vim	/^function! SyntaxCheckers_docbk_xmllint_GetLocList()$/;"	f
SyntaxCheckers_docbk_xmllint_IsAvailable	bundle/syntastic/syntax_checkers/docbk/xmllint.vim	/^function! SyntaxCheckers_docbk_xmllint_IsAvailable()$/;"	f
SyntaxCheckers_dustjs_swiffer_GetLocList	bundle/syntastic/syntax_checkers/dustjs/swiffer.vim	/^function! SyntaxCheckers_dustjs_swiffer_GetLocList()$/;"	f
SyntaxCheckers_dustjs_swiffer_IsAvailable	bundle/syntastic/syntax_checkers/dustjs/swiffer.vim	/^function! SyntaxCheckers_dustjs_swiffer_IsAvailable()$/;"	f
SyntaxCheckers_elixir_elixir_GetLocList	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_GetLocList()$/;"	f
SyntaxCheckers_elixir_elixir_IsAvailable	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_IsAvailable()$/;"	f
SyntaxCheckers_erlang_escript_GetLocList	bundle/syntastic/syntax_checkers/erlang/erlang.vim	/^function! SyntaxCheckers_erlang_escript_GetLocList()$/;"	f
SyntaxCheckers_erlang_escript_IsAvailable	bundle/syntastic/syntax_checkers/erlang/erlang.vim	/^function! SyntaxCheckers_erlang_escript_IsAvailable()$/;"	f
SyntaxCheckers_eruby_ruby_GetLocList	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_GetLocList()$/;"	f
SyntaxCheckers_eruby_ruby_IsAvailable	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_IsAvailable()$/;"	f
SyntaxCheckers_fortran_gfortran_GetLocList	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_GetLocList()$/;"	f
SyntaxCheckers_fortran_gfortran_IsAvailable	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_IsAvailable()$/;"	f
SyntaxCheckers_go_go_GetLocList	bundle/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_GetLocList()$/;"	f
SyntaxCheckers_go_go_IsAvailable	bundle/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_IsAvailable()$/;"	f
SyntaxCheckers_go_gofmt_GetLocList	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^function! SyntaxCheckers_go_gofmt_GetLocList()$/;"	f
SyntaxCheckers_go_gofmt_IsAvailable	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^function! SyntaxCheckers_go_gofmt_IsAvailable()$/;"	f
SyntaxCheckers_go_golint_GetLocList	bundle/syntastic/syntax_checkers/go/golint.vim	/^function! SyntaxCheckers_go_golint_GetLocList()$/;"	f
SyntaxCheckers_go_golint_IsAvailable	bundle/syntastic/syntax_checkers/go/golint.vim	/^function! SyntaxCheckers_go_golint_IsAvailable()$/;"	f
SyntaxCheckers_go_govet_GetLocList	bundle/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_GetLocList()$/;"	f
SyntaxCheckers_go_govet_IsAvailable	bundle/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_IsAvailable()$/;"	f
SyntaxCheckers_haml_haml_GetLocList	bundle/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_GetLocList()$/;"	f
SyntaxCheckers_haml_haml_IsAvailable	bundle/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_IsAvailable()$/;"	f
SyntaxCheckers_haskell_ghc_mod_GetLocList	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_GetLocList()$/;"	f
SyntaxCheckers_haskell_ghc_mod_IsAvailable	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_IsAvailable()$/;"	f
SyntaxCheckers_haskell_hdevtools_GetLocList	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^function! SyntaxCheckers_haskell_hdevtools_GetLocList()$/;"	f
SyntaxCheckers_haskell_hdevtools_IsAvailable	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^function! SyntaxCheckers_haskell_hdevtools_IsAvailable()$/;"	f
SyntaxCheckers_haskell_hlint_GetLocList	bundle/syntastic/syntax_checkers/haskell/hlint.vim	/^function! SyntaxCheckers_haskell_hlint_GetLocList()$/;"	f
SyntaxCheckers_haskell_hlint_IsAvailable	bundle/syntastic/syntax_checkers/haskell/hlint.vim	/^function! SyntaxCheckers_haskell_hlint_IsAvailable()$/;"	f
SyntaxCheckers_haxe_haxe_GetLocList	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^function! SyntaxCheckers_haxe_haxe_GetLocList()$/;"	f
SyntaxCheckers_haxe_haxe_IsAvailable	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^function! SyntaxCheckers_haxe_haxe_IsAvailable()$/;"	f
SyntaxCheckers_hss_hss_GetLocList	bundle/syntastic/syntax_checkers/hss/hss.vim	/^function! SyntaxCheckers_hss_hss_GetLocList()$/;"	f
SyntaxCheckers_hss_hss_IsAvailable	bundle/syntastic/syntax_checkers/hss/hss.vim	/^function! SyntaxCheckers_hss_hss_IsAvailable()$/;"	f
SyntaxCheckers_html_tidy_GetLocList	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! SyntaxCheckers_html_tidy_GetLocList()$/;"	f
SyntaxCheckers_html_tidy_IsAvailable	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! SyntaxCheckers_html_tidy_IsAvailable()$/;"	f
SyntaxCheckers_html_validator_GetLocList	bundle/syntastic/syntax_checkers/html/validator.vim	/^function! SyntaxCheckers_html_validator_GetLocList()$/;"	f
SyntaxCheckers_html_validator_IsAvailable	bundle/syntastic/syntax_checkers/html/validator.vim	/^function! SyntaxCheckers_html_validator_IsAvailable()$/;"	f
SyntaxCheckers_html_validator_Preprocess	bundle/syntastic/syntax_checkers/html/validator.vim	/^function! SyntaxCheckers_html_validator_Preprocess(errors)$/;"	f
SyntaxCheckers_html_w3_GetLocList	bundle/syntastic/syntax_checkers/html/w3.vim	/^function! SyntaxCheckers_html_w3_GetLocList()$/;"	f
SyntaxCheckers_html_w3_IsAvailable	bundle/syntastic/syntax_checkers/html/w3.vim	/^function! SyntaxCheckers_html_w3_IsAvailable()$/;"	f
SyntaxCheckers_java_checkstyle_GetLocList	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_GetLocList()$/;"	f
SyntaxCheckers_java_checkstyle_IsAvailable	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_IsAvailable()$/;"	f
SyntaxCheckers_java_checkstyle_Preprocess	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_Preprocess(errors)$/;"	f
SyntaxCheckers_java_javac_GetLocList	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_GetLocList()$/;"	f
SyntaxCheckers_java_javac_IsAvailable	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_IsAvailable()$/;"	f
SyntaxCheckers_javascript_closurecompiler_GetLocList	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_GetLocList()$/;"	f
SyntaxCheckers_javascript_closurecompiler_IsAvailable	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_IsAvailable()$/;"	f
SyntaxCheckers_javascript_gjslint_GetLocList	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^function! SyntaxCheckers_javascript_gjslint_GetLocList()$/;"	f
SyntaxCheckers_javascript_gjslint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^function! SyntaxCheckers_javascript_gjslint_IsAvailable()$/;"	f
SyntaxCheckers_javascript_jshint_GetLocList	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_GetLocList()$/;"	f
SyntaxCheckers_javascript_jshint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_IsAvailable()$/;"	f
SyntaxCheckers_javascript_jsl_GetLocList	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^function! SyntaxCheckers_javascript_jsl_GetLocList()$/;"	f
SyntaxCheckers_javascript_jsl_IsAvailable	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^function! SyntaxCheckers_javascript_jsl_IsAvailable()$/;"	f
SyntaxCheckers_javascript_jslint_GetLocList	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetLocList()$/;"	f
SyntaxCheckers_javascript_jslint_HighlightTerm	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_HighlightTerm(error)$/;"	f
SyntaxCheckers_javascript_jslint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_IsAvailable()$/;"	f
SyntaxCheckers_json_jsonlint_GetLocList	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^function! SyntaxCheckers_json_jsonlint_GetLocList()$/;"	f
SyntaxCheckers_json_jsonlint_IsAvailable	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^function! SyntaxCheckers_json_jsonlint_IsAvailable()$/;"	f
SyntaxCheckers_json_jsonval_GetLocList	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^function! SyntaxCheckers_json_jsonval_GetLocList()$/;"	f
SyntaxCheckers_json_jsonval_IsAvailable	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^function! SyntaxCheckers_json_jsonval_IsAvailable()$/;"	f
SyntaxCheckers_less_lessc_GetLocList	bundle/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_GetLocList()$/;"	f
SyntaxCheckers_less_lessc_IsAvailable	bundle/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_IsAvailable()$/;"	f
SyntaxCheckers_lisp_clisp_GetLocList	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^function! SyntaxCheckers_lisp_clisp_GetLocList()$/;"	f
SyntaxCheckers_lisp_clisp_IsAvailable	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^function! SyntaxCheckers_lisp_clisp_IsAvailable()$/;"	f
SyntaxCheckers_llvm_llvm_GetLocList	bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^function! SyntaxCheckers_llvm_llvm_GetLocList()$/;"	f
SyntaxCheckers_llvm_llvm_IsAvailable	bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^function! SyntaxCheckers_llvm_llvm_IsAvailable()$/;"	f
SyntaxCheckers_lua_luac_GetHighlightRegex	bundle/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetHighlightRegex(pos)$/;"	f
SyntaxCheckers_lua_luac_GetLocList	bundle/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetLocList()$/;"	f
SyntaxCheckers_lua_luac_IsAvailable	bundle/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_IsAvailable()$/;"	f
SyntaxCheckers_matlab_mlint_GetLocList	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^function! SyntaxCheckers_matlab_mlint_GetLocList()$/;"	f
SyntaxCheckers_matlab_mlint_IsAvailable	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^function! SyntaxCheckers_matlab_mlint_IsAvailable()$/;"	f
SyntaxCheckers_nasm_nasm_GetLocList	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^function! SyntaxCheckers_nasm_nasm_GetLocList()$/;"	f
SyntaxCheckers_nasm_nasm_IsAvailable	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^function! SyntaxCheckers_nasm_nasm_IsAvailable()$/;"	f
SyntaxCheckers_nroff_mandoc_GetLocList	bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^function! SyntaxCheckers_nroff_mandoc_GetLocList()$/;"	f
SyntaxCheckers_nroff_mandoc_IsAvailable	bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^function! SyntaxCheckers_nroff_mandoc_IsAvailable()$/;"	f
SyntaxCheckers_objc_gcc_GetLocList	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_GetLocList()$/;"	f
SyntaxCheckers_objc_gcc_IsAvailable	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_IsAvailable()$/;"	f
SyntaxCheckers_objc_oclint_GetLocList	bundle/syntastic/syntax_checkers/objc/oclint.vim	/^function! SyntaxCheckers_objc_oclint_GetLocList()$/;"	f
SyntaxCheckers_objc_oclint_IsAvailable	bundle/syntastic/syntax_checkers/objc/oclint.vim	/^function! SyntaxCheckers_objc_oclint_IsAvailable()$/;"	f
SyntaxCheckers_objc_ycm_GetLocList	bundle/syntastic/syntax_checkers/objc/ycm.vim	/^function! SyntaxCheckers_objc_ycm_GetLocList()$/;"	f
SyntaxCheckers_objc_ycm_IsAvailable	bundle/syntastic/syntax_checkers/objc/ycm.vim	/^function! SyntaxCheckers_objc_ycm_IsAvailable()$/;"	f
SyntaxCheckers_objcpp_gcc_GetLocList	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_GetLocList()$/;"	f
SyntaxCheckers_objcpp_gcc_IsAvailable	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_IsAvailable()$/;"	f
SyntaxCheckers_objcpp_oclint_GetLocList	bundle/syntastic/syntax_checkers/objcpp/oclint.vim	/^function! SyntaxCheckers_objcpp_oclint_GetLocList()$/;"	f
SyntaxCheckers_objcpp_oclint_IsAvailable	bundle/syntastic/syntax_checkers/objcpp/oclint.vim	/^function! SyntaxCheckers_objcpp_oclint_IsAvailable()$/;"	f
SyntaxCheckers_objcpp_ycm_GetLocList	bundle/syntastic/syntax_checkers/objcpp/ycm.vim	/^function! SyntaxCheckers_objcpp_ycm_GetLocList()$/;"	f
SyntaxCheckers_objcpp_ycm_IsAvailable	bundle/syntastic/syntax_checkers/objcpp/ycm.vim	/^function! SyntaxCheckers_objcpp_ycm_IsAvailable()$/;"	f
SyntaxCheckers_ocaml_camlp4o_GetLocList	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_GetLocList()$/;"	f
SyntaxCheckers_ocaml_camlp4o_IsAvailable	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_IsAvailable()$/;"	f
SyntaxCheckers_perl_perl_GetLocList	bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_GetLocList()$/;"	f
SyntaxCheckers_perl_perl_IsAvailable	bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_IsAvailable()$/;"	f
SyntaxCheckers_perl_perl_Preprocess	bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_Preprocess(errors)$/;"	f
SyntaxCheckers_perl_perlcritic_GetLocList	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^function! SyntaxCheckers_perl_perlcritic_GetLocList()$/;"	f
SyntaxCheckers_perl_perlcritic_IsAvailable	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^function! SyntaxCheckers_perl_perlcritic_IsAvailable()$/;"	f
SyntaxCheckers_perl_podchecker_GetLocList	bundle/syntastic/syntax_checkers/perl/podchecker.vim	/^function! SyntaxCheckers_perl_podchecker_GetLocList()$/;"	f
SyntaxCheckers_perl_podchecker_IsAvailable	bundle/syntastic/syntax_checkers/perl/podchecker.vim	/^function! SyntaxCheckers_perl_podchecker_IsAvailable()$/;"	f
SyntaxCheckers_php_php_GetHighlightRegex	bundle/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_php_GetLocList	bundle/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetLocList()$/;"	f
SyntaxCheckers_php_php_IsAvailable	bundle/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_IsAvailable()$/;"	f
SyntaxCheckers_php_phpcs_GetLocList	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^function! SyntaxCheckers_php_phpcs_GetLocList()$/;"	f
SyntaxCheckers_php_phpcs_IsAvailable	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^function! SyntaxCheckers_php_phpcs_IsAvailable()$/;"	f
SyntaxCheckers_php_phpmd_GetHighlightRegex	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phpmd_GetLocList	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetLocList()$/;"	f
SyntaxCheckers_php_phpmd_IsAvailable	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_IsAvailable()$/;"	f
SyntaxCheckers_pod_podchecker_GetLocList	bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^function! SyntaxCheckers_pod_podchecker_GetLocList()$/;"	f
SyntaxCheckers_pod_podchecker_IsAvailable	bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^function! SyntaxCheckers_pod_podchecker_IsAvailable()$/;"	f
SyntaxCheckers_puppet_puppet_GetLocList	bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^function! SyntaxCheckers_puppet_puppet_GetLocList()$/;"	f
SyntaxCheckers_puppet_puppet_IsAvailable	bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^function! SyntaxCheckers_puppet_puppet_IsAvailable()$/;"	f
SyntaxCheckers_puppet_puppetlint_GetLocList	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_GetLocList()$/;"	f
SyntaxCheckers_puppet_puppetlint_IsAvailable	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_IsAvailable()$/;"	f
SyntaxCheckers_python_flake8_GetHighlightRegex	bundle/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_python_flake8_GetLocList	bundle/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetLocList()$/;"	f
SyntaxCheckers_python_flake8_IsAvailable	bundle/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_IsAvailable()$/;"	f
SyntaxCheckers_python_pep257_GetLocList	bundle/syntastic/syntax_checkers/python/pep257.vim	/^function! SyntaxCheckers_python_pep257_GetLocList()$/;"	f
SyntaxCheckers_python_pep257_IsAvailable	bundle/syntastic/syntax_checkers/python/pep257.vim	/^function! SyntaxCheckers_python_pep257_IsAvailable()$/;"	f
SyntaxCheckers_python_pep257_Preprocess	bundle/syntastic/syntax_checkers/python/pep257.vim	/^function! SyntaxCheckers_python_pep257_Preprocess(errors)$/;"	f
SyntaxCheckers_python_pep8_GetLocList	bundle/syntastic/syntax_checkers/python/pep8.vim	/^function! SyntaxCheckers_python_pep8_GetLocList()$/;"	f
SyntaxCheckers_python_pep8_IsAvailable	bundle/syntastic/syntax_checkers/python/pep8.vim	/^function! SyntaxCheckers_python_pep8_IsAvailable()$/;"	f
SyntaxCheckers_python_py3kwarn_GetLocList	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^function! SyntaxCheckers_python_py3kwarn_GetLocList()$/;"	f
SyntaxCheckers_python_py3kwarn_IsAvailable	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^function! SyntaxCheckers_python_py3kwarn_IsAvailable()$/;"	f
SyntaxCheckers_python_pyflakes_GetHighlightRegex	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_python_pyflakes_GetLocList	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetLocList()$/;"	f
SyntaxCheckers_python_pyflakes_IsAvailable	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_IsAvailable()$/;"	f
SyntaxCheckers_python_pylama_GetHighlightRegex	bundle/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_python_pylama_GetLocList	bundle/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetLocList()$/;"	f
SyntaxCheckers_python_pylama_IsAvailable	bundle/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_IsAvailable()$/;"	f
SyntaxCheckers_python_pylint_GetLocList	bundle/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_GetLocList()$/;"	f
SyntaxCheckers_python_pylint_IsAvailable	bundle/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_IsAvailable()$/;"	f
SyntaxCheckers_python_python_GetLocList	bundle/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_GetLocList()$/;"	f
SyntaxCheckers_python_python_IsAvailable	bundle/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_IsAvailable()$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_GetLocList	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_GetLocList()$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_IsAvailable	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_IsAvailable()$/;"	f
SyntaxCheckers_ruby_jruby_GetLocList	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^function! SyntaxCheckers_ruby_jruby_GetLocList()$/;"	f
SyntaxCheckers_ruby_jruby_IsAvailable	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^function! SyntaxCheckers_ruby_jruby_IsAvailable()$/;"	f
SyntaxCheckers_ruby_macruby_GetLocList	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^function! SyntaxCheckers_ruby_macruby_GetLocList()$/;"	f
SyntaxCheckers_ruby_macruby_IsAvailable	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^function! SyntaxCheckers_ruby_macruby_IsAvailable()$/;"	f
SyntaxCheckers_ruby_mri_GetHighlightRegex	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_ruby_mri_GetLocList	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetLocList()$/;"	f
SyntaxCheckers_ruby_mri_IsAvailable	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_IsAvailable()$/;"	f
SyntaxCheckers_ruby_rubocop_GetLocList	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_GetLocList()$/;"	f
SyntaxCheckers_ruby_rubocop_IsAvailable	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_IsAvailable()$/;"	f
SyntaxCheckers_rust_rustc_GetLocList	bundle/syntastic/syntax_checkers/rust/rustc.vim	/^function! SyntaxCheckers_rust_rustc_GetLocList()$/;"	f
SyntaxCheckers_rust_rustc_IsAvailable	bundle/syntastic/syntax_checkers/rust/rustc.vim	/^function! SyntaxCheckers_rust_rustc_IsAvailable()$/;"	f
SyntaxCheckers_sass_sass_GetLocList	bundle/syntastic/syntax_checkers/sass/sass.vim	/^function! SyntaxCheckers_sass_sass_GetLocList()$/;"	f
SyntaxCheckers_sass_sass_IsAvailable	bundle/syntastic/syntax_checkers/sass/sass.vim	/^function! SyntaxCheckers_sass_sass_IsAvailable()$/;"	f
SyntaxCheckers_scala_fsc_GetLocList	bundle/syntastic/syntax_checkers/scala/fsc.vim	/^function! SyntaxCheckers_scala_fsc_GetLocList()$/;"	f
SyntaxCheckers_scala_fsc_IsAvailable	bundle/syntastic/syntax_checkers/scala/fsc.vim	/^function! SyntaxCheckers_scala_fsc_IsAvailable()$/;"	f
SyntaxCheckers_scala_scalac_GetLocList	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^function! SyntaxCheckers_scala_scalac_GetLocList()$/;"	f
SyntaxCheckers_scala_scalac_IsAvailable	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^function! SyntaxCheckers_scala_scalac_IsAvailable()$/;"	f
SyntaxCheckers_scss_sass_GetLocList	bundle/syntastic/syntax_checkers/scss/sass.vim	/^function! SyntaxCheckers_scss_sass_GetLocList()$/;"	f
SyntaxCheckers_scss_sass_IsAvailable	bundle/syntastic/syntax_checkers/scss/sass.vim	/^function! SyntaxCheckers_scss_sass_IsAvailable()$/;"	f
SyntaxCheckers_sh_checkbashisms_GetLocList	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^function! SyntaxCheckers_sh_checkbashisms_GetLocList()$/;"	f
SyntaxCheckers_sh_checkbashisms_IsAvailable	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^function! SyntaxCheckers_sh_checkbashisms_IsAvailable()$/;"	f
SyntaxCheckers_sh_sh_GetLocList	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_GetLocList()$/;"	f
SyntaxCheckers_sh_sh_IsAvailable	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_IsAvailable()$/;"	f
SyntaxCheckers_slim_slimrb_GetLocList	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^function! SyntaxCheckers_slim_slimrb_GetLocList()$/;"	f
SyntaxCheckers_slim_slimrb_IsAvailable	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^function! SyntaxCheckers_slim_slimrb_IsAvailable()$/;"	f
SyntaxCheckers_tcl_nagelfar_GetLocList	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^function! SyntaxCheckers_tcl_nagelfar_GetLocList()$/;"	f
SyntaxCheckers_tcl_nagelfar_IsAvailable	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^function! SyntaxCheckers_tcl_nagelfar_IsAvailable()$/;"	f
SyntaxCheckers_tex_chktex_GetLocList	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^function! SyntaxCheckers_tex_chktex_GetLocList()$/;"	f
SyntaxCheckers_tex_chktex_IsAvailable	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^function! SyntaxCheckers_tex_chktex_IsAvailable()$/;"	f
SyntaxCheckers_tex_lacheck_GetLocList	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^function! SyntaxCheckers_tex_lacheck_GetLocList()$/;"	f
SyntaxCheckers_tex_lacheck_IsAvailable	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^function! SyntaxCheckers_tex_lacheck_IsAvailable()$/;"	f
SyntaxCheckers_text_atdtool_GetHighlightRegex	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_text_atdtool_GetLocList	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetLocList()$/;"	f
SyntaxCheckers_text_atdtool_IsAvailable	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_IsAvailable()$/;"	f
SyntaxCheckers_twig_twiglint_GetHighlightRegex	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_twig_twiglint_GetLocList	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_GetLocList()$/;"	f
SyntaxCheckers_twig_twiglint_IsAvailable	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_IsAvailable()$/;"	f
SyntaxCheckers_typescript_tsc_GetLocList	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^function! SyntaxCheckers_typescript_tsc_GetLocList()$/;"	f
SyntaxCheckers_typescript_tsc_IsAvailable	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^function! SyntaxCheckers_typescript_tsc_IsAvailable()$/;"	f
SyntaxCheckers_vala_valac_GetHighlightRegex	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetHighlightRegex(pos)$/;"	f
SyntaxCheckers_vala_valac_GetLocList	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetLocList()$/;"	f
SyntaxCheckers_vala_valac_IsAvailable	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_IsAvailable()$/;"	f
SyntaxCheckers_verilog_verilator_GetLocList	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_GetLocList()$/;"	f
SyntaxCheckers_verilog_verilator_IsAvailable	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_IsAvailable()$/;"	f
SyntaxCheckers_vhdl_ghdl_GetLocList	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^function! SyntaxCheckers_vhdl_ghdl_GetLocList()$/;"	f
SyntaxCheckers_vhdl_ghdl_IsAvailable	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^function! SyntaxCheckers_vhdl_ghdl_IsAvailable()$/;"	f
SyntaxCheckers_xhtml_tidy_GetLocList	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! SyntaxCheckers_xhtml_tidy_GetLocList()$/;"	f
SyntaxCheckers_xhtml_tidy_IsAvailable	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! SyntaxCheckers_xhtml_tidy_IsAvailable()$/;"	f
SyntaxCheckers_xml_xmllint_GetLocList	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^function! SyntaxCheckers_xml_xmllint_GetLocList()$/;"	f
SyntaxCheckers_xml_xmllint_IsAvailable	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^function! SyntaxCheckers_xml_xmllint_IsAvailable()$/;"	f
SyntaxCheckers_xslt_xmllint_GetLocList	bundle/syntastic/syntax_checkers/xslt/xmllint.vim	/^function! SyntaxCheckers_xslt_xmllint_GetLocList()$/;"	f
SyntaxCheckers_xslt_xmllint_IsAvailable	bundle/syntastic/syntax_checkers/xslt/xmllint.vim	/^function! SyntaxCheckers_xslt_xmllint_IsAvailable()$/;"	f
SyntaxCheckers_yaml_jsyaml_GetLocList	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^function! SyntaxCheckers_yaml_jsyaml_GetLocList()$/;"	f
SyntaxCheckers_yaml_jsyaml_IsAvailable	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^function! SyntaxCheckers_yaml_jsyaml_IsAvailable()$/;"	f
SyntaxCheckers_z80_z80syntaxchecker_GetLocList	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^function! SyntaxCheckers_z80_z80syntaxchecker_GetLocList()$/;"	f
SyntaxCheckers_z80_z80syntaxchecker_IsAvailable	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^function! SyntaxCheckers_z80_z80syntaxchecker_IsAvailable()$/;"	f
SyntaxCheckers_zpt_zptlint_GetLocList	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^function! SyntaxCheckers_zpt_zptlint_GetLocList()$/;"	f
SyntaxCheckers_zpt_zptlint_IsAvailable	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^function! SyntaxCheckers_zpt_zptlint_IsAvailable()$/;"	f
SyntaxCheckers_zsh_zsh_GetLocList	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^function! SyntaxCheckers_zsh_zsh_GetLocList()$/;"	f
SyntaxCheckers_zsh_zsh_IsAvailable	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^function! SyntaxCheckers_zsh_zsh_IsAvailable()$/;"	f
SyntaxName	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:SyntaxName(lnum, col)$/;"	f
TAR	bundle/html5.vim/Makefile	/^TAR=tar czvf$/;"	m
TComment	bundle/tcomment_vim/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TComment$/;"	c
TCommentAs	bundle/tcomment_vim/plugin/tcomment.vim	/^command! -bang -complete=customlist,tcomment#Complete -range -nargs=+ TCommentAs $/;"	c
TCommentBlock	bundle/tcomment_vim/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentBlock$/;"	c
TCommentInline	bundle/tcomment_vim/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentInline$/;"	c
TCommentMaybeInline	bundle/tcomment_vim/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentMaybeInline$/;"	c
TCommentRight	bundle/tcomment_vim/plugin/tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentRight$/;"	c
TMiniBufExplorer	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  command! TMiniBufExplorer echoe 'TMiniBufExplorer is depreciated, please use MBEToggle instead.'$/;"	c
TRUE	bundle/the_silver_searcher/src/util.h	/^#define TRUE /;"	d
TabEnterHandler	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>TabEnterHandler()$/;"	f
TabEnterHandler	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:TabEnterHandler()$/;"	f
TabLeaveHandler	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:TabLeaveHandler()$/;"	f
TagList_IsValid	bundle/taglist_46/plugin/taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	bundle/taglist_46/plugin/taglist.vim	/^function! TagList_Start()$/;"	f
TagList_WrapUp	bundle/taglist_46/plugin/taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_title	bundle/taglist_46/plugin/taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
TagPopupList	autoload/omni/cpp/complete.vim	/^function! s:TagPopupList(szTypeName, szBase)$/;"	f
Tags	bundle/vim-rake/plugin/rake.vim	/^function! s:Tags(args)$/;"	f
TagsGenerate	bundle/vim-tags/plugin/tags.vim	/^command! -nargs=0 TagsGenerate :call s:generate_tags(1)$/;"	c
TargetDirectory	bundle/vim-ruby/bin/vim-ruby-install.rb	/^class TargetDirectory$/;"	c
TargetDirectory	bundle/vim-ruby/bin/vim-ruby-install.rb	/^class TargetDirectory::Finder$/;"	c
TestSuperTabCodeComplete	bundle/supertab/plugin/supertab.vim	/^function! TestSuperTabCodeComplete(findstart, base) " {{{$/;"	f
TidyEncOptByFenc	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:TidyEncOptByFenc()$/;"	f
TidyEncOptByFenc	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:TidyEncOptByFenc()$/;"	f
Time	bundle/vim-scriptease/plugin/scriptease.vim	/^command! -nargs=? -complete=command Time :exe s:time(<q-args>)$/;"	c
Tlist	bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	bundle/taglist_46/plugin/taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	bundle/taglist_46/plugin/taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	bundle/taglist_46/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Add_Files	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files_Recursive	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Auto_Highlight_Tag	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	bundle/taglist_46/plugin/taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Buffer_Removed	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Change_Sort	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Close_On_Select	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Create_Folds_For_File	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Create_Folds_For_File(fidx)$/;"	f
Tlist_Ctags_Cmd	bundle/taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	bundle/taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	bundle/taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	bundle/taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	bundle/taglist_46/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Debug_Disable	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Enable	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Show	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Detect_Filetype	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
Tlist_Discard_FileInfo	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Prototype	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exe_Cmd_No_Acmds	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exit_OnlyWindow	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Extract_Tag_Scope	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_Extract_Tagtype	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_FileType_Init	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Nearest_Tag_Idx	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_GainFocus_On_ToggleOpen	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Buffer_Filetype	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_File_Index	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_Filenames	bundle/taglist_46/plugin/taglist.vim	/^function! Tlist_Get_Filenames()$/;"	f
Tlist_Get_Tag_Linenum	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	bundle/taglist_46/plugin/taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_Scope	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Scope(fidx, tidx)$/;"	f
Tlist_Get_Tag_SearchPat	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Get_Tagname_By_Line	bundle/taglist_46/plugin/taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	bundle/taglist_46/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	bundle/taglist_46/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Init_File	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Log_Msg	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Max_Submenu_Items	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Menu_Add_Base_Menu	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_File_Refresh	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Init	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Jump_To_Tag	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Refresh	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Remove_File	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Update_File	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Parse_Tagline	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Post_Close_Cleanup	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_Dir	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_File	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_File_Always	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Process_Filelist	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Refresh	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh_Folds	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
Tlist_Remove_File	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Session_Load	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	bundle/taglist_46/plugin/taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Skip_File	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Sort_Type	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_Current_File	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_File	bundle/taglist_46/plugin/taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_Remove_List	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_Use_Horiz_Window	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_User_Removed_File	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_Vim_Session_Load	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Warning_Msg	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_WinHeight	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	bundle/taglist_46/plugin/taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
Tlist_Window_Check_Auto_Open	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Width	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Close	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Create	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Display_Help	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Exit_Only_Window	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_Tag_Index	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Goto_Window	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Highlight_Line	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Tag	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Init	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Jump_To_Tag	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Mark_File_Window	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Move_To_File	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Open	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open_File	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File_Fold	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Refresh	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh_File	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Remove_File_From_Display	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Show_Info	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Toggle	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle_Help_Text	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Update_File	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_Line_Offsets	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Zoom	bundle/taglist_46/plugin/taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
TmuxConfig	bundle/vim-slime/plugin/slime.vim	/^function! s:TmuxConfig() abort$/;"	f
TmuxPaneNames	bundle/vim-slime/plugin/slime.vim	/^function! s:TmuxPaneNames(A,L,P)$/;"	f
TmuxSend	bundle/vim-slime/plugin/slime.vim	/^function! s:TmuxSend(config, text)$/;"	f
TogBG	bundle/vim-colors-solarized/autoload/togglebg.vim	/^function! s:TogBG()$/;"	f
ToggleBG	bundle/vim-colors-solarized/autoload/togglebg.vim	/^    command ToggleBG :call s:TogBG()$/;"	c
ToggleBackground	bundle/vim-colors-solarized/autoload/togglebg.vim	/^function! ToggleBackground()$/;"	f
ToggleByFname	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleByFname()$/;"	f
ToggleExplorer	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>ToggleExplorer(tabs,force)$/;"	f
ToggleFocus	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleFocus()$/;"	f
ToggleKeyLoop	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleKeyLoop()$/;"	f
ToggleMRU	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>ToggleMRU()$/;"	f
ToggleMRURelative	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleMRURelative()$/;"	f
ToggleMode	bundle/syntastic/plugin/syntastic.vim	/^function! s:ToggleMode()$/;"	f
ToggleRegex	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleRegex()$/;"	f
ToggleType	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleType(dir)$/;"	f
TokensToString	autoload/omni/cpp/items.vim	/^function! s:TokensToString(tokens)$/;"	f
ToolBar.togglebg	bundle/vim-colors-solarized/autoload/togglebg.vim	/^inoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>a$/;"	m
ToolBar.togglebg	bundle/vim-colors-solarized/autoload/togglebg.vim	/^nnoremenu <script> ToolBar.togglebg <SID>TogBG$/;"	m
ToolBar.togglebg	bundle/vim-colors-solarized/autoload/togglebg.vim	/^vnoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>gv$/;"	m
Transform	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:Transform(algorithm,type)$/;"	f
TransformOpfunc	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:TransformOpfunc(type)$/;"	f
TransformSetup	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:TransformSetup(algorithm)$/;"	f
TreeDirNode.AbsoluteTreeRoot	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path)$/;"	f
TreeDirNode._initChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode._openRecursively2	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.activate	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.findNode	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getVisibleChildCount	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.open	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.removeChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path)$/;"	f
TreeDirNode.sortChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetRootLineNum	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootLineNum()$/;"	f
TreeFileNode.GetSelected	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path)$/;"	f
TreeFileNode._renderToString	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText, vertMap, isLastChild)$/;"	f
TreeFileNode.activate	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getLineNum	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getLineNum()$/;"	f
TreeFileNode.isRoot	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.makeRoot	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.makeRoot()$/;"	f
TreeFileNode.open	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openInNewTab	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.rename	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TriggerSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! TriggerSnippet()$/;"	f
UTHASH_H	bundle/the_silver_searcher/src/uthash.h	/^#define UTHASH_H /;"	d
UTHASH_VERSION	bundle/the_silver_searcher/src/uthash.h	/^#define UTHASH_VERSION /;"	d
UTIL_H	bundle/the_silver_searcher/src/util.h	/^#define UTIL_H$/;"	d
UT_hash_bucket	bundle/the_silver_searcher/src/uthash.h	/^typedef struct UT_hash_bucket {$/;"	s
UT_hash_bucket	bundle/the_silver_searcher/src/uthash.h	/^} UT_hash_bucket;$/;"	t	typeref:struct:UT_hash_bucket
UT_hash_handle	bundle/the_silver_searcher/src/uthash.h	/^typedef struct UT_hash_handle {$/;"	s
UT_hash_handle	bundle/the_silver_searcher/src/uthash.h	/^} UT_hash_handle;$/;"	t	typeref:struct:UT_hash_handle
UT_hash_table	bundle/the_silver_searcher/src/uthash.h	/^typedef struct UT_hash_table {$/;"	s
UT_hash_table	bundle/the_silver_searcher/src/uthash.h	/^} UT_hash_table;$/;"	t	typeref:struct:UT_hash_table
UnimpairedMapTransform	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! UnimpairedMapTransform(algorithm, key)$/;"	f
UnreplaceInLine	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:UnreplaceInLine(text) "{{{3$/;"	f
Update	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Update(str)$/;"	f
Update	bundle/dbext_2000/plugin/dbext.vim	/^command! -nargs=+ -complete=customlist,dbext#DB_completeTables Update            :call dbext#DB_execSql("update " . <q-args>)$/;"	c
UpdateAllBufferDicts	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>UpdateAllBufferDicts(bufNum,deleted)$/;"	f
UpdateBufferNameDict	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>UpdateBufferNameDict(bufNum,deleted)$/;"	f
UpdateBufferPathDict	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>UpdateBufferPathDict(bufNum,deleted)$/;"	f
UpdateBufferPathSignDict	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>UpdateBufferPathSignDict(bufNum,deleted)$/;"	f
UpdateBufferStateDict	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>UpdateBufferStateDict(bufNum,deleted)$/;"	f
UpdateBufferUniqNameDict	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>UpdateBufferUniqNameDict(bufNum,deleted)$/;"	f
UpdateChangedSnip	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateChangedSnip(entering)$/;"	f
UpdateErrors	bundle/syntastic/plugin/syntastic.vim	/^function! s:UpdateErrors(auto_invoked, ...)$/;"	f
UpdateExplorer	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>UpdateExplorer(curBufNum)$/;"	f
UpdateMakePrg	bundle/vim-coffee-script/compiler/coffee.vim	/^  function! s:UpdateMakePrg()$/;"	f
UpdatePlaceholderTabStops	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdatePlaceholderTabStops()$/;"	f
UpdateTabStops	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateTabStops()$/;"	f
UpdateVars	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateVars()$/;"	f
UserCmd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:UserCmd(lscmd)$/;"	f
VERSION	bundle/html5.vim/Makefile	/^VERSION=0.1$/;"	m
VERSION	bundle/html5.vim/config.mk	/^VERSION=0.26$/;"	m
VERSION	bundle/vim-coffee-script/Makefile	/^VERSION = $(shell git describe --always $(REF))$/;"	m
VIMRUNTIME	bundle/html5.vim/Makefile	/^VIMRUNTIME=~\/.vim$/;"	m
Ve	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Ve       :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Ve	bundle/vim-scriptease/plugin/scriptease.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Complete Ve$/;"	c
Vedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vedit    :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Vedit	bundle/vim-scriptease/plugin/scriptease.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Complete Vedit$/;"	c
Verbose	bundle/vim-scriptease/plugin/scriptease.vim	/^command! -range=999998 -nargs=1 -complete=command Verbose$/;"	c
Verbose	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:Verbose(level, excmd)$/;"	f
VimDirListing	bundle/project-1.4.1/plugin/project.vim	/^    function! s:VimDirListing(filter, padding, separator, filevariable, filecount, dirvariable, dircount)$/;"	f
VimEnterHandler	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^function! <SID>VimEnterHandler()$/;"	f
VimEnterHandler	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:VimEnterHandler()$/;"	f
VimRubyInstaller	bundle/vim-ruby/bin/vim-ruby-install.rb	/^class VimRubyInstaller$/;"	c
Vopen	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vopen    :execute s:find(<count>,'edit<bang>',<q-args>,1)$/;"	c
Vopen	bundle/vim-scriptease/plugin/scriptease.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Complete Vopen$/;"	c
Vpedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vpedit   :execute s:find(<count>,'pedit',<q-args>,<bang>1)$/;"	c
Vpedit	bundle/vim-scriptease/plugin/scriptease.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Complete Vpedit$/;"	c
Vread	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vread    :execute s:find(<count>,'read',<q-args>,<bang>1)$/;"	c
Vread	bundle/vim-scriptease/plugin/scriptease.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Complete Vread$/;"	c
Vsplit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vsplit   :execute s:find(<count>,'split',<q-args>,<bang>1)$/;"	c
Vsplit	bundle/vim-scriptease/plugin/scriptease.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Complete Vsplit$/;"	c
Vtabedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vtabedit :execute s:find(<count>,'tabedit',<q-args>,<bang>1)$/;"	c
Vtabedit	bundle/vim-scriptease/plugin/scriptease.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Complete Vtabedit$/;"	c
Vvsplit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vvsplit  :execute s:find(<count>,'vsplit',<q-args>,<bang>1)$/;"	c
Vvsplit	bundle/vim-scriptease/plugin/scriptease.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Complete Vvsplit$/;"	c
WGET_OPT	bundle/html5.vim/Makefile	/^WGET_OPT=-c -nv$/;"	m
WP	bundle/the_silver_searcher/src/uthash.h	/^#define WP(/;"	d
WhimreplConfig	bundle/vim-slime/plugin/slime.vim	/^function! s:WhimreplConfig() abort$/;"	f
WhimreplSend	bundle/vim-slime/plugin/slime.vim	/^function! s:WhimreplSend(config, text)$/;"	f
Wholematch	bundle/matchit/plugin/matchit.vim	/^fun! s:Wholematch(string, pat, start)$/;"	f
WillComplete	bundle/supertab/plugin/supertab.vim	/^function! s:WillComplete() " {{{$/;"	f
WinEnterHandler	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:WinEnterHandler()$/;"	f
WinLeaveHandler	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:WinLeaveHandler()$/;"	f
Window.Toggle\	bundle/vim-colors-solarized/autoload/togglebg.vim	/^inoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>a$/;"	m
Window.Toggle\	bundle/vim-colors-solarized/autoload/togglebg.vim	/^nnoremenu <script> Window.Toggle\\ Background <SID>TogBG$/;"	m
Window.Toggle\	bundle/vim-colors-solarized/autoload/togglebg.vim	/^vnoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>gv$/;"	m
WipeAll	bundle/project-1.4.1/plugin/project.vim	/^    function! s:WipeAll(recurse, line)$/;"	f
Worker	bundle/vim-l9/autoload/l9/async.py	/^class Worker(threading.Thread):$/;"	c
Wq	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
Write	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
WritePasteFile	bundle/vim-slime/plugin/slime.vim	/^function! s:WritePasteFile(text)$/;"	f
X	bundle/vim-ruby/spec/indent/blocks_spec.rb	/^      module X$/;"	m
XTermColorForRGB	bundle/vim-css-color/after/syntax/css.vim	/^    function! s:XTermColorForRGB(color)$/;"	f
XZ_HEADER_MAGIC	bundle/the_silver_searcher/src/decompress.c	/^const uint8_t XZ_HEADER_MAGIC[6] = { 0xFD, '7', 'z', 'X', 'Z', 0x00 };$/;"	v
[%	bundle/matchit/plugin/matchit.vim	/^nnoremap <silent> [% :<C-U>call <SID>MultiMatch("bW", "n") <CR>$/;"	m
[%	bundle/matchit/plugin/matchit.vim	/^onoremap <silent> [% v:<C-U>call <SID>MultiMatch("bW", "o") <CR>$/;"	m
[%	bundle/matchit/plugin/matchit.vim	/^vmap [% <Esc>[%m'gv``$/;"	m
[<C-D>	bundle/vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> [<C-D>      :<C-U>exe <SID>jump('edit',v:count)<CR>$/;"	m
[<Space>	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nmap [<Space> <Plug>unimpairedBlankUp$/;"	m
[M	bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','b','n')<CR>$/;"	m
[[	bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[]	bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def [](path)$/;"	f	class:VimRubyInstaller.BackupDir
[]	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def [](path)$/;"	f	class:TargetDirectory
[]	bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','b','n')<CR>$/;"	m
[d	bundle/vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> [d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
[e	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nmap [e <Plug>unimpairedMoveUp$/;"	m
[f	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nmap [f <Plug>unimpairedDirectoryPrevious$/;"	m
[m	bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','b','n')<CR>$/;"	m
[n	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nmap [n <Plug>unimpairedContextPrevious$/;"	m
[n	bundle/vim-unimpaired/plugin/unimpaired.vim	/^omap [n <Plug>unimpairedContextPrevious$/;"	m
[o	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nmap [o <Plug>unimpairedOPrevious$/;"	m
[od	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap [od :diffthis<CR>$/;"	m
[ox	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap [ox :set cursorline cursorcolumn<CR>$/;"	m
[p	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nmap [p <Plug>unimpairedPutAbove$/;"	m
]%	bundle/matchit/plugin/matchit.vim	/^nnoremap <silent> ]% :<C-U>call <SID>MultiMatch("W",  "n") <CR>$/;"	m
]%	bundle/matchit/plugin/matchit.vim	/^onoremap <silent> ]% v:<C-U>call <SID>MultiMatch("W",  "o") <CR>$/;"	m
]%	bundle/matchit/plugin/matchit.vim	/^vmap ]% <Esc>]%m'gv``$/;"	m
]<C-D>	bundle/vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> ]<C-D>      :<C-U>exe <SID>jump('edit',v:count)<CR>$/;"	m
]<Space>	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nmap ]<Space> <Plug>unimpairedBlankDown$/;"	m
]M	bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>','rubyDefine','','n')<CR>$/;"	m
][	bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]]	bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>','rubyModule\\<Bar>rubyClass','','n')<CR>$/;"	m
]d	bundle/vim-cucumber/ftplugin/cucumber.vim	/^  nnoremap <silent><buffer> ]d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
]e	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nmap ]e <Plug>unimpairedMoveDown$/;"	m
]f	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nmap ]f <Plug>unimpairedDirectoryNext$/;"	m
]m	bundle/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>','rubyDefine','','n')<CR>$/;"	m
]n	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nmap ]n <Plug>unimpairedContextNext$/;"	m
]n	bundle/vim-unimpaired/plugin/unimpaired.vim	/^omap ]n <Plug>unimpairedContextNext$/;"	m
]o	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nmap ]o <Plug>unimpairedONext$/;"	m
]od	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap ]od :diffoff<CR>$/;"	m
]ox	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap ]ox :set nocursorline nocursorcolumn<CR>$/;"	m
]p	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nmap ]p <Plug>unimpairedPutBelow$/;"	m
_EscapeText	bundle/vim-slime/plugin/slime.vim	/^function! s:_EscapeText(text)$/;"	f
__init__	bundle/Gundo/autoload/gundo.py	/^    def __init__(self):$/;"	m	class:Buffer
__init__	bundle/Gundo/autoload/gundo.py	/^    def __init__(self, n, parent, time, curhead):$/;"	m	class:Node
__init__	bundle/vim-l9/autoload/l9/async.py	/^    def __init__(self):$/;"	m	class:Asyncer
__init__	bundle/vim-l9/autoload/l9/async.py	/^    def __init__(self):$/;"	m	class:Worker
__init__	bundle/vim-l9/autoload/l9/async.py	/^    def __init__(self, command, cwd, input, appends):$/;"	m	class:Executor
_ag	bundle/the_silver_searcher/ag.bashcomp.sh	/^_ag() {$/;"	f
_check_sanity	bundle/Gundo/autoload/gundo.py	/^def _check_sanity():$/;"	f
_ensure_directory_exists	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _ensure_directory_exists(path)$/;"	f	class:FileWriter
_fmt_time	bundle/Gundo/autoload/gundo.py	/^def _fmt_time(t):$/;"	f
_generate_change_preview_diff	bundle/Gundo/autoload/gundo.py	/^def _generate_change_preview_diff(current, node_before, node_after):$/;"	f
_generate_preview_diff	bundle/Gundo/autoload/gundo.py	/^def _generate_preview_diff(current, node_before, node_after):$/;"	f
_goto_window_for_buffer	bundle/Gundo/autoload/gundo.py	/^def _goto_window_for_buffer(b):$/;"	f
_goto_window_for_buffer_name	bundle/Gundo/autoload/gundo.py	/^def _goto_window_for_buffer_name(bn):$/;"	f
_makeArgumentList	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:_makeArgumentList()$/;"	f
_makeArgumentString	bundle/genutils-2.5/autoload/genutils.vim	/^function! s:_makeArgumentString()$/;"	f
_make_nodes	bundle/Gundo/autoload/gundo.py	/^def _make_nodes(alts, nodes, parent=None):$/;"	f
_output_preview_text	bundle/Gundo/autoload/gundo.py	/^def _output_preview_text(lines):$/;"	f
_potential_directories	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _potential_directories$/;"	f	class:TargetDirectory
_same_contents?	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _same_contents?(p1, p2)$/;"	f	class:VimRubyInstaller
_undo_to	bundle/Gundo/autoload/gundo.py	/^def _undo_to(n):$/;"	f
_valid_vim_ruby_dir	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env._valid_vim_ruby_dir(dir)$/;"	F	class:Env
_vim_system_dir	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _vim_system_dir$/;"	f	class:TargetDirectory
_vim_user_dir	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def _vim_user_dir$/;"	f	class:TargetDirectory
_walk_branch	bundle/Gundo/autoload/gundo.py	/^    def _walk_branch(origin, dest):$/;"	f	function:GundoPlayTo
a%	bundle/matchit/plugin/matchit.vim	/^vmap a% <Esc>[%v]%$/;"	m
aM	bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
abolish_l	bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_l(word)$/;"	f
abolish_setup	bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_setup()$/;"	f
abolish_t	bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_t(word)$/;"	f
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role = {}$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['composite'] = abstract_role['widget'] + ['aria-activedescendant']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['input'] = abstract_role['widget']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['landmark'] = role_attributes['region']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['range'] = abstract_role['input'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow', 'aria-valuetext']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['roletype'] = ['aria-atomic', 'aria-busy', 'aria-controls', 'aria-describedby', 'aria-disabled', 'aria-dropeffect', 'aria-flowto', 'aria-grabbed', 'aria-haspopup', 'aria-hidden', 'aria-invalid', 'aria-label', 'aria-labelledby', 'aria-live', 'aria-owns', 'aria-relevant']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['section'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['sectionhead'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['select'] = abstract_role['composite'] + role_attributes['group'] + abstract_role['input']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['structure'] = abstract_role['roletype']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['widget'] = abstract_role['roletype']$/;"	v
abstract_role	bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['window'] = abstract_role['roletype'] + ['aria-expanded']$/;"	v
abutton_dec	bundle/html5.vim/autoload/xml/html5.vim	/^let abutton_dec = 'details\\\\|embed\\\\|iframe\\\\|keygen\\\\|label\\\\|menu\\\\|select\\\\|textarea'$/;"	v
access_token_url	bundle/webapi-vim/example/google-buzz.vim	/^  let access_token_url = "https:\/\/www.google.com\/accounts\/OAuthGetAccessToken"$/;"	v
access_token_url	bundle/webapi-vim/example/twitter.vim	/^  let access_token_url = "https:\/\/api.twitter.com\/oauth\/access_token"$/;"	v
ackmate	bundle/the_silver_searcher/src/options.h	/^    int ackmate;$/;"	m	struct:__anon2
ackmate_dir_filter	bundle/the_silver_searcher/src/options.h	/^    pcre *ackmate_dir_filter;$/;"	m	struct:__anon2
ackmate_dir_filter_extra	bundle/the_silver_searcher/src/options.h	/^    pcre_extra *ackmate_dir_filter_extra;$/;"	m	struct:__anon2
ackmate_dir_match	bundle/the_silver_searcher/src/ignore.c	/^static int ackmate_dir_match(const char* dir_name) {$/;"	f	file:
activateAll	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:activateAll()$/;"	f
activateBookmark	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:activateBookmark(bm)$/;"	f
activateDirNode	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:activateDirNode(node)$/;"	f
activateFileNode	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:activateFileNode(node)$/;"	f
add_ignore_pattern	bundle/the_silver_searcher/src/ignore.c	/^void add_ignore_pattern(ignores *ig, const char* pattern) {$/;"	f
add_methods	bundle/vim-bundler/plugin/bundler.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_methods	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_methods	bundle/vim-rails/autoload/rails.vim	/^function! s:add_methods(namespace, method_names)$/;"	f
add_methods	bundle/vim-rake/plugin/rake.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_node_params	bundle/webapi-vim/autoload/webapi/xmlrpc.vim	/^function! s:add_node_params(args)$/;"	f
add_return_key	bundle/vim-ruby-refactoring/features/support/shared_methods.rb	/^def add_return_key$/;"	f
add_to_commands	bundle/vim-ruby-refactoring/features/support/shared_methods.rb	/^def add_to_commands command$/;"	f
addfilecmds	bundle/vim-rails/autoload/rails.vim	/^function! s:addfilecmds(type)$/;"	f
addtomrufs	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:addtomrufs(fname)$/;"	f
after	bundle/the_silver_searcher/src/options.h	/^    int after;$/;"	m	struct:__anon2
after	bundle/vim-multiple-cursors/spec/benchmark_spec.rb	/^def after(string)$/;"	f
after	bundle/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def after(string)$/;"	f
ag_asprintf	bundle/the_silver_searcher/src/util.c	/^void ag_asprintf(char **ret, const char *fmt, ...) {$/;"	f
ag_calloc	bundle/the_silver_searcher/src/util.c	/^void *ag_calloc(size_t count, size_t size) {$/;"	f
ag_compression_type	bundle/the_silver_searcher/src/decompress.h	/^} ag_compression_type;$/;"	t	typeref:enum:__anon1
ag_compression_type	bundle/the_silver_searcher/src/util.h	/^} ag_compression_type;$/;"	t	typeref:enum:__anon8
ag_malloc	bundle/the_silver_searcher/src/util.c	/^void *ag_malloc(size_t size) {$/;"	f
ag_realloc	bundle/the_silver_searcher/src/util.c	/^void *ag_realloc(void *ptr, size_t size) {$/;"	f
ag_scandir	bundle/the_silver_searcher/src/scandir.c	/^int ag_scandir(const char *dirname,$/;"	f
ag_stats	bundle/the_silver_searcher/src/util.h	/^} ag_stats;$/;"	t	typeref:struct:__anon7
ag_strdup	bundle/the_silver_searcher/src/util.c	/^char *ag_strdup(const char *s) {$/;"	f
ag_strndup	bundle/the_silver_searcher/src/util.c	/^char *ag_strndup(const char *s, size_t size) {$/;"	f
age	bundle/Gundo/autoload/gundo.py	/^def age(ts):$/;"	f
agescales	bundle/Gundo/autoload/gundo.py	/^agescales = [("year", 3600 * 24 * 365),$/;"	v
allsteps	bundle/vim-cucumber/ftplugin/cucumber.vim	/^function! s:allsteps()$/;"	f
am	bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
api	bundle/webapi-vim/example/jugem.vim	/^let api = metaWeblog#proxy("http:\/\/".jugem_id.".jugem.jp\/admin\/xmlrpc.php")$/;"	v
app_commands	bundle/vim-rails/autoload/rails.vim	/^function! s:app_commands() dict abort$/;"	f
app_dbext_settings	bundle/vim-rails/autoload/rails.vim	/^function! s:app_dbext_settings(environment) dict$/;"	f
app_default_locale	bundle/vim-rails/autoload/rails.vim	/^function! s:app_default_locale() dict abort$/;"	f
app_engines	bundle/vim-rails/autoload/rails.vim	/^function! s:app_engines() dict abort$/;"	f
app_environments	bundle/vim-rails/autoload/rails.vim	/^function! s:app_environments() dict$/;"	f
app_eval	bundle/vim-rails/autoload/rails.vim	/^function! s:app_eval(ruby,...) dict abort$/;"	f
app_execute_rails_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_execute_rails_command(cmd) dict abort$/;"	f
app_file	bundle/vim-rails/autoload/rails.vim	/^function! s:app_file(name) dict abort$/;"	f
app_find_file	bundle/vim-rails/autoload/rails.vim	/^function! s:app_find_file(name, ...) dict abort$/;"	f
app_gems	bundle/vim-rails/autoload/rails.vim	/^function! s:app_gems() dict abort$/;"	f
app_generator_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_generator_command(bang,...) dict$/;"	f
app_generators	bundle/vim-rails/autoload/rails.vim	/^function! s:app_generators() dict abort$/;"	f
app_has	bundle/vim-rails/autoload/rails.vim	/^function! s:app_has(feature) dict$/;"	f
app_has_file	bundle/vim-rails/autoload/rails.vim	/^function! s:app_has_file(file) dict$/;"	f
app_has_gem	bundle/vim-rails/autoload/rails.vim	/^function! s:app_has_gem(gem) dict abort$/;"	f
app_has_path	bundle/vim-rails/autoload/rails.vim	/^function! s:app_has_path(path) dict$/;"	f
app_lightweight_ruby_eval	bundle/vim-rails/autoload/rails.vim	/^function! s:app_lightweight_ruby_eval(ruby,...) dict abort$/;"	f
app_migration	bundle/vim-rails/autoload/rails.vim	/^function! s:app_migration(file) dict$/;"	f
app_named_route_file	bundle/vim-rails/autoload/rails.vim	/^function! s:app_named_route_file(route) dict$/;"	f
app_output_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_output_command(count, code) dict$/;"	f
app_path	bundle/vim-rails/autoload/rails.vim	/^function! s:app_path(...) dict$/;"	f
app_prepare_rails_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_prepare_rails_command(cmd) dict abort$/;"	f
app_projections	bundle/vim-rails/autoload/rails.vim	/^function! s:app_projections() dict abort$/;"	f
app_rake_tasks	bundle/vim-rails/autoload/rails.vim	/^function! s:app_rake_tasks() dict$/;"	f
app_relglob	bundle/vim-rails/autoload/rails.vim	/^function! s:app_relglob(path,glob,...) dict$/;"	f
app_route_names	bundle/vim-rails/autoload/rails.vim	/^function! s:app_route_names() dict$/;"	f
app_ruby_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_ruby_command(cmd) dict abort$/;"	f
app_ruby_script_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_ruby_script_command(cmd) dict abort$/;"	f
app_script_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_script_command(bang,...) dict$/;"	f
app_server_binding	bundle/vim-rails/autoload/rails.vim	/^function! s:app_server_binding() dict abort$/;"	f
app_server_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_server_command(bang,arg) dict$/;"	f
app_start_rails_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_start_rails_command(cmd, ...) dict abort$/;"	f
app_tags_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_tags_command() dict$/;"	f
app_test_suites	bundle/vim-rails/autoload/rails.vim	/^function! s:app_test_suites() dict$/;"	f
app_user_assertions	bundle/vim-rails/autoload/rails.vim	/^function! s:app_user_assertions() dict$/;"	f
app_user_classes	bundle/vim-rails/autoload/rails.vim	/^function! s:app_user_classes() dict$/;"	f
apply_highlight_fix	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:apply_highlight_fix()$/;"	f
apply_user_input_next	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:apply_user_input_next(mode)$/;"	f
argmaps	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:argmaps(md, i)$/;"	f
args	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^function s:args()$/;"	f
aria_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, drag_and_drop_attributes)$/;"	v
aria_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, live_region_attributes)$/;"	v
aria_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, relationship_attributes)$/;"	v
aria_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes = widget_attributes$/;"	v
aria_attributes_value	bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes_value = {$/;"	v
ascii	bundle/Gundo/autoload/gundo.py	/^def ascii(buf, state, type, char, text, coldata):$/;"	f
asciiedges	bundle/Gundo/autoload/gundo.py	/^def asciiedges(seen, rev, parents):$/;"	f
ask_user	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.ask_user(message)$/;"	F	class:Env
assert_correct_indenting	bundle/vim-ruby/spec/spec_helper.rb	/^  def assert_correct_indenting(string)$/;"	f	class:Support
at	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:at(str)$/;"	f
attr	bundle/webapi-vim/autoload/webapi/feed.vim	/^function! s:attr(node, name)$/;"	f
attributes_value	bundle/html5.vim/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, event_attributes_value)$/;"	v
attributes_value	bundle/html5.vim/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, microdata_attributes_value)$/;"	v
attributes_value	bundle/html5.vim/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, rdfa_attributes_value)$/;"	v
attributes_value	bundle/html5.vim/autoload/xml/html5.vim	/^let attributes_value = {$/;"	v
auth_url	bundle/webapi-vim/example/google-buzz.vim	/^  let auth_url = "https:\/\/www.google.com\/accounts\/OAuthAuthorizeToken"$/;"	v
auth_url	bundle/webapi-vim/example/twitter.vim	/^  let auth_url =  "https:\/\/twitter.com\/oauth\/authorize"$/;"	v
autocamelize	bundle/vim-rails/autoload/rails.vim	/^function! s:autocamelize(files,test)$/;"	f
autocmds	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:autocmds()$/;"	f
autoload	bundle/vim-rails/plugin/rails.vim	/^function! s:autoload(...)$/;"	f
b64decode	bundle/webapi-vim/autoload/webapi/base64.vim	/^function! s:b64decode(b64, table, pad)$/;"	f
b64encode	bundle/webapi-vim/autoload/webapi/base64.vim	/^function! s:b64encode(bytes, table, pad)$/;"	f
b:browsefilter	bundle/vim-haml/ftplugin/haml.vim	/^  let b:browsefilter="Haml Files (*.haml)\\t*.haml\\nSass Files (*.sass)\\t*.sass\\n" . s:browsefilter$/;"	v
b:browsefilter	bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:color_pattern	bundle/vim-css-color/after/syntax/css.vim	/^let b:color_pattern = {}$/;"	v
b:cucumber_root	bundle/vim-cucumber/ftplugin/cucumber.vim	/^let b:cucumber_root = expand('%:p:h:s?.*[\\\/]\\%(features\\|stories\\)\\zs[\\\/].*??')$/;"	v
b:current_syntax	bundle/vim-coffee-script/syntax/coffee.vim	/^  let b:current_syntax = 'coffee'$/;"	v
b:current_syntax	bundle/vim-cucumber/syntax/cucumber.vim	/^let b:current_syntax = "cucumber"$/;"	v
b:current_syntax	bundle/vim-haml/syntax/haml.vim	/^let b:current_syntax = "haml"$/;"	v
b:current_syntax	bundle/vim-haml/syntax/sass.vim	/^let b:current_syntax = "sass"$/;"	v
b:current_syntax	bundle/vim-haml/syntax/scss.vim	/^let b:current_syntax = "scss"$/;"	v
b:current_syntax	bundle/vim-javascript/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	bundle/vim-less/syntax/less.vim	/^let b:current_syntax = "less"$/;"	v
b:current_syntax	bundle/vim-ruby/syntax/eruby.vim	/^let b:current_syntax = 'eruby'$/;"	v
b:current_syntax	bundle/vim-ruby/syntax/ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:did_ftplugin	bundle/vim-coffee-script/ftplugin/coffee.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	bundle/vim-cucumber/ftplugin/cucumber.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	bundle/vim-haml/ftplugin/haml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	bundle/vim-haml/ftplugin/sass.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	bundle/vim-less/ftplugin/less.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	bundle/vim-ruby/ftplugin/eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	bundle/vim-ruby/ftplugin/ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	bundle/html5.vim/indent/html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	bundle/vim-coffee-script/indent/coffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	bundle/vim-cucumber/indent/cucumber.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	bundle/vim-haml/indent/haml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	bundle/vim-haml/indent/sass.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	bundle/vim-javascript/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	bundle/vim-ruby/indent/eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	bundle/vim-ruby/indent/ruby.vim	/^let b:did_indent = 1$/;"	v
b:eruby_nest_level	bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_nest_level	bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	bundle/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eruby_subtype	bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	bundle/vim-ruby/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype_indentexpr	bundle/vim-ruby/indent/eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:escape_spaces	bundle/project-1.4.1/plugin/project.vim	/^                let b:escape_spaces=1$/;"	v
b:javascript_fold	bundle/vim-javascript/syntax/javascript.vim	/^let b:javascript_fold='true'$/;"	v
b:match_ignorecase	bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_skip	bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:match_skip =$/;"	v
b:match_words	bundle/vim-haml/ftplugin/haml.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	bundle/vim-ruby/ftplugin/eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:match_words =$/;"	v
b:ruby_no_expensive	bundle/vim-haml/syntax/haml.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	bundle/vim-ruby/syntax/ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:ruby_version	bundle/vim-ruby/ftplugin/ruby.vim	/^    let b:ruby_version = get(readfile(s:version_file, '', 1), '')$/;"	v
b:undo_ftplugin	bundle/vim-cucumber/ftplugin/cucumber.vim	/^  let b:undo_ftplugin .=$/;"	v
b:undo_ftplugin	bundle/vim-cucumber/ftplugin/cucumber.vim	/^let b:undo_ftplugin = "setl fo< com< cms< ofu<"$/;"	v
b:undo_ftplugin	bundle/vim-haml/ftplugin/haml.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	bundle/vim-haml/ftplugin/sass.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	bundle/vim-less/ftplugin/less.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	bundle/vim-ruby/ftplugin/eruby.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	bundle/vim-ruby/ftplugin/ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	bundle/vim-ruby/ftplugin/ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	bundle/vim-ruby/ftplugin/ruby.vim	/^let b:undo_ftplugin = "setl fo< inc< inex< sua< def< com< cms< path< tags< kp<"$/;"	v
b:undo_indent	bundle/vim-cucumber/indent/cucumber.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
backslashdump	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:backslashdump(value, indent)$/;"	f
backup	bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def backup(basedir, path)$/;"	f	class:VimRubyInstaller.BackupDir
bar	bundle/vim-ruby/spec/indent/continuations_spec.rb	/^      def bar($/;"	f
base_path	bundle/the_silver_searcher/src/scandir.h	/^    const char *base_path;$/;"	m	struct:__anon3
beep	bundle/vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
before	bundle/the_silver_searcher/src/options.h	/^    int before;$/;"	m	struct:__anon2
before	bundle/vim-multiple-cursors/spec/benchmark_spec.rb	/^def before(string)$/;"	f
before	bundle/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def before(string)$/;"	f
binary_search	bundle/the_silver_searcher/src/util.c	/^int binary_search(const char* needle, char **haystack, int start, int end) {$/;"	f
binstr2bytes	bundle/webapi-vim/autoload/webapi/base64.vim	/^function! s:binstr2bytes(str)$/;"	f
bitwise_and	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function! s:bitwise_and(a, b)$/;"	f
bitwise_lshift	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function! s:bitwise_lshift(a, n)$/;"	f
bitwise_not	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function! s:bitwise_not(a)$/;"	f
bitwise_or	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function! s:bitwise_or(a, b)$/;"	f
bitwise_rshift	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function! s:bitwise_rshift(a, n)$/;"	f
bitwise_xor	bundle/webapi-vim/autoload/webapi/hmac.vim	/^function! s:bitwise_xor(a, b)$/;"	f
bitwise_xor	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function! s:bitwise_xor(a, b)$/;"	f
bloom_bv	bundle/the_silver_searcher/src/uthash.h	/^   uint8_t *bloom_bv;$/;"	m	struct:UT_hash_table
bloom_nbits	bundle/the_silver_searcher/src/uthash.h	/^   char bloom_nbits;$/;"	m	struct:UT_hash_table
bloom_sig	bundle/the_silver_searcher/src/uthash.h	/^   uint32_t bloom_sig; \/* used only to test bloom exists in external analysis *\/$/;"	m	struct:UT_hash_table
body_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^    let body_attributes = {'onafterprint': [], 'onbeforeprint': [], 'onbeforeunload': [], 'onblur': [], 'onerror': [], 'onfocus': [], 'onhashchange': [], 'onload': [], 'onmessage': [], 'onoffline': [], 'ononline': [], 'onpopstate': [], 'onredo': [], 'onresize': [], 'onstorage': [], 'onundo': [], 'onunload': []}$/;"	v
body_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^let body_attributes = {}$/;"	v
boyer_moore_strncasestr	bundle/the_silver_searcher/src/util.c	/^const char* boyer_moore_strncasestr(const char *s, const char *find, const size_t s_len, const size_t f_len, const size_t skip_lookup[]) {$/;"	f
boyer_moore_strnstr	bundle/the_silver_searcher/src/util.c	/^const char* boyer_moore_strnstr(const char *s, const char *find, const size_t s_len, const size_t f_len, const size_t skip_lookup[]) {$/;"	f
break	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:break(type, arg) abort$/;"	f
breaksnr	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:breaksnr(arg) abort$/;"	f
bsub	bundle/vim-cucumber/ftplugin/cucumber.vim	/^function! s:bsub(target,pattern,replacement)$/;"	f
buckets	bundle/the_silver_searcher/src/uthash.h	/^   UT_hash_bucket *buckets;$/;"	m	struct:UT_hash_table
buffer	bundle/vim-bundler/plugin/bundler.vim	/^function! s:buffer(...) abort$/;"	f
buffer	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer	bundle/vim-rake/plugin/rake.vim	/^function! s:buffer(...) abort$/;"	f
buffer_absolute	bundle/vim-rake/plugin/rake.vim	/^function! s:buffer_absolute() dict abort$/;"	f
buffer_alter_paths	bundle/vim-bundler/plugin/bundler.vim	/^function! s:buffer_alter_paths() dict abort$/;"	f
buffer_app	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_app() dict abort$/;"	f
buffer_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_getline	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getline	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_getline(...) dict abort$/;"	f
buffer_getline	bundle/vim-rake/plugin/rake.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getvar	bundle/vim-bundler/plugin/bundler.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_getvar	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_getvar	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_getvar(varname) dict abort$/;"	f
buffer_getvar	bundle/vim-rake/plugin/rake.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_lines	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_lines() dict abort$/;"	f
buffer_name	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_name	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_name	bundle/vim-rake/plugin/rake.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_number	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_number() dict abort$/;"	f
buffer_path	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_path	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_path() dict abort$/;"	f
buffer_path	bundle/vim-rake/plugin/rake.vim	/^function! s:buffer_path() dict abort$/;"	f
buffer_project	bundle/vim-bundler/plugin/bundler.vim	/^function! s:buffer_project() dict abort$/;"	f
buffer_project	bundle/vim-rake/plugin/rake.vim	/^function! s:buffer_project() dict abort$/;"	f
buffer_related	bundle/vim-rake/plugin/rake.vim	/^function! s:buffer_related() dict abort$/;"	f
buffer_relative	bundle/vim-rake/plugin/rake.vim	/^function! s:buffer_relative() dict abort$/;"	f
buffer_repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	bundle/vim-bundler/plugin/bundler.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_setvar	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_setvar	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_setvar(varname, val) dict abort$/;"	f
buffer_setvar	bundle/vim-rake/plugin/rake.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_sha1	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	bundle/vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_type_name	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_type_name(...) dict abort$/;"	f
buffer_up	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_up(...) dict abort$/;"	f
buffunc	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buffunc(e)$/;"	f
bufname	bundle/project-1.4.1/plugin/project.vim	/^        let bufname=escape(substitute(expand('%:p', 0), '\\\\', '\/', 'g'), ' ')$/;"	v
buftab	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buftab(bufnr, md)$/;"	f
bufwins	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:bufwins(bufnr)$/;"	f
build_parameter_declaration_position_pairs	bundle/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:build_parameter_declaration_position_pairs(parameters)$/;"	f
build_path	bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:build_path(path)$/;"	f
build_path_option	bundle/vim-bundler/plugin/bundler.vim	/^function! s:build_path_option(paths,suffix) abort$/;"	f
buildpat	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buildpat(lst)$/;"	f
bundler	bundle/vim-bundler/plugin/bundler.vim	/^augroup bundler$/;"	a
bundler#buffer	bundle/vim-bundler/plugin/bundler.vim	/^function! bundler#buffer(...) abort$/;"	f
bundler#project	bundle/vim-bundler/plugin/bundler.vim	/^function! bundler#project(...) abort$/;"	f
bundler_make	bundle/vim-bundler/plugin/bundler.vim	/^augroup bundler_make$/;"	a
bundler_path	bundle/vim-bundler/plugin/bundler.vim	/^augroup bundler_path$/;"	a
bundler_syntax	bundle/vim-bundler/plugin/bundler.vim	/^augroup bundler_syntax$/;"	a
bundler_utility	bundle/vim-bundler/plugin/bundler.vim	/^augroup bundler_utility$/;"	a
byfname	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:byfname()$/;"	f
bytes2str	bundle/webapi-vim/autoload/webapi/base64.vim	/^function! s:bytes2str(bytes)$/;"	f
c_d	bundle/project-1.4.1/plugin/project.vim	/^                let c_d=s:GetCd(info, '')$/;"	v
cache_clear	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_clear(...) dict$/;"	f
cache_get	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_get(...) dict$/;"	f
cache_has	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_has(key) dict$/;"	f
cache_needs	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_needs(key) dict$/;"	f
cache_set	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_set(key,value) dict$/;"	f
cachefile	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:cachefile()$/;"	f
case_behavior	bundle/the_silver_searcher/src/options.h	/^enum case_behavior {$/;"	g
casing	bundle/the_silver_searcher/src/options.h	/^    enum case_behavior casing;$/;"	m	struct:__anon2	typeref:enum:__anon2::case_behavior
cgetfile	bundle/vim-dispatch/autoload/dispatch.vim	/^function! s:cgetfile(request, all, copen) abort$/;"	f
chCwd	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:chCwd(node)$/;"	f
chRoot	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:chRoot(node)$/;"	f
changelist	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:changelist(bufnr)$/;"	f
changenr	bundle/Gundo/autoload/gundo.py	/^def changenr(nodes):$/;"	f
changesurround	bundle/vim-surround/plugin/surround.vim	/^function! s:changesurround() " {{{1$/;"	f
charset	bundle/html5.vim/autoload/xml/html5.vim	/^let charset = [$/;"	v
checkKey	bundle/vim-l9/autoload/l9/async.vim	/^function s:checkKey(key)$/;"	f
check_symloop_enter	bundle/the_silver_searcher/src/search.c	/^static int check_symloop_enter(const char *path, dirkey_t *outkey) {$/;"	f	file:
check_symloop_leave	bundle/the_silver_searcher/src/search.c	/^static int check_symloop_leave(dirkey_t *dirkey) {$/;"	f	file:
checkbuf	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:checkbuf()$/;"	f
chknearby	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:chknearby(pat)$/;"	f
choices	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:choices(str, choices, func, args)$/;"	f
chop	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:chop(mrufs)$/;"	f
cindex	bundle/guicolorscheme/plugin/guicolorscheme.vim	/^function! s:cindex(rgb) "{{{$/;"	f
clean_name	bundle/vim-tags/plugin/tags.vim	/^    let clean_name = substitute(dir_name, '^\\.\/', '', '')$/;"	v
cleanup_ignore	bundle/the_silver_searcher/src/ignore.c	/^void cleanup_ignore(ignores *ig) {$/;"	f
cleanup_options	bundle/the_silver_searcher/src/options.c	/^void cleanup_options() {$/;"	f
clear_outputs	bundle/vim-l9/autoload/l9/async.py	/^    def clear_outputs(self):$/;"	m	class:Worker
cli_options	bundle/the_silver_searcher/src/options.h	/^} cli_options;$/;"	t	typeref:struct:__anon2
closeChildren	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:closeChildren(node)$/;"	f
closeCurrentDir	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:closeCurrentDir(node)$/;"	f
closeTreeWindow	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:closeTreeWindow()$/;"	f
closematch	bundle/vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
cmp	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function! s:cmp(a, b)$/;"	f
cod	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap cod :<C-R>=&diff ? 'diffoff' : 'diffthis'<CR><CR>$/;"	m
coffee#CoffeeSetUpErrorFormat	bundle/vim-coffee-script/autoload/coffee.vim	/^function! coffee#CoffeeSetUpErrorFormat()$/;"	f
coffee#CoffeeSetUpVariables	bundle/vim-coffee-script/autoload/coffee.vim	/^function! coffee#CoffeeSetUpVariables()$/;"	f
color	bundle/guicolorscheme/plugin/guicolorscheme.vim	/^function! s:color(r, g, b) "{{{$/;"	f
color	bundle/the_silver_searcher/src/options.h	/^    int color;$/;"	m	struct:__anon2
color_efm	bundle/vim-rails/autoload/rails.vim	/^function! s:color_efm(pre, before, after)$/;"	f
color_line_number	bundle/the_silver_searcher/src/options.c	/^const char *color_line_number = "\\e[1;33m"; \/* yellow with black background *\/$/;"	v
color_line_number	bundle/the_silver_searcher/src/options.h	/^    char *color_line_number;$/;"	m	struct:__anon2
color_match	bundle/the_silver_searcher/src/options.c	/^const char *color_match = "\\e[30;43m"; \/* black with yellow background *\/$/;"	v
color_match	bundle/the_silver_searcher/src/options.h	/^    char *color_match;$/;"	m	struct:__anon2
color_path	bundle/the_silver_searcher/src/options.c	/^const char *color_path = "\\e[1;32m";   \/* bold green *\/$/;"	v
color_path	bundle/the_silver_searcher/src/options.h	/^    char *color_path;$/;"	m	struct:__anon2
color_reset	bundle/the_silver_searcher/src/print.c	/^const char *color_reset = "\\e[0m\\e[K";$/;"	v
colors_name	bundle/vim-colors-solarized/colors/solarized.vim	/^let colors_name = "solarized"$/;"	v
colors_name	colors/candy.vim	/^let colors_name = "candy"$/;"	v
colors_name	colors/guardian.vim	/^let colors_name   = "Guardian"$/;"	v
column	bundle/the_silver_searcher/src/options.h	/^    int column;$/;"	m	struct:__anon2
combine_projections	bundle/vim-rails/autoload/rails.vim	/^function! s:combine_projections(dest, src, ...) abort$/;"	f
command	bundle/project-1.4.1/plugin/project.vim	/^                let command=substitute(command, '%F', escape(fnames, '\\'), 'g')$/;"	v
command	bundle/project-1.4.1/plugin/project.vim	/^                let command=substitute(command, '%d', escape(c_d, '\\'), 'g')$/;"	v
command	bundle/project-1.4.1/plugin/project.vim	/^                let command=substitute(command, '%h', escape(home, '\\'), 'g')$/;"	v
command	bundle/project-1.4.1/plugin/project.vim	/^                let command=substitute(command, '%s', escape(fnames, '\\'), 'g')$/;"	v
command	bundle/project-1.4.1/plugin/project.vim	/^                let command=substitute(g:proj_run_fold{a:number}, '%f', substitute(escape(fnames, '\\'), '\\\\ ', ' ', 'g'), 'g')$/;"	v
command	bundle/vim-bundler/plugin/bundler.vim	/^function! s:command(definition) abort$/;"	f
command	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
command	bundle/vim-rake/plugin/rake.vim	/^function! s:command(definition) abort$/;"	f
commands	bundle/vim-ruby-refactoring/features/support/shared_methods.rb	/^def commands$/;"	f
common#cut_visual_selection	bundle/vim-ruby-refactoring/autoload/common.vim	/^function! common#cut_visual_selection() $/;"	f
common#dedupe_list	bundle/vim-ruby-refactoring/autoload/common.vim	/^function! common#dedupe_list(target)$/;"	f
common#get_input	bundle/vim-ruby-refactoring/autoload/common.vim	/^function! common#get_input(message, error_message)$/;"	f
common#get_range_for_block	bundle/vim-ruby-refactoring/autoload/common.vim	/^function! common#get_range_for_block(pattern_start, flags)$/;"	f
common#get_visual_selection	bundle/vim-ruby-refactoring/autoload/common.vim	/^function! common#get_visual_selection(...) $/;"	f
common#gsub_all_in_range	bundle/vim-ruby-refactoring/autoload/common.vim	/^function! common#gsub_all_in_range(start_line, end_line, pattern, replace)$/;"	f
compareErrorItems	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! s:compareErrorItems(a, b)$/;"	f
compare_pos	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:compare_pos(l, r)$/;"	f
comparent	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comparent(...)$/;"	f
compfnlen	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compfnlen(...)$/;"	f
compile	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^compile(FileName, LibDirs) ->$/;"	f
compile_study	bundle/the_silver_searcher/src/util.c	/^void compile_study(pcre **re, pcre_extra **re_extra, char *q, const int pcre_opts, const int study_opts) {$/;"	f
completion_filter	bundle/vim-bundler/plugin/bundler.vim	/^function! s:completion_filter(results,A)$/;"	f
completion_filter	bundle/vim-rails/autoload/rails.vim	/^function! s:completion_filter(results,A)$/;"	f
completion_filter	bundle/vim-rake/plugin/rake.vim	/^function! s:completion_filter(results,A)$/;"	f
compmatlen	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmatlen(...)$/;"	f
compmreb	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmreb(...)$/;"	f
compmref	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmref(...)$/;"	f
comptime	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comptime(...)$/;"	f
compval	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compval(...)$/;"	f
compval	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:compval(...)$/;"	f
configfile	bundle/webapi-vim/example/google-buzz.vim	/^let configfile = expand('~\/.google-buzz-vim')$/;"	v
configfile	bundle/webapi-vim/example/twitter.vim	/^let configfile = expand('~\/.twitter-vim')$/;"	v
contents	bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def contents$/;"	f	class:VimRubyInstaller.BackupDir
context	bundle/the_silver_searcher/src/options.h	/^    int context;$/;"	m	struct:__anon2
controller	bundle/vim-rails/autoload/rails.vim	/^function! s:controller(...)$/;"	f
controllerEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:controllerEdit(cmd,...)$/;"	f
controllerList	bundle/vim-rails/autoload/rails.vim	/^function! s:controllerList(A,L,P)$/;"	f
copy	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def copy(path)$/;"	f	class:TargetDirectory
copy	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def copy(source_path, target_path)$/;"	f	class:FileWriter
copy_outputs	bundle/vim-l9/autoload/l9/async.py	/^    def copy_outputs(self):$/;"	m	class:Worker
core_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^let core_attributes = {'accesskey': [], 'class': [], 'contenteditable': ['true', 'false', ''], 'contextmenu': [], 'dir': ['ltr', 'rtl'], 'draggable': ['true', 'false'], 'hidden': ['hidden', ''], 'id': [], 'lang': lang_tag, 'spellcheck': ['true', 'false', ''], 'style': [], 'tabindex': [], 'title': []}$/;"	v
count	bundle/the_silver_searcher/src/uthash.h	/^   unsigned count;$/;"	m	struct:UT_hash_bucket
cox	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap cox :set <C-R>=&cursorline && &cursorcolumn ? 'nocursorline nocursorcolumn' : 'cursorline cursorcolumn'<CR><CR>$/;"	m
cr	bundle/supertab/plugin/supertab.vim	/^      let cr = (map =~? '\\(^\\|[^)]\\)<cr>')$/;"	v
createWsse	bundle/webapi-vim/autoload/webapi/atom.vim	/^function! s:createWsse(user, pass)$/;"	f
createXml	bundle/webapi-vim/autoload/webapi/atom.vim	/^function! s:createXml(entry)$/;"	f
crend	bundle/vim-endwise/plugin/endwise.vim	/^function! s:crend(always)$/;"	f
cs	bundle/vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
ctrlp#acceptfile	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#acceptfile(...)$/;"	f
ctrlp#bookmarkdir#accept	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#accept(mode, str)$/;"	f
ctrlp#bookmarkdir#add	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#add(dir, ...)$/;"	f
ctrlp#bookmarkdir#id	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#id()$/;"	f
ctrlp#bookmarkdir#init	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#init()$/;"	f
ctrlp#bookmarkdir#remove	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#remove(entries)$/;"	f
ctrlp#buffers	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#buffers(...)$/;"	f
ctrlp#buffertag#accept	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#accept(mode, str)$/;"	f
ctrlp#buffertag#cmd	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#cmd(mode, ...)$/;"	f
ctrlp#buffertag#exit	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#exit()$/;"	f
ctrlp#buffertag#init	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#init(fname)$/;"	f
ctrlp#buffertag#opts	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#opts()$/;"	f
ctrlp#call	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#call(func, ...)$/;"	f
ctrlp#changes#accept	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#accept(mode, str)$/;"	f
ctrlp#changes#cmd	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#cmd(mode, ...)$/;"	f
ctrlp#changes#exit	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#exit()$/;"	f
ctrlp#changes#init	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#init(original_bufnr, bufnr)$/;"	f
ctrlp#clr	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clr(...)$/;"	f
ctrlp#clra	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clra()$/;"	f
ctrlp#complen	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#complen(...)$/;"	f
ctrlp#dir#accept	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#accept(mode, str)$/;"	f
ctrlp#dir#id	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#id()$/;"	f
ctrlp#dir#init	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#init(...)$/;"	f
ctrlp#dirnfile	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#dirnfile(entries)$/;"	f
ctrlp#exit	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#exit()$/;"	f
ctrlp#files	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#files()$/;"	f
ctrlp#getcline	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getcline()$/;"	f
ctrlp#getmarkedlist	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getmarkedlist()$/;"	f
ctrlp#getvar	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getvar(var)$/;"	f
ctrlp#hicheck	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#hicheck(grp, defgrp)$/;"	f
ctrlp#igncwd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#igncwd(cwd)$/;"	f
ctrlp#init	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#init(type, ...)$/;"	f
ctrlp#j2l	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#j2l(nr)$/;"	f
ctrlp#line#accept	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#accept(mode, str)$/;"	f
ctrlp#line#cmd	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#cmd(mode, ...)$/;"	f
ctrlp#line#init	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#init(bufnr)$/;"	f
ctrlp#mixed#id	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#id()$/;"	f
ctrlp#mixed#init	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#init(clim)$/;"	f
ctrlp#modfilecond	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#modfilecond(w)$/;"	f
ctrlp#mrufiles#add	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#add(fn)$/;"	f
ctrlp#mrufiles#bufs	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#bufs()$/;"	f
ctrlp#mrufiles#cachefile	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#cachefile()$/;"	f
ctrlp#mrufiles#init	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#init()$/;"	f
ctrlp#mrufiles#list	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#list(...)$/;"	f
ctrlp#mrufiles#opts	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#opts()$/;"	f
ctrlp#mrufiles#refresh	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#refresh(...)$/;"	f
ctrlp#mrufiles#remove	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#remove(files)$/;"	f
ctrlp#mrufiles#tgrel	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#tgrel()$/;"	f
ctrlp#normcmd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#normcmd(cmd, ...)$/;"	f
ctrlp#nosy	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#nosy()$/;"	f
ctrlp#progress	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#progress(enum, ...)$/;"	f
ctrlp#prtclear	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#prtclear()$/;"	f
ctrlp#quickfix#accept	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#accept(mode, str)$/;"	f
ctrlp#quickfix#id	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#id()$/;"	f
ctrlp#quickfix#init	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#init()$/;"	f
ctrlp#recordhist	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#recordhist()$/;"	f
ctrlp#rmbasedir	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#rmbasedir(items)$/;"	f
ctrlp#rtscript#id	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#id()$/;"	f
ctrlp#rtscript#init	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#init(caching)$/;"	f
ctrlp#setdir	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setdir(path, ...)$/;"	f
ctrlp#setlcdir	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlcdir()$/;"	f
ctrlp#setlines	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlines(...)$/;"	f
ctrlp#statusline	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#statusline()$/;"	f
ctrlp#switchtype	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#switchtype(id)$/;"	f
ctrlp#syntax	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#syntax()$/;"	f
ctrlp#tabcount	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#tabcount()$/;"	f
ctrlp#tag#accept	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#accept(mode, str)$/;"	f
ctrlp#tag#enter	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#enter()$/;"	f
ctrlp#tag#id	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#id()$/;"	f
ctrlp#tag#init	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#init()$/;"	f
ctrlp#undo#accept	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#accept(mode, str)$/;"	f
ctrlp#undo#enter	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#enter()$/;"	f
ctrlp#undo#exit	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#exit()$/;"	f
ctrlp#undo#id	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#id()$/;"	f
ctrlp#undo#init	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#init()$/;"	f
ctrlp#utils#cachedir	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachedir()$/;"	f
ctrlp#utils#cachefile	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachefile(...)$/;"	f
ctrlp#utils#fnesc	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#fnesc(path, type, ...)$/;"	f
ctrlp#utils#glob	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#glob(...)$/;"	f
ctrlp#utils#globpath	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#globpath(...)$/;"	f
ctrlp#utils#lash	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#lash()$/;"	f
ctrlp#utils#mkdir	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#mkdir(dir)$/;"	f
ctrlp#utils#opts	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#opts()$/;"	f
ctrlp#utils#readfile	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#readfile(file)$/;"	f
ctrlp#utils#writecache	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#writecache(lines, ...)$/;"	f
ctx	bundle/webapi-vim/example/google-buzz.vim	/^  let ctx = eval(join(readfile(configfile), ""))$/;"	v
ctx	bundle/webapi-vim/example/google-buzz.vim	/^  let ctx = webapi#oauth#access_token(access_token_url, ctx, {"oauth_verifier": verifier})$/;"	v
ctx	bundle/webapi-vim/example/google-buzz.vim	/^  let ctx = webapi#oauth#request_token(request_token_url, ctx, {"scope": "https:\/\/www.googleapis.com\/auth\/buzz", "oauth_callback": ctx.callback})$/;"	v
ctx	bundle/webapi-vim/example/google-buzz.vim	/^  let ctx.callback = input("callback:")$/;"	v
ctx	bundle/webapi-vim/example/google-buzz.vim	/^  let ctx.consumer_key = input("consumer_key:")$/;"	v
ctx	bundle/webapi-vim/example/google-buzz.vim	/^  let ctx.consumer_secret = input("consumer_secret:")$/;"	v
ctx	bundle/webapi-vim/example/google-buzz.vim	/^  let ctx.domain = input("domain:")$/;"	v
ctx	bundle/webapi-vim/example/google-buzz.vim	/^let ctx = {}$/;"	v
ctx	bundle/webapi-vim/example/twitter.vim	/^  let ctx = eval(join(readfile(configfile), ""))$/;"	v
ctx	bundle/webapi-vim/example/twitter.vim	/^  let ctx = webapi#oauth#access_token(access_token_url, ctx, {"oauth_verifier": pin})$/;"	v
ctx	bundle/webapi-vim/example/twitter.vim	/^  let ctx = webapi#oauth#request_token(request_token_url, ctx)$/;"	v
ctx	bundle/webapi-vim/example/twitter.vim	/^  let ctx.consumer_key = input("consumer_key:")$/;"	v
ctx	bundle/webapi-vim/example/twitter.vim	/^  let ctx.consumer_secret = input("consumer_secret:")$/;"	v
ctx	bundle/webapi-vim/example/twitter.vim	/^let ctx = {}$/;"	v
current_compiler	bundle/vim-bundler/compiler/bundler.vim	/^let current_compiler = "bundler"$/;"	v
current_compiler	bundle/vim-coffee-script/compiler/cake.vim	/^let current_compiler = 'cake'$/;"	v
current_compiler	bundle/vim-coffee-script/compiler/coffee.vim	/^let current_compiler = 'coffee'$/;"	v
current_compiler	bundle/vim-cucumber/compiler/cucumber.vim	/^let current_compiler = "cucumber"$/;"	v
current_compiler	bundle/vim-haml/compiler/haml.vim	/^let current_compiler = "haml"$/;"	v
current_compiler	bundle/vim-haml/compiler/sass.vim	/^let current_compiler = "sass"$/;"	v
current_compiler	bundle/vim-ruby/compiler/eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	bundle/vim-ruby/compiler/rake.vim	/^let current_compiler = "rake"$/;"	v
current_compiler	bundle/vim-ruby/compiler/rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	bundle/vim-ruby/compiler/ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	bundle/vim-ruby/compiler/rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
data	bundle/webapi-vim/example/google-buzz.vim	/^let data = ''$/;"	v
dbext	bundle/dbext_2000/plugin/dbext.vim	/^augroup dbext$/;"	a
dbext#DB_DictionaryCreate	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_DictionaryCreate( drop_dict, which ) "{{{$/;"	f
dbext#DB_auBufDelete	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_auBufDelete(del_buf_nr) "{{{$/;"	f
dbext#DB_auVimLeavePre	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_auVimLeavePre() "{{{$/;"	f
dbext#DB_auVimLeavePreOld	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_auVimLeavePreOld() "{{{$/;"	f
dbext#DB_checkModeline	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_checkModeline()$/;"	f
dbext#DB_commit	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_commit()$/;"	f
dbext#DB_completeSettings	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_completeSettings(ArgLead, CmdLine, CursorPos)$/;"	f
dbext#DB_completeTables	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_completeTables(ArgLead, CmdLine, CursorPos)$/;"	f
dbext#DB_completeVariable	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_completeVariable(ArgLead, CmdLine, CursorPos)$/;"	f
dbext#DB_connect	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_connect()$/;"	f
dbext#DB_describeProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_describeProcedure(...)$/;"	f
dbext#DB_describeProcedurePrompt	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_describeProcedurePrompt()$/;"	f
dbext#DB_describeTable	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_describeTable(...)$/;"	f
dbext#DB_describeTablePrompt	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_describeTablePrompt()$/;"	f
dbext#DB_disconnect	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_disconnect(...)$/;"	f
dbext#DB_disconnectAll	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_disconnectAll()$/;"	f
dbext#DB_execFuncTypeWCheck	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_execFuncTypeWCheck(name,...)$/;"	f
dbext#DB_execFuncWCheck	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_execFuncWCheck(name,...)$/;"	f
dbext#DB_execRangeSql	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_execRangeSql() range$/;"	f
dbext#DB_execSql	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_execSql(query)$/;"	f
dbext#DB_execSqlTopX	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_execSqlTopX(...)$/;"	f
dbext#DB_execSqlWithDefault	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_execSqlWithDefault(...)$/;"	f
dbext#DB_getDictionaryName	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getDictionaryName( which ) "{{{$/;"	f
dbext#DB_getListColumn	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getListColumn(table_name, silent_mode, use_newline_sep ) $/;"	f
dbext#DB_getListConnections	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getListConnections()$/;"	f
dbext#DB_getListProcedure	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getListProcedure(...)$/;"	f
dbext#DB_getListTable	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getListTable(...)$/;"	f
dbext#DB_getListView	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getListView(...)$/;"	f
dbext#DB_getQueryUnderCursor	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getQueryUnderCursor()$/;"	f
dbext#DB_getSqlWithDefault	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getSqlWithDefault(...)$/;"	f
dbext#DB_getWType	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getWType(name)$/;"	f
dbext#DB_getWTypeDefault	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_getWTypeDefault(name)$/;"	f
dbext#DB_historyList	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_historyList()$/;"	f
dbext#DB_listOption	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_listOption(...)$/;"	f
dbext#DB_orientationToggle	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_orientationToggle(...)$/;"	f
dbext#DB_parseQuery	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_parseQuery(query)$/;"	f
dbext#DB_removeVariable	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_removeVariable() range$/;"	f
dbext#DB_rollback	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_rollback()$/;"	f
dbext#DB_runPrevCmd	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_runPrevCmd(...)$/;"	f
dbext#DB_selectTablePrompt	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_selectTablePrompt()$/;"	f
dbext#DB_setMultipleOptions	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_setMultipleOptions(multi_options, ...)$/;"	f
dbext#DB_setTitle	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_setTitle() $/;"	f
dbext#DB_sqlVarAssignment	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_sqlVarAssignment(drop_var, stmt)$/;"	f
dbext#DB_sqlVarList	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_sqlVarList(...)$/;"	f
dbext#DB_sqlVarRangeAssignment	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_sqlVarRangeAssignment(remove_var) range$/;"	f
dbext#DB_switchPrevBuf	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_switchPrevBuf()$/;"	f
dbext#DB_windowClose	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_windowClose(buf_name)$/;"	f
dbext#DB_windowOpen	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_windowOpen()$/;"	f
dbext#DB_windowResize	bundle/dbext_2000/autoload/dbext.vim	/^function! dbext#DB_windowResize()$/;"	f
dbext_dbi#DBI_initialize	bundle/dbext_2000/autoload/dbext_dbi.vim	/^function! dbext_dbi#DBI_initialize()$/;"	f
dbext_dbi#DBI_load_perl_subs	bundle/dbext_2000/autoload/dbext_dbi.vim	/^function! dbext_dbi#DBI_load_perl_subs()$/;"	f
debug	bundle/vim-rails/autoload/rails.vim	/^function! s:debug(str)$/;"	f
decodeEntityReference	bundle/webapi-vim/autoload/webapi/xml.vim	/^function! s:decodeEntityReference(str)$/;"	f
decompress	bundle/the_silver_searcher/src/decompress.c	/^void* decompress(const ag_compression_type zip_type, const void* buf, const int buf_len,$/;"	f
decompress_lwz	bundle/the_silver_searcher/src/decompress.c	/^static void* decompress_lwz(const void* buf, const int buf_len,$/;"	f	file:
decompress_lzma	bundle/the_silver_searcher/src/decompress.c	/^static void* decompress_lzma(const void* buf, const int buf_len,$/;"	f	file:
decompress_zip	bundle/the_silver_searcher/src/decompress.c	/^static void* decompress_zip(const void* buf, const int buf_len,$/;"	f	file:
decompress_zlib	bundle/the_silver_searcher/src/decompress.c	/^static void* decompress_zlib(const void* buf, const int buf_len,$/;"	f	file:
default_role	bundle/html5.vim/autoload/xml/aria.vim	/^let default_role = {$/;"	v
default_role	bundle/html5.vim/autoload/xml/aria.vim	/^let default_role = {}$/;"	v
define_commands	bundle/vim-bundler/plugin/bundler.vim	/^function! s:define_commands()$/;"	f
define_commands	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands()$/;"	f
define_commands	bundle/vim-rake/plugin/rake.vim	/^function! s:define_commands()$/;"	f
define_navcommand	bundle/vim-rails/autoload/rails.vim	/^function! s:define_navcommand(name, projection, ...) abort$/;"	f
delent	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:delent(rfunc)$/;"	f
deleteBookmark	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:deleteBookmark(bm)$/;"	f
dep_from_git	bundle/html5.vim/Makefile	/^dep_from_git = \\$/;"	m
dep_from_svn	bundle/html5.vim/Makefile	/^dep_from_svn = \\$/;"	m
detect_bad_input	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:detect_bad_input()$/;"	f
determine_home_dir	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_home_dir$/;"	F	class:Env
determine_source_directory	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_source_directory$/;"	F	class:Env
determine_target_os	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_target_os$/;"	F	class:Env
determine_vim_dir	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def Env.determine_vim_dir$/;"	F	class:Env
dev	bundle/the_silver_searcher/src/search.h	/^    dev_t dev;$/;"	m	struct:__anon4
dict2list	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:dict2list(dict)$/;"	f
dictindex	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dictindex(dict, expr)$/;"	f
did_javascript_syn_inits	bundle/vim-javascript/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
die	bundle/the_silver_searcher/src/util.c	/^void die(const char *fmt, ...) {$/;"	f
diff_restore	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_restore()$/;"	f
diff_window_count	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count()$/;"	f
difflib	bundle/Gundo/autoload/gundo.py	/^import difflib$/;"	i
diffoff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff()$/;"	f
diffoff_all	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir)$/;"	f
diffthis	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis()$/;"	f
dir_name	bundle/vim-tags/plugin/tags.vim	/^    let dir_name = f[:-6]$/;"	v
dircompl	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dircompl(be, sd)$/;"	f
dirkey_t	bundle/the_silver_searcher/src/search.h	/^} dirkey_t;$/;"	t	typeref:struct:__anon4
disable_maps_and_commands	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:disable_maps_and_commands(file, buf)$/;"	f
disarm	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:disarm(...) abort$/;"	f
dismrk	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dismrk()$/;"	f
dispatch	bundle/vim-dispatch/autoload/dispatch.vim	/^function! s:dispatch(request) abort$/;"	f
dispatch#callback	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#callback(request) abort$/;"	f
dispatch#command_complete	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#command_complete(A, L, P) abort$/;"	f
dispatch#compile_command	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#compile_command(bang, args) abort$/;"	f
dispatch#compiler_for_program	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#compiler_for_program(program) abort$/;"	f
dispatch#compiler_options	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#compiler_options(compiler) abort$/;"	f
dispatch#complete	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#complete(file, ...) abort$/;"	f
dispatch#completed	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#completed(request) abort$/;"	f
dispatch#copen	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#copen(bang) abort$/;"	f
dispatch#expand	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#expand(string) abort$/;"	f
dispatch#focus	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#focus() abort$/;"	f
dispatch#focus_command	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#focus_command(bang, args) abort$/;"	f
dispatch#headless#handle	bundle/vim-dispatch/autoload/dispatch/headless.vim	/^function! dispatch#headless#handle(request) abort$/;"	f
dispatch#isolate	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#isolate(...)$/;"	f
dispatch#iterm#handle	bundle/vim-dispatch/autoload/dispatch/iterm.vim	/^function! dispatch#iterm#handle(request) abort$/;"	f
dispatch#iterm#spawn	bundle/vim-dispatch/autoload/dispatch/iterm.vim	/^function! dispatch#iterm#spawn(command, request, activate) abort$/;"	f
dispatch#prepare_make	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#prepare_make(request, ...) abort$/;"	f
dispatch#screen#handle	bundle/vim-dispatch/autoload/dispatch/screen.vim	/^function! dispatch#screen#handle(request) abort$/;"	f
dispatch#screen#spawn	bundle/vim-dispatch/autoload/dispatch/screen.vim	/^function! dispatch#screen#spawn(command, request) abort$/;"	f
dispatch#set_title	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#set_title(request)$/;"	f
dispatch#shellescape	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#shellescape(...) abort$/;"	f
dispatch#shellpipe	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#shellpipe(file) abort$/;"	f
dispatch#slash	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#slash() abort$/;"	f
dispatch#start	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#start(command, ...) abort$/;"	f
dispatch#tmux#handle	bundle/vim-dispatch/autoload/dispatch/tmux.vim	/^function! dispatch#tmux#handle(request) abort$/;"	f
dispatch#tmux#make	bundle/vim-dispatch/autoload/dispatch/tmux.vim	/^function! dispatch#tmux#make(request) abort$/;"	f
dispatch#tmux#poll	bundle/vim-dispatch/autoload/dispatch/tmux.vim	/^function! dispatch#tmux#poll() abort$/;"	f
dispatch#uniq	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#uniq(list) abort$/;"	f
dispatch#vim_executable	bundle/vim-dispatch/autoload/dispatch.vim	/^function! dispatch#vim_executable() abort$/;"	f
dispatch#windows#handle	bundle/vim-dispatch/autoload/dispatch/windows.vim	/^function! dispatch#windows#handle(request) abort$/;"	f
dispatch#windows#make	bundle/vim-dispatch/autoload/dispatch/windows.vim	/^function! dispatch#windows#make(request) abort$/;"	f
dispatch#windows#spawn	bundle/vim-dispatch/autoload/dispatch/windows.vim	/^function! dispatch#windows#spawn(title, exec, background) abort$/;"	f
dispatch#x11#handle	bundle/vim-dispatch/autoload/dispatch/x11.vim	/^function! dispatch#x11#handle(request) abort$/;"	f
dispatch_tmux	bundle/vim-dispatch/autoload/dispatch/tmux.vim	/^augroup dispatch_tmux$/;"	a
displayHelp	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:displayHelp()$/;"	f
display_error	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:display_error()$/;"	f
djump	bundle/vim-rails/autoload/rails.vim	/^function! s:djump(def)$/;"	f
document_structure	bundle/html5.vim/autoload/xml/aria.vim	/^let document_structure = ['article', 'columnheader', 'definition', 'directory', 'document', 'group', 'heading', 'img', 'list', 'listitem', 'math', 'note', 'presentation', 'region', 'row', 'rowheader', 'separator']$/;"	v
document_structure	bundle/html5.vim/autoload/xml/html5.vim	/^    let document_structure = ['article', 'columnheader', 'definition', 'directory', 'document', 'group', 'heading', 'img', 'list', 'listitem', 'math', 'note', 'presentation', 'region', 'row', 'rowheader', 'separator']$/;"	v
dohighlight	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dohighlight()$/;"	f
dom	bundle/webapi-vim/example/gistview.vim	/^let dom = webapi#html#parse(obj.div)$/;"	v
dom	bundle/webapi-vim/example/weather.vim	/^let dom = webapi#xml#parseURL(printf('http:\/\/www.google.com\/ig\/api?weather=%s', webapi#http#encodeURIComponent(loc)))$/;"	v
done_adding_files	bundle/the_silver_searcher/src/search.h	/^int done_adding_files;$/;"	v
dosigns	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dosigns()$/;"	f
dosurround	bundle/vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
dotcmp	bundle/vim-rails/autoload/rails.vim	/^function! s:dotcmp(i1, i2)$/;"	f
dprint	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
drag_and_drop_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let drag_and_drop_attributes = {'aria-dropeffect': ['copy', 'move', 'link', 'execute', 'popup', 'none'], 'aria-grabbed': ['true', 'false', 'undefined']}$/;"	v
draw_edges	bundle/Gundo/autoload/gundo.py	/^def draw_edges(edges, nodeline, interline):$/;"	f
ds	bundle/vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
dump	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:dump(bang, lnum, value) abort$/;"	f
dump	bundle/webapi-vim/example/gistview.vim	/^function! s:dump(node, syntax)$/;"	f
dumpmsg	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:dumpmsg(bang, count, value) abort$/;"	f
echo	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echo(msg)$/;"	f
echoWarning	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echoWarning(msg)$/;"	f
edit	bundle/vim-rails/autoload/rails.vim	/^function! s:edit(cmd,file,...)$/;"	f
editcmdfor	bundle/vim-rails/autoload/rails.vim	/^function! s:editcmdfor(cmd)$/;"	f
elapsed	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:elapsed(nr)$/;"	f
em_insert_new_method	bundle/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:em_insert_new_method(name, selection, parameters, retvals, block_end)$/;"	f
encodeEntityReference	bundle/webapi-vim/autoload/webapi/xml.vim	/^function! s:encodeEntityReference(str)$/;"	f
end	bundle/the_silver_searcher/src/util.h	/^    int end; \/* and where it ends *\/$/;"	m	struct:__anon6
end_latency_measure	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:end_latency_measure()$/;"	f
endof	bundle/vim-rails/autoload/rails.vim	/^function! s:endof(lnum)$/;"	f
endswith	bundle/vim-rails/autoload/rails.vim	/^function! s:endswith(string,suffix)$/;"	f
entries	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:entries(path)$/;"	f
entry	bundle/webapi-vim/example/hatenadiary.vim	/^let entry = atom#getEntry(id, hatena_id, password)$/;"	v
entry	bundle/webapi-vim/example/hatenadiary.vim	/^let entry = atom#newEntry()$/;"	v
entry	bundle/webapi-vim/example/livedoor.vim	/^let entry = atom#newEntry()$/;"	v
entry_template.setContentFromFile	bundle/webapi-vim/autoload/webapi/atom.vim	/^function s:entry_template.setContentFromFile(file) dict$/;"	f
environment	bundle/vim-rails/autoload/rails.vim	/^function! s:environment()$/;"	f
error	bundle/vim-rails/autoload/rails.vim	/^function! s:error(str)$/;"	f
error	bundle/vim-rails/plugin/rails.vim	/^function! s:error(str)$/;"	f
escape	bundle/vim-dispatch/autoload/dispatch/iterm.vim	/^function! s:escape(string)$/;"	f
escape	bundle/vim-dispatch/autoload/dispatch/windows.vim	/^function! s:escape(str)$/;"	f
escarg	bundle/vim-rails/autoload/rails.vim	/^function! s:escarg(p)$/;"	f
esccmd	bundle/vim-rails/autoload/rails.vim	/^function! s:esccmd(p)$/;"	f
esctagscmd	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:esctagscmd(bin, args, ...)$/;"	f
event_attributes_value	bundle/html5.vim/autoload/xml/html5.vim	/^    let event_attributes_value = {$/;"	v
event_handler_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^    let event_handler_attributes = {'onabort': [], 'onblur': [], 'oncanplay': [], 'oncanplaythrough': [], 'onchange': [], 'onclick': [], 'oncontextmenu': [], 'ondblclick': [], 'ondrag': [], 'ondragend': [], 'ondragenter': [], 'ondragleave': [], 'ondragover': [], 'ondragstart': [], 'ondrop': [], 'ondurationchange': [], 'onemptied': [], 'onended': [], 'onerror': [], 'onfocus': [], 'onformchange': [], 'onforminput': [], 'oninput': [], 'oninvalid': [], 'onkeydown': [], 'onkeypress': [], 'onkeyup': [], 'onload': [], 'onloadeddata': [], 'onloadedmetadata': [], 'onloadstart': [], 'onmousedown': [], 'onmousemove': [], 'onmouseout': [], 'onmouseover': [], 'onmouseup': [], 'onmousewheel': [], 'onpause': [], 'onplay': [], 'onplaying': [], 'onprogress': [], 'onratechange': [], 'onreadystatechange': [], 'onscroll': [], 'onseeked': [], 'onseeking': [], 'onselect': [], 'onshow': [], 'onstalled': [], 'onsubmit': [], 'onsuspend': [], 'ontimeupdate': [], 'onvolumechange': [], 'onwaiting': []}$/;"	v
evil_hardcoded_ignore_files	bundle/the_silver_searcher/src/ignore.c	/^const char *evil_hardcoded_ignore_files[] = {$/;"	v
excl	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:excl(fn)$/;"	f
exe	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function s:exe()$/;"	f
exe	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^function s:exe()$/;"	f
execextvar	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:execextvar(key)$/;"	f
exectags	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectags(cmd)$/;"	f
exectagsonfile	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectagsonfile(fname, ftype)$/;"	f
execute	bundle/vim-l9/autoload/l9/async.py	/^    def execute(self, var_key, var_command, var_cwd, var_input, var_appends):$/;"	m	class:Asyncer
execute	bundle/vim-l9/autoload/l9/async.py	/^    def execute(self, worker):$/;"	m	class:Executor
existing	bundle/supertab/plugin/supertab.vim	/^    let existing = maparg('<tab>', 'i')$/;"	v
exit	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:exit()$/;"	f
exit_visual_mode	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:exit_visual_mode()$/;"	f
expand	bundle/vim-dispatch/autoload/dispatch.vim	/^function! s:expand(string)$/;"	f
expand_mult	bundle/the_silver_searcher/src/uthash.h	/^   unsigned expand_mult;$/;"	m	struct:UT_hash_bucket
expand_placeholders	bundle/vim-rails/autoload/rails.vim	/^function! s:expand_placeholders(string, placeholders)$/;"	f
expr_map	bundle/supertab/plugin/supertab.vim	/^      let expr_map = has_key(map_dict, 'expr') && map_dict.expr$/;"	v
expr_map	bundle/supertab/plugin/supertab.vim	/^      let expr_map = maparg('<cr>', 'i') =~? '\\<cr>'$/;"	v
expr_map	bundle/supertab/plugin/supertab.vim	/^    let expr_map = 0$/;"	v
extend_projection	bundle/vim-rails/autoload/rails.vim	/^function! s:extend_projection(dest, src)$/;"	f
extractafter	bundle/vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
extractbefore	bundle/vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
extractdbvar	bundle/vim-rails/autoload/rails.vim	/^function! s:extractdbvar(str,arg)$/;"	f
feedkeys	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:feedkeys(keys)$/;"	f
fetch_github	bundle/html5.vim/Makefile	/^fetch_github = \\$/;"	m
fetch_local	bundle/html5.vim/Makefile	/^fetch_local = @cp -v $(1) $(2) \\$/;"	m
fetch_url	bundle/html5.vim/Makefile	/^fetch_url = \\$/;"	m
fgetln	bundle/the_silver_searcher/src/util.c	/^char *fgetln(FILE *fp, size_t *lenp) {$/;"	f
file	bundle/vim-dispatch/autoload/dispatch.vim	/^function! s:file(request) abort$/;"	f
file_getline	bundle/vim-rails/autoload/rails.vim	/^function! s:file_getline(lnum,...) dict abort$/;"	f
file_lines	bundle/vim-rails/autoload/rails.vim	/^function! s:file_lines() dict abort$/;"	f
file_name	bundle/vim-rails/autoload/rails.vim	/^function! s:file_name() dict abort$/;"	f
file_path	bundle/vim-rails/autoload/rails.vim	/^function! s:file_path() dict abort$/;"	f
file_search_regex	bundle/the_silver_searcher/src/options.h	/^    pcre *file_search_regex;$/;"	m	struct:__anon2
file_search_regex_extra	bundle/the_silver_searcher/src/options.h	/^    pcre_extra *file_search_regex_extra;$/;"	m	struct:__anon2
file_search_string	bundle/the_silver_searcher/src/options.h	/^    const char *file_search_string;$/;"	m	struct:__anon2
filename_filter	bundle/the_silver_searcher/src/ignore.c	/^int filename_filter(const char *path, const struct dirent *dir, void *baton) {$/;"	f
filename_ignore_search	bundle/the_silver_searcher/src/ignore.c	/^static int filename_ignore_search(const ignores *ig, const char *filename) {$/;"	f	file:
files_ready	bundle/the_silver_searcher/src/search.h	/^pthread_cond_t files_ready;$/;"	v
filter	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:filter(tags)$/;"	f
filter_fp	bundle/the_silver_searcher/src/scandir.h	/^typedef int (*filter_fp)(const char *path, const struct dirent *, void *);$/;"	t
filterop	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:filterop(type) abort$/;"	f
find	autoload/pathogen.vim	/^function! s:find(count,cmd,file,lcd) " {{{1$/;"	f
find	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:find(count,cmd,file,lcd)$/;"	f
find_next	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:find_next(text)$/;"	f
find_root	bundle/vim-rake/plugin/rake.vim	/^function! s:find_root(path) abort$/;"	f
find_target_directory	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def find_target_directory$/;"	f	class:TargetDirectory
findamethod	bundle/vim-rails/autoload/rails.vim	/^function! s:findamethod(func,repl)$/;"	f
findasymbol	bundle/vim-rails/autoload/rails.vim	/^function! s:findasymbol(sym,repl)$/;"	f
findcmdfor	bundle/vim-rails/autoload/rails.vim	/^function! s:findcmdfor(cmd)$/;"	f
findcommon	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findcommon(items, seed)$/;"	f
findcount	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:findcount(str)$/;"	f
findedit	bundle/vim-rails/autoload/rails.vim	/^function! s:findedit(cmd,files,...) abort$/;"	f
finder	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def self.finder$/;"	F	class:TargetDirectory
findfromview	bundle/vim-rails/autoload/rails.vim	/^function! s:findfromview(func,repl)$/;"	f
findinrtp	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:findinrtp(path)$/;"	f
findit	bundle/vim-rails/autoload/rails.vim	/^function! s:findit(pat,repl)$/;"	f
findlayout	bundle/vim-rails/autoload/rails.vim	/^function! s:findlayout(name)$/;"	f
findroot	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findroot(curr, mark, depth, type)$/;"	f
findview	bundle/vim-rails/autoload/rails.vim	/^function! s:findview(name)$/;"	f
first_file	bundle/vim-rake/plugin/rake.vim	/^function! s:first_file(choices)$/;"	f
first_file_match	bundle/the_silver_searcher/src/print.c	/^int first_file_match = 1;$/;"	v
fix_long_right_edges	bundle/Gundo/autoload/gundo.py	/^def fix_long_right_edges(edges):$/;"	f
fixindent	bundle/vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
fixturesEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:fixturesEdit(cmd,...)$/;"	f
fixturesList	bundle/vim-rails/autoload/rails.vim	/^function! s:fixturesList(A,L,P)$/;"	f
fixup	bundle/webapi-vim/autoload/webapi/json.vim	/^function! s:fixup(val, tmp)$/;"	f
flatten	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:flatten(tree, cur)$/;"	f
flockfile	bundle/the_silver_searcher/src/util.c	/^#define flockfile(/;"	d	file:
flow_elements	bundle/html5.vim/autoload/xml/html5.vim	/^let flow_elements = phrasing_elements + ['p', 'hr', 'pre', 'ul', 'ol', 'dl', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hgroup', 'address', 'blockquote', 'ins', 'del', 'object', 'main', 'map', 'noscript', 'section', 'nav', 'article', 'aside', 'header', 'footer', 'video', 'audio', 'figure', 'table', 'template', 'form', 'fieldset', 'menu', 'canvas', 'details']$/;"	v
fmt	bundle/Gundo/autoload/gundo.py	/^    def fmt(t, c):$/;"	f	function:age
fnameescape	bundle/vim-bundler/plugin/bundler.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	bundle/vim-rails/autoload/rails.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	bundle/vim-rake/plugin/rake.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:fnameescape(file) abort$/;"	f
fnames	bundle/project-1.4.1/plugin/project.vim	/^                let fnames=Project_GetAllFnames(a:recurse, line('.'), ' ')$/;"	v
fnesc	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:fnesc(...)$/;"	f
fnmatch	bundle/the_silver_searcher/src/ignore.c	/^# define fnmatch(/;"	d	file:
fnmatch_flags	bundle/the_silver_searcher/src/ignore.c	/^const int fnmatch_flags = 0 & FNM_PATHNAME;$/;"	v
follow_symlinks	bundle/the_silver_searcher/src/options.h	/^    int follow_symlinks;$/;"	m	struct:__anon2
foo	bundle/vim-ruby/spec/indent/blocks_spec.rb	/^      def foo$/;"	f
foo	bundle/vim-ruby/spec/indent/blocks_spec.rb	/^      def foo(job)$/;"	f
format	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:format(...)$/;"	f
format	bundle/vim-rails/autoload/rails.vim	/^function! s:format()$/;"	f
format_gist	bundle/Gist.vim/autoload/gist.vim	/^function! s:format_gist(gist)$/;"	f
formatline	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:formatline(str)$/;"	f
formatul	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:formatul(...)$/;"	f
from_value	bundle/webapi-vim/autoload/webapi/xmlrpc.vim	/^function! s:from_value(value)$/;"	f
fugitive	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#detect	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#detect(path)$/;"	f
fugitive#extract_git_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#foldtext	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#head	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#head(...)$/;"	f
fugitive#is_git_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#reload_status	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...)$/;"	f
fugitive#statusline	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...)$/;"	f
fugitive_blame	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_foldtext	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_foldtext$/;"	a
fugitive_remove	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_temp	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
fugitive_utility	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_utility$/;"	a
function	bundle/vim-bundler/plugin/bundler.vim	/^function! s:function(name) abort$/;"	f
function	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
function	bundle/vim-rails/autoload/rails.vim	/^function! s:function(name)$/;"	f
function	bundle/vim-rails/plugin/rails.vim	/^function! s:function(name)$/;"	f
function	bundle/vim-rake/plugin/rake.vim	/^function! s:function(name) abort$/;"	f
function	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:function(name) abort$/;"	f
funlockfile	bundle/the_silver_searcher/src/util.c	/^#define funlockfile(/;"	d	file:
fuzzyglob	bundle/vim-rails/autoload/rails.vim	/^function! s:fuzzyglob(arg)$/;"	f
fuzzyglob	bundle/vim-rake/plugin/rake.vim	/^function! s:fuzzyglob(arg)$/;"	f
g!	bundle/vim-scriptease/plugin/scriptease.vim	/^nmap g! <Plug>ScripteaseFilter$/;"	m
g!!	bundle/vim-scriptease/plugin/scriptease.vim	/^nmap g!! <Plug>ScripteaseFilter_$/;"	m
g%	bundle/matchit/plugin/matchit.vim	/^nnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'n') <CR>$/;"	m
g%	bundle/matchit/plugin/matchit.vim	/^onoremap <silent> g% v:<C-U>call <SID>Match_wrapper('',0,'o') <CR>$/;"	m
g%	bundle/matchit/plugin/matchit.vim	/^vnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'v') <CR>m'gv``$/;"	m
g:NERDTreeAutoDeleteBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeCreator	bundle/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirNode	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeFileNode	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeIgnore	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeKeyMap	bundle/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMenuController	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeOpener	bundle/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	bundle/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreeSortOrder	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"$/;"	v
g:ST_WIN_CMD	bundle/genutils-2.5/autoload/genutils.vim	/^let g:ST_WIN_CMD = 0 | let g:ST_WIN_SH = 1 | let g:ST_UNIX = 2$/;"	v
g:SuperTabClosePreviewOnPopupClose	bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabClosePreviewOnPopupClose = 0$/;"	v
g:SuperTabCompletionContexts	bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabCompletionContexts = ['s:ContextText']$/;"	v
g:SuperTabContextDefaultCompletionType	bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabContextDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabCrMapping	bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabCrMapping = 1$/;"	v
g:SuperTabDefaultCompletionType	bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabLongestEnhanced	bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabLongestEnhanced = 0$/;"	v
g:SuperTabLongestHighlight	bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabLongestHighlight = 0$/;"	v
g:SuperTabMappingBackward	bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabMappingBackward = '<s-tab>'$/;"	v
g:SuperTabMappingForward	bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabMappingForward = '<tab>'$/;"	v
g:SuperTabMappingTabLiteral	bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabMappingTabLiteral = '<c-tab>'$/;"	v
g:SuperTabNoCompleteAfter	bundle/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = ['^', '\\s']$/;"	v
g:SuperTabNoCompleteAfter	bundle/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = []$/;"	v
g:SuperTabNoCompleteBefore	bundle/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = ['\\k']$/;"	v
g:SuperTabNoCompleteBefore	bundle/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = []$/;"	v
g:SuperTabRetainCompletionDuration	bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabRetainCompletionDuration = 'insert'$/;"	v
g:SuperTabUndoBreak	bundle/supertab/plugin/supertab.vim	/^    let g:SuperTabUndoBreak = 0$/;"	v
g:SyntasticAutoloclistNotifier	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^let g:SyntasticAutoloclistNotifier = {}$/;"	v
g:SyntasticBalloonsNotifier	bundle/syntastic/plugin/syntastic/balloons.vim	/^let g:SyntasticBalloonsNotifier = {}$/;"	v
g:SyntasticChecker	bundle/syntastic/plugin/syntastic/checker.vim	/^let g:SyntasticChecker = {}$/;"	v
g:SyntasticCursorNotifier	bundle/syntastic/plugin/syntastic/cursor.vim	/^let g:SyntasticCursorNotifier = {}$/;"	v
g:SyntasticHighlightingNotifier	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let g:SyntasticHighlightingNotifier = {}$/;"	v
g:SyntasticLoclist	bundle/syntastic/plugin/syntastic/loclist.vim	/^let g:SyntasticLoclist = {}$/;"	v
g:SyntasticMakeprgBuilder	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^let g:SyntasticMakeprgBuilder = {}$/;"	v
g:SyntasticModeMap	bundle/syntastic/plugin/syntastic/modemap.vim	/^let g:SyntasticModeMap = {}$/;"	v
g:SyntasticNotifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let g:SyntasticNotifiers = {}$/;"	v
g:SyntasticRegistry	bundle/syntastic/plugin/syntastic/registry.vim	/^let g:SyntasticRegistry = {}$/;"	v
g:SyntasticSignsNotifier	bundle/syntastic/plugin/syntastic/signs.vim	/^let g:SyntasticSignsNotifier = {}$/;"	v
g:aria_attributes_complete	bundle/html5.vim/autoload/htmlcomplete.vim	/^    let g:aria_attributes_complete = 1$/;"	v
g:autoloaded_dispatch	bundle/vim-dispatch/autoload/dispatch.vim	/^let g:autoloaded_dispatch = 1$/;"	v
g:autoloaded_dispatch_headless	bundle/vim-dispatch/autoload/dispatch/headless.vim	/^let g:autoloaded_dispatch_headless = 1$/;"	v
g:autoloaded_dispatch_iterm	bundle/vim-dispatch/autoload/dispatch/iterm.vim	/^let g:autoloaded_dispatch_iterm = 1$/;"	v
g:autoloaded_dispatch_screen	bundle/vim-dispatch/autoload/dispatch/screen.vim	/^let g:autoloaded_dispatch_screen = 1$/;"	v
g:autoloaded_dispatch_tmux	bundle/vim-dispatch/autoload/dispatch/tmux.vim	/^let g:autoloaded_dispatch_tmux = 1$/;"	v
g:autoloaded_dispatch_windows	bundle/vim-dispatch/autoload/dispatch/windows.vim	/^let g:autoloaded_dispatch_windows = 1$/;"	v
g:autoloaded_dispatch_x11	bundle/vim-dispatch/autoload/dispatch/x11.vim	/^let g:autoloaded_dispatch_x11 = 1$/;"	v
g:autoloaded_rails	bundle/vim-rails/autoload/rails.vim	/^let g:autoloaded_rails = '5.0'$/;"	v
g:colors_name	colors/codeschool.vim	/^let g:colors_name = "Code School 3"$/;"	v
g:colors_name	colors/github.vim	/^let g:colors_name="github"$/;"	v
g:colors_name	colors/grb256.vim	/^let g:colors_name = "grb256"$/;"	v
g:colors_name	colors/guardian.vim	/^let g:colors_name = "Guardian"$/;"	v
g:colors_name	colors/jgb256.vim	/^let g:colors_name="desert"$/;"	v
g:colors_name	colors/railscasts.vim	/^let g:colors_name = "railscasts"$/;"	v
g:cucumber_languages	bundle/vim-cucumber/syntax/cucumber.vim	/^let g:cucumber_languages = {$/;"	v
g:dbext_default_menu_mode	bundle/dbext_2000/plugin/dbext.vim	/^    let g:dbext_default_menu_mode = 3$/;"	v
g:dbext_default_usermaps	bundle/dbext_2000/plugin/dbext.vim	/^    let g:dbext_default_usermaps = 1$/;"	v
g:dbext_map_or_cmd	bundle/dbext_2000/plugin/dbext.vim	/^        let g:dbext_map_or_cmd = 'cmd'$/;"	v
g:dbext_map_or_cmd	bundle/dbext_2000/plugin/dbext.vim	/^        let g:dbext_map_or_cmd = 'map'$/;"	v
g:dbext_map_prefix	bundle/dbext_2000/plugin/dbext.vim	/^    let g:dbext_map_prefix = '<Leader>s'$/;"	v
g:dbext_rows_affected	bundle/dbext_2000/plugin/dbext.vim	/^    let g:dbext_rows_affected = 0$/;"	v
g:did_ft	bundle/snipmate.vim/plugin/snipMate.vim	/^let g:did_ft = {}$/;"	v
g:did_ruby_ftplugin_functions	bundle/vim-ruby/ftplugin/ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:dispatch_handlers	bundle/vim-dispatch/plugin/dispatch.vim	/^  let g:dispatch_handlers = [$/;"	v
g:eruby_default_subtype	bundle/vim-ruby/ftplugin/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	bundle/vim-ruby/syntax/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:fugitive_git_executable	bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:github_user	bundle/Gist.vim/autoload/gist.vim	/^    let g:github_user = $GITHUB_USER$/;"	v
g:github_user	bundle/Gist.vim/autoload/gist.vim	/^  let g:github_user = substitute(s:system('git config --get github.user'), "\\n", '', '')$/;"	v
g:gundo_auto_preview	bundle/Gundo/autoload/gundo.vim	/^    let g:gundo_auto_preview = 1$/;"	v
g:gundo_close_on_revert	bundle/Gundo/autoload/gundo.vim	/^    let g:gundo_close_on_revert = 0$/;"	v
g:gundo_help	bundle/Gundo/autoload/gundo.vim	/^    let g:gundo_help = 1$/;"	v
g:gundo_map_move_newer	bundle/Gundo/autoload/gundo.vim	/^    let g:gundo_map_move_newer = 'k'$/;"	v
g:gundo_map_move_older	bundle/Gundo/autoload/gundo.vim	/^    let g:gundo_map_move_older = 'j'$/;"	v
g:gundo_playback_delay	bundle/Gundo/autoload/gundo.vim	/^    let g:gundo_playback_delay = 60$/;"	v
g:gundo_prefer_python3	bundle/Gundo/autoload/gundo.vim	/^    let g:gundo_prefer_python3 = 0$/;"	v
g:gundo_preview_bottom	bundle/Gundo/autoload/gundo.vim	/^    let g:gundo_preview_bottom = 0$/;"	v
g:gundo_preview_height	bundle/Gundo/autoload/gundo.vim	/^    let g:gundo_preview_height = 15$/;"	v
g:gundo_py_loaded	bundle/Gundo/autoload/gundo.vim	/^        let g:gundo_py_loaded = 1$/;"	v
g:gundo_right	bundle/Gundo/autoload/gundo.vim	/^    let g:gundo_right = 0$/;"	v
g:gundo_width	bundle/Gundo/autoload/gundo.vim	/^    let g:gundo_width = 45$/;"	v
g:haml_self_closing_tags	bundle/vim-haml/indent/haml.vim	/^  let g:haml_self_closing_tags = 'base|link|meta|br|hr|img|input'$/;"	v
g:html5_aria_attributes_complete	bundle/html5.vim/autoload/xml/html5.vim	/^    let g:html5_aria_attributes_complete = 1$/;"	v
g:html5_event_handler_attributes_complete	bundle/html5.vim/autoload/xml/html5.vim	/^    let g:html5_event_handler_attributes_complete = 1$/;"	v
g:html5_microdata_attributes_complete	bundle/html5.vim/autoload/xml/html5.vim	/^    let g:html5_microdata_attributes_complete = 1$/;"	v
g:html5_rdfa_attributes_complete	bundle/html5.vim/autoload/xml/html5.vim	/^    let g:html5_rdfa_attributes_complete = 1$/;"	v
g:javascript_conceal	bundle/vim-javascript/syntax/javascript.vim	/^  let g:javascript_conceal = 0$/;"	v
g:loaded_autoload_l9	bundle/vim-l9/autoload/l9.vim	/^let g:loaded_autoload_l9 = 1$/;"	v
g:loaded_bundler	bundle/vim-bundler/plugin/bundler.vim	/^let g:loaded_bundler = 1$/;"	v
g:loaded_ctrlp	bundle/ctrlp.vim/plugin/ctrlp.vim	/^let g:loaded_ctrlp = 1$/;"	v
g:loaded_ctrlp_bookmarkdir	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let g:loaded_ctrlp_bookmarkdir = 1$/;"	v
g:loaded_ctrlp_buftag	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let g:loaded_ctrlp_buftag = 1$/;"	v
g:loaded_ctrlp_changes	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^let g:loaded_ctrlp_changes = 1$/;"	v
g:loaded_ctrlp_line	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^let g:loaded_ctrlp_line = 1$/;"	v
g:loaded_ctrlp_quickfix	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let g:loaded_ctrlp_quickfix = 1$/;"	v
g:loaded_ctrlp_tag	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^let g:loaded_ctrlp_tag = 1$/;"	v
g:loaded_ctrlp_undo	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^let g:loaded_ctrlp_undo = 1$/;"	v
g:loaded_dbext	bundle/dbext_2000/plugin/dbext.vim	/^let g:loaded_dbext = 2000$/;"	v
g:loaded_dbext_auto	bundle/dbext_2000/autoload/dbext.vim	/^let g:loaded_dbext_auto = 2000$/;"	v
g:loaded_dbext_dbi	bundle/dbext_2000/autoload/dbext_dbi.vim	/^    let g:loaded_dbext_dbi = -1$/;"	v
g:loaded_dbext_dbi	bundle/dbext_2000/autoload/dbext_dbi.vim	/^let g:loaded_dbext_dbi = 2000$/;"	v
g:loaded_dbext_dbi_msg	bundle/dbext_2000/autoload/dbext_dbi.vim	/^    let g:loaded_dbext_dbi_msg = 'Vim does not have perl support enabled'$/;"	v
g:loaded_dispatch	bundle/vim-dispatch/plugin/dispatch.vim	/^let g:loaded_dispatch = 1$/;"	v
g:loaded_endwise	bundle/vim-endwise/plugin/endwise.vim	/^let g:loaded_endwise = 1$/;"	v
g:loaded_fugitive	bundle/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_gist_vim	bundle/Gist.vim/plugin/gist.vim	/^let g:loaded_gist_vim = 1$/;"	v
g:loaded_nerdtree_autoload	bundle/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_pathogen	autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:loaded_rails	bundle/vim-rails/plugin/rails.vim	/^let g:loaded_rails = 1$/;"	v
g:loaded_rake	bundle/vim-rake/plugin/rake.vim	/^let g:loaded_rake = 1$/;"	v
g:loaded_scriptease	bundle/vim-scriptease/plugin/scriptease.vim	/^let g:loaded_scriptease = 1$/;"	v
g:loaded_slime	bundle/vim-slime/plugin/slime.vim	/^let g:loaded_slime = 1$/;"	v
g:loaded_surround	bundle/vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_syntastic_ada_gcc_checker	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^let g:loaded_syntastic_ada_gcc_checker = 1$/;"	v
g:loaded_syntastic_applescript_osacompile_checker	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^let g:loaded_syntastic_applescript_osacompile_checker=1$/;"	v
g:loaded_syntastic_asciidoc_asciidoc_checker	bundle/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let g:loaded_syntastic_asciidoc_asciidoc_checker = 1$/;"	v
g:loaded_syntastic_c_autoload	bundle/syntastic/autoload/syntastic/c.vim	/^let g:loaded_syntastic_c_autoload = 1$/;"	v
g:loaded_syntastic_c_checkpatch_checker	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^let g:loaded_syntastic_c_checkpatch_checker = 1$/;"	v
g:loaded_syntastic_c_gcc_checker	bundle/syntastic/syntax_checkers/c/gcc.vim	/^let g:loaded_syntastic_c_gcc_checker = 1$/;"	v
g:loaded_syntastic_c_make_checker	bundle/syntastic/syntax_checkers/c/make.vim	/^let g:loaded_syntastic_c_make_checker = 1$/;"	v
g:loaded_syntastic_c_oclint_checker	bundle/syntastic/syntax_checkers/c/oclint.vim	/^let g:loaded_syntastic_c_oclint_checker = 1$/;"	v
g:loaded_syntastic_c_sparse_checker	bundle/syntastic/syntax_checkers/c/sparse.vim	/^let g:loaded_syntastic_c_sparse_checker = 1$/;"	v
g:loaded_syntastic_c_splint_checker	bundle/syntastic/syntax_checkers/c/splint.vim	/^let g:loaded_syntastic_c_splint_checker = 1$/;"	v
g:loaded_syntastic_c_ycm_checker	bundle/syntastic/syntax_checkers/c/ycm.vim	/^let g:loaded_syntastic_c_ycm_checker = 1$/;"	v
g:loaded_syntastic_checker	bundle/syntastic/plugin/syntastic/checker.vim	/^let g:loaded_syntastic_checker = 1$/;"	v
g:loaded_syntastic_co_coco_checker	bundle/syntastic/syntax_checkers/co/coco.vim	/^let g:loaded_syntastic_co_coco_checker=1$/;"	v
g:loaded_syntastic_cobol_cobc_checker	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^let g:loaded_syntastic_cobol_cobc_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffee_checker	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^let g:loaded_syntastic_coffee_coffee_checker=1$/;"	v
g:loaded_syntastic_coffee_coffeelint_checker	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let g:loaded_syntastic_coffee_coffeelint_checker=1$/;"	v
g:loaded_syntastic_coq_coqtop_checker	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^let g:loaded_syntastic_coq_coqtop_checker=1$/;"	v
g:loaded_syntastic_cpp_cpplint_checker	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^let g:loaded_syntastic_cpp_cpplint_checker = 1$/;"	v
g:loaded_syntastic_cpp_gcc_checker	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^let g:loaded_syntastic_cpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_cpp_oclint_checker	bundle/syntastic/syntax_checkers/cpp/oclint.vim	/^let g:loaded_syntastic_cpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_cpp_ycm_checker	bundle/syntastic/syntax_checkers/cpp/ycm.vim	/^let g:loaded_syntastic_cpp_ycm_checker = 1$/;"	v
g:loaded_syntastic_cs_mcs_checker	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^let g:loaded_syntastic_cs_mcs_checker=1$/;"	v
g:loaded_syntastic_css_csslint_checker	bundle/syntastic/syntax_checkers/css/csslint.vim	/^let g:loaded_syntastic_css_csslint_checker=1$/;"	v
g:loaded_syntastic_css_phpcs_checker	bundle/syntastic/syntax_checkers/css/phpcs.vim	/^let g:loaded_syntastic_css_phpcs_checker=1$/;"	v
g:loaded_syntastic_css_prettycss_checker	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^let g:loaded_syntastic_css_prettycss_checker=1$/;"	v
g:loaded_syntastic_cucumber_cucumber_checker	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let g:loaded_syntastic_cucumber_cucumber_checker=1$/;"	v
g:loaded_syntastic_cuda_nvcc_checker	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^let g:loaded_syntastic_cuda_nvcc_checker=1$/;"	v
g:loaded_syntastic_d_dmd_checker	bundle/syntastic/syntax_checkers/d/dmd.vim	/^let g:loaded_syntastic_d_dmd_checker = 1$/;"	v
g:loaded_syntastic_dart_dart_analyzer_checker	bundle/syntastic/syntax_checkers/dart/dart_analyzer.vim	/^let g:loaded_syntastic_dart_dart_analyzer_checker=1$/;"	v
g:loaded_syntastic_docbk_xmllint_checker	bundle/syntastic/syntax_checkers/docbk/xmllint.vim	/^let g:loaded_syntastic_docbk_xmllint_checker=1$/;"	v
g:loaded_syntastic_dustjs_swiffer_checker	bundle/syntastic/syntax_checkers/dustjs/swiffer.vim	/^let g:loaded_syntastic_dustjs_swiffer_checker = 1$/;"	v
g:loaded_syntastic_elixir_elixir_checker	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^let g:loaded_syntastic_elixir_elixir_checker=1$/;"	v
g:loaded_syntastic_erlang_erlang_checker	bundle/syntastic/syntax_checkers/erlang/erlang.vim	/^let g:loaded_syntastic_erlang_erlang_checker=1$/;"	v
g:loaded_syntastic_eruby_ruby_checker	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^let g:loaded_syntastic_eruby_ruby_checker=1$/;"	v
g:loaded_syntastic_fortran_gfortran_checker	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^let g:loaded_syntastic_fortran_gfortran_checker=1$/;"	v
g:loaded_syntastic_go_go_checker	bundle/syntastic/syntax_checkers/go/go.vim	/^let g:loaded_syntastic_go_go_checker=1$/;"	v
g:loaded_syntastic_go_gofmt_checker	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^let g:loaded_syntastic_go_gofmt_checker=1$/;"	v
g:loaded_syntastic_go_golint_checker	bundle/syntastic/syntax_checkers/go/golint.vim	/^let g:loaded_syntastic_go_golint_checker=1$/;"	v
g:loaded_syntastic_go_govet_checker	bundle/syntastic/syntax_checkers/go/govet.vim	/^let g:loaded_syntastic_go_govet_checker=1$/;"	v
g:loaded_syntastic_haml_haml_checker	bundle/syntastic/syntax_checkers/haml/haml.vim	/^let g:loaded_syntastic_haml_haml_checker=1$/;"	v
g:loaded_syntastic_haskell_ghc_mod_checker	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let g:loaded_syntastic_haskell_ghc_mod_checker = 1$/;"	v
g:loaded_syntastic_haskell_hdevtools_checker	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let g:loaded_syntastic_haskell_hdevtools_checker=1$/;"	v
g:loaded_syntastic_haskell_hlint_checker	bundle/syntastic/syntax_checkers/haskell/hlint.vim	/^let g:loaded_syntastic_haskell_hlint_checker = 1$/;"	v
g:loaded_syntastic_haxe_haxe_checker	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^let g:loaded_syntastic_haxe_haxe_checker=1$/;"	v
g:loaded_syntastic_hss_hss_checker	bundle/syntastic/syntax_checkers/hss/hss.vim	/^let g:loaded_syntastic_hss_hss_checker=1$/;"	v
g:loaded_syntastic_html_tidy_checker	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let g:loaded_syntastic_html_tidy_checker = 1$/;"	v
g:loaded_syntastic_html_validator_checker	bundle/syntastic/syntax_checkers/html/validator.vim	/^let g:loaded_syntastic_html_validator_checker=1$/;"	v
g:loaded_syntastic_html_w3_checker	bundle/syntastic/syntax_checkers/html/w3.vim	/^let g:loaded_syntastic_html_w3_checker = 1$/;"	v
g:loaded_syntastic_java_checkstyle_checker	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^let g:loaded_syntastic_java_checkstyle_checker=1$/;"	v
g:loaded_syntastic_java_javac_checker	bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:loaded_syntastic_java_javac_checker=1$/;"	v
g:loaded_syntastic_javascript_closurecompiler_checker	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let g:loaded_syntastic_javascript_closurecompiler_checker=1$/;"	v
g:loaded_syntastic_javascript_gjslint_checker	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^let g:loaded_syntastic_javascript_gjslint_checker=1$/;"	v
g:loaded_syntastic_javascript_jshint_checker	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^let g:loaded_syntastic_javascript_jshint_checker=1$/;"	v
g:loaded_syntastic_javascript_jsl_checker	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^let g:loaded_syntastic_javascript_jsl_checker=1$/;"	v
g:loaded_syntastic_javascript_jslint_checker	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^let g:loaded_syntastic_javascript_jslint_checker=1$/;"	v
g:loaded_syntastic_json_jsonlint_checker	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^let g:loaded_syntastic_json_jsonlint_checker=1$/;"	v
g:loaded_syntastic_json_jsonval_checker	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^let g:loaded_syntastic_json_jsonval_checker=1$/;"	v
g:loaded_syntastic_less_lessc_checker	bundle/syntastic/syntax_checkers/less/lessc.vim	/^let g:loaded_syntastic_less_lessc_checker=1$/;"	v
g:loaded_syntastic_lisp_clisp_checker	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^let g:loaded_syntastic_lisp_clisp_checker=1$/;"	v
g:loaded_syntastic_llvm_llvm_checker	bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^let g:loaded_syntastic_llvm_llvm_checker=1$/;"	v
g:loaded_syntastic_loclist	bundle/syntastic/plugin/syntastic/loclist.vim	/^let g:loaded_syntastic_loclist = 1$/;"	v
g:loaded_syntastic_lua_luac_checker	bundle/syntastic/syntax_checkers/lua/luac.vim	/^let g:loaded_syntastic_lua_luac_checker=1$/;"	v
g:loaded_syntastic_makeprg_autoload	bundle/syntastic/autoload/syntastic/makeprg.vim	/^let g:loaded_syntastic_makeprg_autoload = 1$/;"	v
g:loaded_syntastic_makeprg_builder	bundle/syntastic/plugin/syntastic/makeprg_builder.vim	/^let g:loaded_syntastic_makeprg_builder = 1$/;"	v
g:loaded_syntastic_matlab_mlint_checker	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^let g:loaded_syntastic_matlab_mlint_checker=1$/;"	v
g:loaded_syntastic_modemap	bundle/syntastic/plugin/syntastic/modemap.vim	/^let g:loaded_syntastic_modemap = 1$/;"	v
g:loaded_syntastic_nasm_nasm_checker	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^let g:loaded_syntastic_nasm_nasm_checker=1$/;"	v
g:loaded_syntastic_notifier_autoloclist	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^let g:loaded_syntastic_notifier_autoloclist = 1$/;"	v
g:loaded_syntastic_notifier_balloons	bundle/syntastic/plugin/syntastic/balloons.vim	/^let g:loaded_syntastic_notifier_balloons = 1$/;"	v
g:loaded_syntastic_notifier_cursor	bundle/syntastic/plugin/syntastic/cursor.vim	/^let g:loaded_syntastic_notifier_cursor = 1$/;"	v
g:loaded_syntastic_notifier_highlighting	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let g:loaded_syntastic_notifier_highlighting = 1$/;"	v
g:loaded_syntastic_notifier_signs	bundle/syntastic/plugin/syntastic/signs.vim	/^let g:loaded_syntastic_notifier_signs = 1$/;"	v
g:loaded_syntastic_notifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let g:loaded_syntastic_notifiers = 1$/;"	v
g:loaded_syntastic_nroff_mandoc_checker	bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^let g:loaded_syntastic_nroff_mandoc_checker=1$/;"	v
g:loaded_syntastic_objc_gcc_checker	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^let g:loaded_syntastic_objc_gcc_checker = 1$/;"	v
g:loaded_syntastic_objc_oclint_checker	bundle/syntastic/syntax_checkers/objc/oclint.vim	/^let g:loaded_syntastic_objc_oclint_checker = 1$/;"	v
g:loaded_syntastic_objc_ycm_checker	bundle/syntastic/syntax_checkers/objc/ycm.vim	/^let g:loaded_syntastic_objc_ycm_checker = 1$/;"	v
g:loaded_syntastic_objcpp_gcc_checker	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^let g:loaded_syntastic_objcpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_objcpp_oclint_checker	bundle/syntastic/syntax_checkers/objcpp/oclint.vim	/^let g:loaded_syntastic_objcpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_objcpp_ycm_checker	bundle/syntastic/syntax_checkers/objcpp/ycm.vim	/^let g:loaded_syntastic_objcpp_ycm_checker = 1$/;"	v
g:loaded_syntastic_ocaml_camlp4o_checker	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let g:loaded_syntastic_ocaml_camlp4o_checker=1$/;"	v
g:loaded_syntastic_perl_perl_checker	bundle/syntastic/syntax_checkers/perl/perl.vim	/^let g:loaded_syntastic_perl_perl_checker=1$/;"	v
g:loaded_syntastic_perl_perlcritic_checker	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^let g:loaded_syntastic_perl_perlcritic_checker=1$/;"	v
g:loaded_syntastic_perl_podchecker_checker	bundle/syntastic/syntax_checkers/perl/podchecker.vim	/^let g:loaded_syntastic_perl_podchecker_checker=1$/;"	v
g:loaded_syntastic_php_php_checker	bundle/syntastic/syntax_checkers/php/php.vim	/^let g:loaded_syntastic_php_php_checker=1$/;"	v
g:loaded_syntastic_php_phpcs_checker	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^let g:loaded_syntastic_php_phpcs_checker=1$/;"	v
g:loaded_syntastic_php_phpmd_checker	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^let g:loaded_syntastic_php_phpmd_checker=1$/;"	v
g:loaded_syntastic_plugin	bundle/syntastic/plugin/syntastic.vim	/^let g:loaded_syntastic_plugin = 1$/;"	v
g:loaded_syntastic_pod_podchecker_checker	bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^let g:loaded_syntastic_pod_podchecker_checker=1$/;"	v
g:loaded_syntastic_postprocess_autoload	bundle/syntastic/autoload/syntastic/postprocess.vim	/^let g:loaded_syntastic_postprocess_autoload = 1$/;"	v
g:loaded_syntastic_puppet_puppet_checker	bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^let g:loaded_syntastic_puppet_puppet_checker=1$/;"	v
g:loaded_syntastic_puppet_puppetlint_checker	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let g:loaded_syntastic_puppet_puppetlint_checker=1$/;"	v
g:loaded_syntastic_python_flake8_checker	bundle/syntastic/syntax_checkers/python/flake8.vim	/^let g:loaded_syntastic_python_flake8_checker=1$/;"	v
g:loaded_syntastic_python_pep257_checker	bundle/syntastic/syntax_checkers/python/pep257.vim	/^let g:loaded_syntastic_python_pep257_checker = 1$/;"	v
g:loaded_syntastic_python_pep8_checker	bundle/syntastic/syntax_checkers/python/pep8.vim	/^let g:loaded_syntastic_python_pep8_checker=1$/;"	v
g:loaded_syntastic_python_py3kwarn_checker	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^let g:loaded_syntastic_python_py3kwarn_checker=1$/;"	v
g:loaded_syntastic_python_pyflakes_checker	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^let g:loaded_syntastic_python_pyflakes_checker=1$/;"	v
g:loaded_syntastic_python_pylama_checker	bundle/syntastic/syntax_checkers/python/pylama.vim	/^let g:loaded_syntastic_python_pylama_checker = 1$/;"	v
g:loaded_syntastic_python_pylint_checker	bundle/syntastic/syntax_checkers/python/pylint.vim	/^let g:loaded_syntastic_python_pylint_checker = 1$/;"	v
g:loaded_syntastic_python_python_checker	bundle/syntastic/syntax_checkers/python/python.vim	/^let g:loaded_syntastic_python_python_checker=1$/;"	v
g:loaded_syntastic_registry	bundle/syntastic/plugin/syntastic/registry.vim	/^let g:loaded_syntastic_registry = 1$/;"	v
g:loaded_syntastic_rst_rst2pseudoxml_checker	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let g:loaded_syntastic_rst_rst2pseudoxml_checker=1$/;"	v
g:loaded_syntastic_ruby_jruby_checker	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^let g:loaded_syntastic_ruby_jruby_checker=1$/;"	v
g:loaded_syntastic_ruby_macruby_checker	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^let g:loaded_syntastic_ruby_macruby_checker=1$/;"	v
g:loaded_syntastic_ruby_mri_checker	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^let g:loaded_syntastic_ruby_mri_checker=1$/;"	v
g:loaded_syntastic_ruby_rubocop_checker	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^let g:loaded_syntastic_ruby_rubocop_checker=1$/;"	v
g:loaded_syntastic_rust_rustc_checker	bundle/syntastic/syntax_checkers/rust/rustc.vim	/^let g:loaded_syntastic_rust_rustc_checker=1$/;"	v
g:loaded_syntastic_sass_sass_checker	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let g:loaded_syntastic_sass_sass_checker=1$/;"	v
g:loaded_syntastic_scala_fsc_checker	bundle/syntastic/syntax_checkers/scala/fsc.vim	/^let g:loaded_syntastic_scala_fsc_checker = 1$/;"	v
g:loaded_syntastic_scala_scalac_checker	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^let g:loaded_syntastic_scala_scalac_checker=1$/;"	v
g:loaded_syntastic_scss_sass_checker	bundle/syntastic/syntax_checkers/scss/sass.vim	/^let g:loaded_syntastic_scss_sass_checker=1$/;"	v
g:loaded_syntastic_sh_checkbashisms_checker	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let g:loaded_syntastic_sh_checkbashisms_checker=1$/;"	v
g:loaded_syntastic_sh_sh_checker	bundle/syntastic/syntax_checkers/sh/sh.vim	/^let g:loaded_syntastic_sh_sh_checker=1$/;"	v
g:loaded_syntastic_slim_slimrb_checker	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^let g:loaded_syntastic_slim_slimrb_checker=1$/;"	v
g:loaded_syntastic_tcl_nagelfar_checker	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let g:loaded_syntastic_tcl_nagelfar_checker=1$/;"	v
g:loaded_syntastic_tex_chktex_checker	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^let g:loaded_syntastic_tex_chktex_checker = 1$/;"	v
g:loaded_syntastic_tex_lacheck_checker	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^let g:loaded_syntastic_tex_lacheck_checker=1$/;"	v
g:loaded_syntastic_text_atdtool_checker	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^let g:loaded_syntastic_text_atdtool_checker = 1$/;"	v
g:loaded_syntastic_twig_twiglint_checker	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^let g:loaded_syntastic_twig_twiglint_checker=1$/;"	v
g:loaded_syntastic_typescript_tsc_checker	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^let g:loaded_syntastic_typescript_tsc_checker=1$/;"	v
g:loaded_syntastic_util_autoload	bundle/syntastic/autoload/syntastic/util.vim	/^let g:loaded_syntastic_util_autoload = 1$/;"	v
g:loaded_syntastic_vala_valac_checker	bundle/syntastic/syntax_checkers/vala/valac.vim	/^let g:loaded_syntastic_vala_valac_checker = 1$/;"	v
g:loaded_syntastic_verilog_verilator_checker	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^let g:loaded_syntastic_verilog_verilator_checker = 1$/;"	v
g:loaded_syntastic_vhdl_ghdl_checker	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let g:loaded_syntastic_vhdl_ghdl_checker = 1$/;"	v
g:loaded_syntastic_xhtml_tidy_checker	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^let g:loaded_syntastic_xhtml_tidy_checker=1$/;"	v
g:loaded_syntastic_xml_xmllint_checker	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^let g:loaded_syntastic_xml_xmllint_checker=1$/;"	v
g:loaded_syntastic_xslt_xmllint_checker	bundle/syntastic/syntax_checkers/xslt/xmllint.vim	/^let g:loaded_syntastic_xslt_xmllint_checker=1$/;"	v
g:loaded_syntastic_yaml_jsyaml_checker	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let g:loaded_syntastic_yaml_jsyaml_checker=1$/;"	v
g:loaded_syntastic_z80_z80syntaxchecker_checker	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let g:loaded_syntastic_z80_z80syntaxchecker_checker=1$/;"	v
g:loaded_syntastic_zpt_zptlint_checker	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^let g:loaded_syntastic_zpt_zptlint_checker=1$/;"	v
g:loaded_syntastic_zsh_zsh_checker	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^let g:loaded_syntastic_zsh_zsh_checker=1$/;"	v
g:loaded_togglebg	bundle/vim-colors-solarized/autoload/togglebg.vim	/^let g:loaded_togglebg = 1$/;"	v
g:loaded_unimpaired	bundle/vim-unimpaired/plugin/unimpaired.vim	/^let g:loaded_unimpaired = 1$/;"	v
g:loaded_vim_tags	bundle/vim-tags/plugin/tags.vim	/^let g:loaded_vim_tags = 1$/;"	v
g:makeArgumentList	bundle/genutils-2.5/autoload/genutils.vim	/^let g:makeArgumentList = 'exec genutils#MakeArgumentList()'$/;"	v
g:makeArgumentString	bundle/genutils-2.5/autoload/genutils.vim	/^let g:makeArgumentString = 'exec genutils#MakeArgumentString()'$/;"	v
g:miniBufExplAutoStart	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplAutoStart = 1$/;"	v
g:miniBufExplAutoStart	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplAutoStart = g:miniBufExplorerAutoStart$/;"	v
g:miniBufExplBRSplit	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplBRSplit = g:miniBufExplSplitBelow$/;"	v
g:miniBufExplBRSplit	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplBRSplit = g:miniBufExplVSplit ? &splitright : &splitbelow$/;"	v
g:miniBufExplBuffersNeeded	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplBuffersNeeded = 2$/;"	v
g:miniBufExplBuffersNeeded	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplBuffersNeeded = g:miniBufExplorerMoreThanOne$/;"	v
g:miniBufExplCloseOnSelect	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplCloseOnSelect = 0$/;"	v
g:miniBufExplCycleArround	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplCycleArround = 0$/;"	v
g:miniBufExplDebugLevel	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplDebugLevel = 1$/;"	v
g:miniBufExplDebugLevel	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplDebugLevel = g:miniBufExplorerDebugLevel$/;"	v
g:miniBufExplDebugMode	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplDebugMode = 3$/;"	v
g:miniBufExplDebugMode	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplDebugMode = g:miniBufExplorerDebugMode$/;"	v
g:miniBufExplDebugOutput	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplDebugOutput = g:miniBufExplorerDebugOutput$/;"	v
g:miniBufExplDebugOutput	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^let g:miniBufExplDebugOutput = ''$/;"	v
g:miniBufExplFuncCallDepth	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^let g:miniBufExplFuncCallDepth = 0$/;"	v
g:miniBufExplHideWhenDiff	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^    let g:miniBufExplHideWhenDiff = 0$/;"	v
g:miniBufExplHideWhenDiff	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplHideWhenDiff = g:miniBufExplorerHideWhenDiff$/;"	v
g:miniBufExplMaxSize	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplMaxSize = 0$/;"	v
g:miniBufExplMaxSize	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplMaxSize = g:miniBufExplMaxHeight$/;"	v
g:miniBufExplMinSize	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplMinSize = 1$/;"	v
g:miniBufExplMinSize	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplMinSize = g:miniBufExplMinHeight$/;"	v
g:miniBufExplSetUT	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^    let g:miniBufExplSetUT = 1$/;"	v
g:miniBufExplShowBufNumbers	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplShowBufNumbers = 1$/;"	v
g:miniBufExplSortBy	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplSortBy = "number"$/;"	v
g:miniBufExplSplitToEdge	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplSplitToEdge = 1$/;"	v
g:miniBufExplStatusLineText	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplStatusLineText = "-MiniBufExplorer-"$/;"	v
g:miniBufExplTabWrap	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplTabWrap = 0$/;"	v
g:miniBufExplUseSingleClick	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplUseSingleClick = 0$/;"	v
g:miniBufExplVSplit	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^  let g:miniBufExplVSplit = 0$/;"	v
g:multi_cursor_start_key	bundle/vim-multiple-cursors/plugin/multiple_cursors.vim	/^  let g:multi_cursor_start_key = g:multi_cursor_next_key$/;"	v
g:nerdtree_tabs_autoclose	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_autoclose = 1$/;"	v
g:nerdtree_tabs_focus_on_files	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_focus_on_files = 0$/;"	v
g:nerdtree_tabs_meaningful_tab_names	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_meaningful_tab_names = 1$/;"	v
g:nerdtree_tabs_no_startup_for_diff	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^    let g:nerdtree_tabs_no_startup_for_diff = 1$/;"	v
g:nerdtree_tabs_open_on_console_startup	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_open_on_console_startup = 0$/;"	v
g:nerdtree_tabs_open_on_gui_startup	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_open_on_gui_startup = 1$/;"	v
g:nerdtree_tabs_open_on_new_tab	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_open_on_new_tab = 1$/;"	v
g:nerdtree_tabs_smart_startup_focus	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_smart_startup_focus = 1$/;"	v
g:nerdtree_tabs_startup_cd	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_startup_cd = 1$/;"	v
g:nerdtree_tabs_synchronize_focus	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_synchronize_focus = 1$/;"	v
g:nerdtree_tabs_synchronize_view	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_synchronize_view = 1$/;"	v
g:omni#cpp#includes#CACHE_FILE_TIME	autoload/omni/cpp/includes.vim	/^let g:omni#cpp#includes#CACHE_FILE_TIME = {}$/;"	v
g:omni#cpp#includes#CACHE_INCLUDES	autoload/omni/cpp/includes.vim	/^let g:omni#cpp#includes#CACHE_INCLUDES = {}$/;"	v
g:omni#cpp#namespaces#CacheResolve	autoload/omni/cpp/namespaces.vim	/^let g:omni#cpp#namespaces#CacheResolve = {}$/;"	v
g:omni#cpp#namespaces#CacheUsing	autoload/omni/cpp/namespaces.vim	/^let g:omni#cpp#namespaces#CacheUsing = {}$/;"	v
g:omni#cpp#utils#CACHE_TAG_INHERITS	autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#CACHE_TAG_INHERITS = {}$/;"	v
g:omni#cpp#utils#szFilterGlobalScope	autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#szFilterGlobalScope .= "&& (!has_key(v:val, 'enum') || (has_key(v:val, 'enum') && v:val.enum =~ '^\\\\w\\\\+$')))"$/;"	v
g:omni#cpp#utils#szFilterGlobalScope	autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#szFilterGlobalScope = "(!has_key(v:val, 'class') && !has_key(v:val, 'struct') && !has_key(v:val, 'union') && !has_key(v:val, 'namespace')"$/;"	v
g:proj_running	bundle/project-1.4.1/plugin/project.vim	/^        let g:proj_running = bufnr(bufname.'\\>')$/;"	v
g:rails#rake_errorformat	bundle/vim-rails/autoload/rails.vim	/^let g:rails#rake_errorformat = '%D(in\\ %f),'$/;"	v
g:rails_no_abbreviations	bundle/vim-rails/autoload/rails.vim	/^  let g:rails_no_abbreviations = 1$/;"	v
g:rake#errorformat	bundle/vim-rake/plugin/rake.vim	/^let g:rake#errorformat = '%D(in\\ %f),'$/;"	v
g:ruby_default_path	bundle/vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_default_path = map(split($RUBYLIB,':'), 'v:val ==# "." ? "" : v:val')$/;"	v
g:ruby_default_path	bundle/vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_default_path = s:query_path($HOME)$/;"	v
g:ruby_refactoring_map_keys	bundle/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  let g:ruby_refactoring_map_keys = 1$/;"	v
g:ruby_version_paths	bundle/vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_version_paths[b:ruby_version] = s:query_path(fnamemodify(s:version_file, ':p:h'))$/;"	v
g:ruby_version_paths	bundle/vim-ruby/ftplugin/ruby.vim	/^  let g:ruby_version_paths = {}$/;"	v
g:rubycomplete_buffer_loading	bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_classes_in_global	bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_include_object	bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_rails	bundle/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:slime_target	bundle/vim-slime/plugin/slime.vim	/^  let g:slime_target = "screen"$/;"	v
g:syntastic_ada_compiler	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^    let g:syntastic_ada_compiler = 'gcc'$/;"	v
g:syntastic_ada_compiler_options	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^    let g:syntastic_ada_compiler_options = ''$/;"	v
g:syntastic_aggregate_errors	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_aggregate_errors = 0$/;"	v
g:syntastic_always_populate_loc_list	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_always_populate_loc_list = 0$/;"	v
g:syntastic_auto_jump	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_auto_jump = 0$/;"	v
g:syntastic_auto_loc_list	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^    let g:syntastic_auto_loc_list = 2$/;"	v
g:syntastic_c_checker_checkpatch_location	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^    let g:syntastic_c_checker_checkpatch_location = '.\/scripts\/checkpatch.pl'$/;"	v
g:syntastic_c_checker_checkpatch_location	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^    let g:syntastic_c_checker_checkpatch_location = 'checkpatch.pl'$/;"	v
g:syntastic_c_compiler	bundle/syntastic/syntax_checkers/c/gcc.vim	/^    let g:syntastic_c_compiler = 'gcc'$/;"	v
g:syntastic_c_compiler_options	bundle/syntastic/syntax_checkers/c/gcc.vim	/^    let g:syntastic_c_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_check_on_open	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_check_on_open = 0$/;"	v
g:syntastic_check_on_wq	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_check_on_wq = 1$/;"	v
g:syntastic_cobol_compiler	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^    let g:syntastic_cobol_compiler = 'cobc'$/;"	v
g:syntastic_cobol_compiler_options	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^    let g:syntastic_cobol_compiler_options = ''$/;"	v
g:syntastic_cpp_compiler	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^    let g:syntastic_cpp_compiler = 'g++'$/;"	v
g:syntastic_cpp_compiler_options	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^    let g:syntastic_cpp_compiler_options = ''$/;"	v
g:syntastic_cpp_cpplint_args	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^    let g:syntastic_cpp_cpplint_args = '--verbose=3'$/;"	v
g:syntastic_cpp_cpplint_thres	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^    let g:syntastic_cpp_cpplint_thres = 5$/;"	v
g:syntastic_csslint_exec	bundle/syntastic/syntax_checkers/css/csslint.vim	/^    let g:syntastic_csslint_exec = 'csslint'$/;"	v
g:syntastic_csslint_options	bundle/syntastic/syntax_checkers/css/csslint.vim	/^    let g:syntastic_csslint_options = ''$/;"	v
g:syntastic_d_compiler	bundle/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_compiler = 'dmd'$/;"	v
g:syntastic_d_compiler_options	bundle/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_compiler_options = ''$/;"	v
g:syntastic_dart_analyzer_conf	bundle/syntastic/syntax_checkers/dart/dart_analyzer.vim	/^    let g:syntastic_dart_analyzer_conf = ''$/;"	v
g:syntastic_debug	bundle/syntastic/autoload/syntastic/util.vim	/^    let g:syntastic_debug = 0$/;"	v
g:syntastic_echo_current_error	bundle/syntastic/plugin/syntastic/cursor.vim	/^    let g:syntastic_echo_current_error = 1$/;"	v
g:syntastic_enable_balloons	bundle/syntastic/plugin/syntastic/balloons.vim	/^    let g:syntastic_enable_balloons = 0$/;"	v
g:syntastic_enable_balloons	bundle/syntastic/plugin/syntastic/balloons.vim	/^    let g:syntastic_enable_balloons = 1$/;"	v
g:syntastic_enable_highlighting	bundle/syntastic/plugin/syntastic/highlighting.vim	/^    let g:syntastic_enable_highlighting = 1$/;"	v
g:syntastic_enable_signs	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_enable_signs = 1$/;"	v
g:syntastic_erlc_include_path	bundle/syntastic/syntax_checkers/erlang/erlang.vim	/^    let g:syntastic_erlc_include_path=""$/;"	v
g:syntastic_error_symbol	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_error_symbol = '>>'$/;"	v
g:syntastic_filetype_map	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_filetype_map = {}$/;"	v
g:syntastic_fortran_compiler	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^    let g:syntastic_fortran_compiler = 'gfortran'$/;"	v
g:syntastic_fortran_compiler_options	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^    let g:syntastic_fortran_compiler_options = ''$/;"	v
g:syntastic_full_redraws	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_full_redraws = !( has('gui_running') || has('gui_macvim'))$/;"	v
g:syntastic_haml_interpreter	bundle/syntastic/syntax_checkers/haml/haml.vim	/^    let g:syntastic_haml_interpreter = 'haml'$/;"	v
g:syntastic_html_tidy_blocklevel_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_blocklevel_tags = []$/;"	v
g:syntastic_html_tidy_empty_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_empty_tags = []$/;"	v
g:syntastic_html_tidy_ignore_errors	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_ignore_errors = []$/;"	v
g:syntastic_html_tidy_inline_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_inline_tags = []$/;"	v
g:syntastic_html_validator_api	bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_api = 'http:\/\/validator.nu\/'$/;"	v
g:syntastic_html_validator_nsfilter	bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_nsfilter = ''$/;"	v
g:syntastic_html_validator_parser	bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_parser = ''$/;"	v
g:syntastic_html_w3_api	bundle/syntastic/syntax_checkers/html/w3.vim	/^    let g:syntastic_html_w3_api = 'http:\/\/validator.w3.org\/check'$/;"	v
g:syntastic_ignore_files	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_ignore_files = []$/;"	v
g:syntastic_java_checkstyle_classpath	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_classpath = 'checkstyle-5.5-all.jar'$/;"	v
g:syntastic_java_checkstyle_conf_file	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_conf_file = 'sun_checks.xml'$/;"	v
g:syntastic_java_javac_autoload_maven_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_autoload_maven_classpath = 1$/;"	v
g:syntastic_java_javac_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_classpath = ''$/;"	v
g:syntastic_java_javac_config_file	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file = '.syntastic_javac_config'$/;"	v
g:syntastic_java_javac_config_file_enabled	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file_enabled = 0$/;"	v
g:syntastic_java_javac_delete_output	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_delete_output = 1$/;"	v
g:syntastic_java_javac_executable	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_executable = 'javac'$/;"	v
g:syntastic_java_javac_maven_pom_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_classpath = {}$/;"	v
g:syntastic_java_javac_maven_pom_ftime	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_ftime = {}$/;"	v
g:syntastic_java_javac_maven_pom_properties	bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_properties = {}$/;"	v
g:syntastic_java_javac_maven_pom_tags	bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_tags = ["build", "properties"]$/;"	v
g:syntastic_java_javac_options	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_options = '-Xlint'$/;"	v
g:syntastic_java_javac_temp_dir	bundle/syntastic/syntax_checkers/java/javac.vim	/^        let g:syntastic_java_javac_temp_dir = $TEMP."\\\\vim-syntastic-javac"$/;"	v
g:syntastic_java_javac_temp_dir	bundle/syntastic/syntax_checkers/java/javac.vim	/^        let g:syntastic_java_javac_temp_dir = '\/tmp\/vim-syntastic-javac'$/;"	v
g:syntastic_java_javac_temp_dir	bundle/syntastic/syntax_checkers/java/javac.vim	/^        let g:syntastic_java_javac_temp_dir = s:CygwinPath('\/tmp\/vim-syntastic-javac')$/;"	v
g:syntastic_java_maven_executable	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_executable = 'mvn'$/;"	v
g:syntastic_javascript_closure_compiler_options	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^    let g:syntastic_javascript_closure_compiler_options = ""$/;"	v
g:syntastic_javascript_gjslint_conf	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^    let g:syntastic_javascript_gjslint_conf = ""$/;"	v
g:syntastic_javascript_jshint_conf	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^    let g:syntastic_javascript_jshint_conf = ''$/;"	v
g:syntastic_javascript_jsl_conf	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^    let g:syntastic_javascript_jsl_conf = ""$/;"	v
g:syntastic_javascript_jslint_conf	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^    let g:syntastic_javascript_jslint_conf = "--white --undef --nomen --regexp --plusplus --bitwise --newcap --sloppy --vars"$/;"	v
g:syntastic_jshint_exec	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^    let g:syntastic_jshint_exec = 'jshint'$/;"	v
g:syntastic_less_options	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_options = "--no-color"$/;"	v
g:syntastic_less_use_less_lint	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_use_less_lint = 0$/;"	v
g:syntastic_loc_list_height	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_loc_list_height = 10$/;"	v
g:syntastic_objc_compiler	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^    let g:syntastic_objc_compiler = 'gcc'$/;"	v
g:syntastic_objc_compiler_options	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^    let g:syntastic_objc_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_objcpp_compiler	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^    let g:syntastic_objcpp_compiler = 'gcc'$/;"	v
g:syntastic_objcpp_compiler_options	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^    let g:syntastic_objcpp_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_ocaml_use_ocamlbuild	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlbuild = 0$/;"	v
g:syntastic_ocaml_use_ocamlc	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlc = 0$/;"	v
g:syntastic_oclint_config_file	bundle/syntastic/syntax_checkers/c/oclint.vim	/^    let g:syntastic_oclint_config_file = '.syntastic_oclint_config'$/;"	v
g:syntastic_perl_interpreter	bundle/syntastic/syntax_checkers/perl/perl.vim	/^    let g:syntastic_perl_interpreter = 'perl'$/;"	v
g:syntastic_perl_lib_path	bundle/syntastic/syntax_checkers/perl/perl.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_perlcritic_thres	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^    let g:syntastic_perl_perlcritic_thres = 5$/;"	v
g:syntastic_puppet_puppetlint_args	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^    let g:syntastic_puppet_puppetlint_args = g:syntastic_puppet_lint_arguments$/;"	v
g:syntastic_quiet_warnings	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_quiet_warnings = 0$/;"	v
g:syntastic_reuse_loc_lists	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_reuse_loc_lists = (v:version >= 704)$/;"	v
g:syntastic_ruby_exec	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^    let g:syntastic_ruby_exec = "ruby"$/;"	v
g:syntastic_ruby_exec	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^    let g:syntastic_ruby_exec = "ruby"$/;"	v
g:syntastic_sass_check_partials	bundle/syntastic/syntax_checkers/sass/sass.vim	/^    let g:syntastic_sass_check_partials = 0$/;"	v
g:syntastic_scala_options	bundle/syntastic/syntax_checkers/scala/fsc.vim	/^    let g:syntastic_scala_options = ''$/;"	v
g:syntastic_scala_options	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^    let g:syntastic_scala_options = ''$/;"	v
g:syntastic_sparse_config_file	bundle/syntastic/syntax_checkers/c/sparse.vim	/^    let g:syntastic_sparse_config_file = '.syntastic_sparse_config'$/;"	v
g:syntastic_splint_config_file	bundle/syntastic/syntax_checkers/c/splint.vim	/^    let g:syntastic_splint_config_file = '.syntastic_splint_config'$/;"	v
g:syntastic_stl_format	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_stl_format = '[Syntax: line:%F (%t)]'$/;"	v
g:syntastic_style_error_symbol	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_style_error_symbol = 'S>'$/;"	v
g:syntastic_style_warning_symbol	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_style_warning_symbol = 'S>'$/;"	v
g:syntastic_tex_chktex_showmsgs	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_showmsgs = 1$/;"	v
g:syntastic_verilog_compiler	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^    let g:syntastic_verilog_compiler = 'verilator'$/;"	v
g:syntastic_verilog_compiler_options	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^    let g:syntastic_verilog_compiler_options = '-Wall'$/;"	v
g:syntastic_warning_symbol	bundle/syntastic/plugin/syntastic/signs.vim	/^    let g:syntastic_warning_symbol = '>>'$/;"	v
g:syntastic_xhtml_tidy_ignore_errors	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^    let g:syntastic_xhtml_tidy_ignore_errors = []$/;"	v
g:tcomment#filetype_map	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#filetype_map = {$/;"	v
g:tcomment#ignore_char_type	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#ignore_char_type = 1   "{{{2$/;"	v
g:tcomment#replacements_c	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#replacements_c = {$/;"	v
g:tcomment#replacements_xml	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#replacements_xml = {$/;"	v
g:tcomment#syntax_substitute	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#syntax_substitute = {$/;"	v
g:tcommentBlankLines	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentBlankLines = 1    "{{{2$/;"	v
g:tcommentBlockC	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentBlockC = {$/;"	v
g:tcommentBlockC2	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentBlockC2 = {$/;"	v
g:tcommentBlockXML	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentBlockXML = {$/;"	v
g:tcommentGuessFileType	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType = 0   "{{{2$/;"	v
g:tcommentGuessFileType_django	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_django = 1   "{{{2$/;"	v
g:tcommentGuessFileType_dsl	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_dsl = 'xml'   "{{{2$/;"	v
g:tcommentGuessFileType_eruby	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_eruby = 1   "{{{2$/;"	v
g:tcommentGuessFileType_html	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_html = 1   "{{{2$/;"	v
g:tcommentGuessFileType_php	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_php = 'html'   "{{{2$/;"	v
g:tcommentGuessFileType_smarty	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_smarty = 1   "{{{2$/;"	v
g:tcommentGuessFileType_tskeleton	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_tskeleton = 1   "{{{2$/;"	v
g:tcommentGuessFileType_vim	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_vim = 1   "{{{2$/;"	v
g:tcommentIgnoreTypes_php	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentIgnoreTypes_php = 'sql'   "{{{2$/;"	v
g:tcommentInlineC	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentInlineC = {$/;"	v
g:tcommentInlineXML	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentInlineXML = {$/;"	v
g:tcommentLineC	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentLineC = g:tcommentInlineC$/;"	v
g:tcommentMapLeader1	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMapLeader1 = '<c-_>' "{{{2$/;"	v
g:tcommentMapLeader2	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMapLeader2 = '<Leader>_' "{{{2$/;"	v
g:tcommentMapLeaderOp1	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMapLeaderOp1 = 'gc' "{{{2$/;"	v
g:tcommentMapLeaderOp2	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMapLeaderOp2 = 'gC' "{{{2$/;"	v
g:tcommentMaps	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMaps = 1   "{{{2$/;"	v
g:tcommentModeExtra	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentModeExtra = ''   "{{{2$/;"	v
g:tcommentOpModeExtra	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentOpModeExtra = ''   "{{{2$/;"	v
g:tcommentOptions	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentOptions = {}   "{{{2$/;"	v
g:tcommentSyntaxMap	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentSyntaxMap = {$/;"	v
g:tcommentTextObjectInlineComment	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentTextObjectInlineComment = 'ic'   "{{{2$/;"	v
g:unimpaired_html_entities	bundle/vim-unimpaired/plugin/unimpaired.vim	/^let g:unimpaired_html_entities = {$/;"	v
g:vim_tags_auto_generate	bundle/vim-tags/plugin/tags.vim	/^    let g:vim_tags_auto_generate = 1$/;"	v
g:vim_tags_gems_tags_command	bundle/vim-tags/plugin/tags.vim	/^    let g:vim_tags_gems_tags_command = "ctags -R -f Gemfile.lock.tags `bundle show --paths` 2>\/dev\/null &"$/;"	v
g:vim_tags_project_tags_command	bundle/vim-tags/plugin/tags.vim	/^    let g:vim_tags_project_tags_command = "ctags -R {OPTIONS} {DIRECTORY} 2>\/dev\/null &"$/;"	v
g:xmldata_aria	bundle/html5.vim/autoload/xml/aria.vim	/^let g:xmldata_aria = {$/;"	v
g:xmldata_html5	bundle/html5.vim/autoload/xml/html5.vim	/^let g:xmldata_html5 = {$/;"	v
g<C-]>	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> g<C-]>      :<C-U>exe         "tjump <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
g]	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> g]          :<C-U>exe       "tselect <C-R>=RubyCursorIdentifier()<CR>"<CR>$/;"	m
generate	bundle/Gundo/autoload/gundo.py	/^def generate(dag, edgefn, current):$/;"	f
generate_skip_lookup	bundle/the_silver_searcher/src/util.c	/^void generate_skip_lookup(const char *find, size_t f_len, size_t skip_lookup[], int case_sensitive) {$/;"	f
generate_tags	bundle/vim-tags/plugin/tags.vim	/^fun! s:generate_tags(redraw)$/;"	f
genutils#AddNotifyWindowClose	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#AddNotifyWindowClose(windowTitle, functionName)$/;"	f
genutils#AddToFCShellPre	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#AddToFCShellPre(funcName)$/;"	f
genutils#AlignWordWithWordInPreviousLine	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#AlignWordWithWordInPreviousLine()$/;"	f
genutils#ArrayVarExists	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ArrayVarExists(varName, index)$/;"	f
genutils#BinInsertSort	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#BinInsertSort(cmp, direction) range$/;"	f
genutils#BinInsertSort2	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#BinInsertSort2(start, end, cmp, direction, accessor, mover, context)$/;"	f
genutils#BinSearchForInsert	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#BinSearchForInsert(start, end, line, cmp, direction)$/;"	f
genutils#BinSearchForInsert2	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#BinSearchForInsert2(start, end, line, cmp, direction,$/;"	f
genutils#BinSearchList	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#BinSearchList(list, start, end, item, cmp)$/;"	f
genutils#CenterWordInSpace	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CenterWordInSpace()$/;"	f
genutils#CheckWindowClose	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CheckWindowClose()$/;"	f
genutils#CleanDiffOptions	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CleanDiffOptions()$/;"	f
genutils#CleanupFileName	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CleanupFileName(fileName)$/;"	f
genutils#CleanupFileName2	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CleanupFileName2(fileName, win32ProtectedChars)$/;"	f
genutils#ClearAllSigns	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ClearAllSigns()$/;"	f
genutils#CloseWinNoEa	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CloseWinNoEa(winnr, force)$/;"	f
genutils#CloseWindow	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CloseWindow(win, force)$/;"	f
genutils#CmpByLength	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CmpByLength(line1, line2, ...)$/;"	f
genutils#CmpByLineLengthNname	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CmpByLineLengthNname(line1, line2, ...)$/;"	f
genutils#CmpByNumber	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CmpByNumber(line1, line2, ...)$/;"	f
genutils#CmpByString	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CmpByString(line1, line2, ...)$/;"	f
genutils#CmpByStringIgnoreCase	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CmpByStringIgnoreCase(line1, line2, ...)$/;"	f
genutils#CmpJavaImports	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CmpJavaImports(line1, line2, ...)$/;"	f
genutils#CommonPath	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CommonPath(path1, path2, ...)$/;"	f
genutils#CommonString	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CommonString(str1, str2)$/;"	f
genutils#CrUnProtectedCharsPattern	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CrUnProtectedCharsPattern(chars, ...)$/;"	f
genutils#CreateArgString	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CreateArgString(argList, sep, ...)$/;"	f
genutils#CurLineHasSign	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#CurLineHasSign()$/;"	f
genutils#DeEscape	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#DeEscape(str)$/;"	f
genutils#DebugShowArgs	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#DebugShowArgs(...)$/;"	f
genutils#DefFCShellInstall	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#DefFCShellInstall()$/;"	f
genutils#DefFCShellUninstall	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#DefFCShellUninstall()$/;"	f
genutils#DefFileChangedShell	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#DefFileChangedShell()$/;"	f
genutils#EatChar	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#EatChar(pat)$/;"	f
genutils#Escape	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#Escape(str, chars)$/;"	f
genutils#EscapeCommand	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#EscapeCommand(cmd, args, pipe)$/;"	f
genutils#ExpandStr	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ExpandStr(str)$/;"	f
genutils#ExtractFuncListing	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ExtractFuncListing(funcName, hLines, tLines)$/;"	f
genutils#FindBufferForName	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#FindBufferForName(fileName)$/;"	f
genutils#FindWindowForBuffer	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#FindWindowForBuffer(bufferName, checkUnlisted)$/;"	f
genutils#GetBufNameForAu	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetBufNameForAu(bufName)$/;"	f
genutils#GetColPosition	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetColPosition(id)$/;"	f
genutils#GetLastWinnrInStack	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetLastWinnrInStack(dir)$/;"	f
genutils#GetLinePosition	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetLinePosition(id)$/;"	f
genutils#GetNextWinnrInStack	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetNextWinnrInStack(dir)$/;"	f
genutils#GetPersistentVar	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetPersistentVar(pluginName, persistentVar, default)$/;"	f
genutils#GetPreviewWinnr	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetPreviewWinnr()$/;"	f
genutils#GetSelectedIndex	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetSelectedIndex()$/;"	f
genutils#GetShellEnvType	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetShellEnvType()$/;"	f
genutils#GetSpacer	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetSpacer(width)$/;"	f
genutils#GetVimCmdOutput	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#GetVimCmdOutput(cmd)$/;"	f
genutils#IsOnlyHorizontalWindow	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#IsOnlyHorizontalWindow()$/;"	f
genutils#IsOnlyVerticalWindow	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#IsOnlyVerticalWindow()$/;"	f
genutils#IsPositionSet	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#IsPositionSet(id)$/;"	f
genutils#MakeArgumentList	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#MakeArgumentList(...)$/;"	f
genutils#MakeArgumentString	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#MakeArgumentString(...)$/;"	f
genutils#MapAppendCascaded	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#MapAppendCascaded(lhs, rhs, mapMode)$/;"	f
genutils#MarkActiveWindow	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#MarkActiveWindow()$/;"	f
genutils#MoveCurLineToWinLine	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#MoveCurLineToWinLine(n)$/;"	f
genutils#MoveCursorToLastInWinStack	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#MoveCursorToLastInWinStack(dir)$/;"	f
genutils#MoveCursorToNextInWinStack	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#MoveCursorToNextInWinStack(dir)$/;"	f
genutils#MoveCursorToWindow	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#MoveCursorToWindow(winno)$/;"	f
genutils#NumberOfWindows	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#NumberOfWindows()$/;"	f
genutils#OnMS	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#OnMS()$/;"	f
genutils#OpenWinNoEa	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#OpenWinNoEa(winOpenCmd)$/;"	f
genutils#OptClearBuffer	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#OptClearBuffer()$/;"	f
genutils#PathIsAbsolute	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#PathIsAbsolute(path)$/;"	f
genutils#PathIsFileNameOnly	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#PathIsFileNameOnly(path)$/;"	f
genutils#PromptForElement	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#PromptForElement(array, default, msg, skip, useDialog,$/;"	f
genutils#PutPersistentVar	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#PutPersistentVar(pluginName, persistentVar, value)$/;"	f
genutils#QSort	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#QSort(cmp, direction) range$/;"	f
genutils#QSort2	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#QSort2(start, end, cmp, direction, accessor, swapper, context)$/;"	f
genutils#QuoteStr	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#QuoteStr(str)$/;"	f
genutils#RelPathFromDir	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RelPathFromDir(srcDir, tgtFile)$/;"	f
genutils#RelPathFromFile	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RelPathFromFile(srcFile, tgtFile)$/;"	f
genutils#RemoveFromFCShellPre	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RemoveFromFCShellPre(funcName)$/;"	f
genutils#RemoveNotifyWindowClose	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RemoveNotifyWindowClose(windowTitle)$/;"	f
genutils#ResetHardPosition	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ResetHardPosition(id)$/;"	f
genutils#ResetHardPositionWithContext	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ResetHardPositionWithContext(id)$/;"	f
genutils#ResetSoftPosition	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ResetSoftPosition(id)$/;"	f
genutils#ResetWindowSettings	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ResetWindowSettings()$/;"	f
genutils#ResetWindowSettings2	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ResetWindowSettings2(id)$/;"	f
genutils#RestoreActiveWindow	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreActiveWindow()$/;"	f
genutils#RestoreHardPosition	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreHardPosition(id)$/;"	f
genutils#RestoreHardPositionWithContext	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreHardPositionWithContext(id)$/;"	f
genutils#RestoreSoftPosition	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreSoftPosition(id)$/;"	f
genutils#RestoreVisualSelection	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreVisualSelection(id)$/;"	f
genutils#RestoreWindowSettings	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreWindowSettings()$/;"	f
genutils#RestoreWindowSettings2	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#RestoreWindowSettings2(id)$/;"	f
genutils#Roman2Decimal	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#Roman2Decimal(str)$/;"	f
genutils#SaveHardPosition	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#SaveHardPosition(id)$/;"	f
genutils#SaveHardPositionWithContext	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#SaveHardPositionWithContext(id)$/;"	f
genutils#SaveSoftPosition	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#SaveSoftPosition(id)$/;"	f
genutils#SaveVisualSelection	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#SaveVisualSelection(id)$/;"	f
genutils#SaveWindowSettings	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#SaveWindowSettings()$/;"	f
genutils#SaveWindowSettings2	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#SaveWindowSettings2(id, overwrite)$/;"	f
genutils#SetupScratchBuffer	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#SetupScratchBuffer()$/;"	f
genutils#ShiftWordInSpace	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ShiftWordInSpace(dir)$/;"	f
genutils#ShowLinesWithSyntax	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#ShowLinesWithSyntax() range$/;"	f
genutils#SilentDelete	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#SilentDelete(arg1, ...)$/;"	f
genutils#SilentSubstitute	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#SilentSubstitute(pat, cmd)$/;"	f
genutils#UnEscape	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#UnEscape(str, chars)$/;"	f
genutils#UserDirComplete2	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#UserDirComplete2(ArgLead, CmdLine, CursorPos, ...)$/;"	f
genutils#UserFileComplete	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#UserFileComplete(ArgLead, CmdLine, CursorPos, smartSlash,$/;"	f
genutils#UserFileComplete2	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#UserFileComplete2(ArgLead, CmdLine, CursorPos, ...)$/;"	f
genutils#UserFileExpand	bundle/genutils-2.5/autoload/genutils.vim	/^function! genutils#UserFileExpand(fileArgs)$/;"	f
get16bits	bundle/the_silver_searcher/src/uthash.h	/^#define get16bits(/;"	d
get16bits	bundle/the_silver_searcher/src/uthash.h	/^#undef get16bits$/;"	d
get_browser_command	bundle/Gist.vim/autoload/gist.vim	/^function! s:get_browser_command()$/;"	f
get_char	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_char()$/;"	f
get_childNode	bundle/webapi-vim/autoload/webapi/xmlrpc.vim	/^function! s:get_childNode(node)$/;"	f
get_convert_code	bundle/webapi-vim/autoload/webapi/soap.vim	/^function! s:get_convert_code(arg)$/;"	f
get_current_filename	bundle/Gist.vim/autoload/gist.vim	/^function! s:get_current_filename(no)$/;"	f
get_file_content	bundle/vim-multiple-cursors/spec/benchmark_spec.rb	/^def get_file_content()$/;"	f
get_file_content	bundle/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def get_file_content()$/;"	f
get_nodeline_edges_tail	bundle/Gundo/autoload/gundo.py	/^def get_nodeline_edges_tail($/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(Dir) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["src" | Tail], _Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["test" | Tail], _Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([], Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([_ | Tail], Path) ->$/;"	f
get_strstr	bundle/the_silver_searcher/src/util.c	/^strncmp_fp get_strstr(cli_options opts) {$/;"	f
get_text	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_text(region)$/;"	f
get_visual_region	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_visual_region(pos)$/;"	f
getbookmarks	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getbookmarks()$/;"	f
getc_unlocked	bundle/the_silver_searcher/src/util.c	/^#define getc_unlocked(/;"	d	file:
getchar	bundle/vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
getenv	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getenv()$/;"	f
getextvar	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getextvar(key)$/;"	f
gethistdata	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistdata()$/;"	f
gethistloc	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistloc()$/;"	f
getinput	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getinput(...)$/;"	f
getinput	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getinput(str, ...)$/;"	f
getline	bundle/the_silver_searcher/src/util.c	/^ssize_t getline(char **lineptr, size_t *n, FILE *stream) {$/;"	f
getlist	bundle/vim-rails/autoload/rails.vim	/^function! s:getlist(arg, key)$/;"	f
getnewmix	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:getnewmix(cwd, clim)$/;"	f
getparent	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getparent(item)$/;"	f
getregs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getregs()$/;"	f
getundo	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:getundo()$/;"	f
gf	bundle/vim-ruby/ftplugin/ruby.vim	/^    nnoremap <silent> <buffer> gf         :<C-U>exe <SID>gf(v:count1,"gf",'edit')<CR>$/;"	m
gf	bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:gf(count,map,edit) abort$/;"	f
gist#Gist	bundle/Gist.vim/autoload/gist.vim	/^function! gist#Gist(count, line1, line2, ...)$/;"	f
gist#list	bundle/Gist.vim/autoload/gist.vim	/^function! gist#list(user, ...)$/;"	f
github_url	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(repo,url,rev,commit,path,type,line1,line2) abort$/;"	f
glbpath	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:glbpath(...)$/;"	f
global_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, event_handler_attributes)$/;"	v
global_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, microdata_attributes)$/;"	v
global_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, rdfa_attributes)$/;"	v
global_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, {'role': role})$/;"	v
global_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^let global_attributes = extend(core_attributes, xml_attributes)$/;"	v
globdirs	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:globdirs(dirs, depth)$/;"	f
go_to	bundle/vim-ruby-refactoring/features/support/shared_methods.rb	/^def go_to line$/;"	f
grey	bundle/guicolorscheme/plugin/guicolorscheme.vim	/^function! s:grey(n) "{{{$/;"	f
greylvl	bundle/guicolorscheme/plugin/guicolorscheme.vim	/^function! s:greylvl(n) "{{{$/;"	f
greynum	bundle/guicolorscheme/plugin/guicolorscheme.vim	/^function! s:greynum(x) "{{{$/;"	f
gsub	bundle/vim-bundler/plugin/bundler.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gsub	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gsub	bundle/vim-rails/autoload/rails.vim	/^function! s:gsub(str,pat,rep)$/;"	f
gsub	bundle/vim-rake/plugin/rake.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gsub	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gundo#GundoHide	bundle/Gundo/autoload/gundo.vim	/^function! gundo#GundoHide()"{{{$/;"	f
gundo#GundoRenderGraph	bundle/Gundo/autoload/gundo.vim	/^function! gundo#GundoRenderGraph()"{{{$/;"	f
gundo#GundoShow	bundle/Gundo/autoload/gundo.vim	/^function! gundo#GundoShow()"{{{$/;"	f
gundo#GundoToggle	bundle/Gundo/autoload/gundo.vim	/^function! gundo#GundoToggle()"{{{$/;"	f
handleFailedAssersion	bundle/vim-l9/plugin/l9.vim	/^  function s:handleFailedAssersion(expr)$/;"	f
handleLeftClick	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:handleLeftClick()$/;"	f
handleMiddleMouse	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:handleMiddleMouse()$/;"	f
handle_special_key	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:handle_special_key(key, mode)$/;"	f
hashv	bundle/the_silver_searcher/src/uthash.h	/^   unsigned hashv;                   \/* result of hash-fcn(key)        *\/$/;"	m	struct:UT_hash_handle
hatena_id	bundle/webapi-vim/example/hatenadiary.vim	/^let hatena_id = 'your-hatena-id'$/;"	v
headntail	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:headntail(str)$/;"	f
help	bundle/project-1.4.1/plugin/project.vim	/^        cnoremap <buffer> help let g:proj_doinghelp = 1<CR>:help$/;"	m
helpermethods	bundle/vim-rails/autoload/rails.vim	/^function! s:helpermethods()$/;"	f
helptopic	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:helptopic()$/;"	f
hex2bytes	bundle/webapi-vim/autoload/webapi/hmac.vim	/^function! s:hex2bytes(str)$/;"	f
hh	bundle/the_silver_searcher/src/search.h	/^    UT_hash_handle hh;$/;"	m	struct:__anon5
hh_head	bundle/the_silver_searcher/src/uthash.h	/^   struct UT_hash_handle *hh_head;$/;"	m	struct:UT_hash_bucket	typeref:struct:UT_hash_bucket::UT_hash_handle
hh_next	bundle/the_silver_searcher/src/uthash.h	/^   struct UT_hash_handle *hh_next;   \/* next hh in bucket order        *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_handle
hh_prev	bundle/the_silver_searcher/src/uthash.h	/^   struct UT_hash_handle *hh_prev;   \/* previous hh in bucket order    *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_handle
hho	bundle/the_silver_searcher/src/uthash.h	/^   ptrdiff_t hho; \/* hash handle offset (byte pos of hash handle in element *\/$/;"	m	struct:UT_hash_table
highlight	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:highlight(pat, grp)$/;"	f
highlight_cursor	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:highlight_cursor(pos)$/;"	f
highlight_region	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:highlight_region(region)$/;"	f
home	bundle/project-1.4.1/plugin/project.vim	/^                let home=s:GetHome(info, '')$/;"	v
hs_highlight_boolean	bundle/vim-colors-solarized/colors/solarized.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_delimiters	bundle/vim-colors-solarized/colors/solarized.vim	/^let hs_highlight_delimiters=1$/;"	v
htmlcomplete#CheckDoctype	bundle/html5.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#CheckDoctype() " {{{$/;"	f
htmlcomplete#CompleteTags	bundle/html5.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#CompleteTags(findstart, base)$/;"	f
htmlcomplete#LoadAria	bundle/html5.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadAria() " {{{$/;"	f
htmlcomplete#LoadData	bundle/html5.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadData() " {{{$/;"	f
iM	bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
iabbrev_map	bundle/supertab/plugin/supertab.vim	/^    let iabbrev_map = iabbrevs =~? '\\<cr>'$/;"	v
id	bundle/webapi-vim/example/hatenadiary.vim	/^let id = atom#createEntry("http:\/\/d.hatena.ne.jp\/".hatena_id."\/atom\/draft", hatena_id, password, entry)$/;"	v
id	bundle/webapi-vim/example/hatenadiary.vim	/^let id = atom#updateEntry(id, hatena_id, password, entry, {"X-HATENA-PUBLISH": 1})$/;"	v
ideal_chain_maxlen	bundle/the_silver_searcher/src/uthash.h	/^   unsigned ideal_chain_maxlen;$/;"	m	struct:UT_hash_table
ifilter	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ifilter(list, str)$/;"	f
ig	bundle/the_silver_searcher/src/scandir.h	/^    const ignores *ig;$/;"	m	struct:__anon3
ignore	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ignore()$/;"	f
ignore_pattern_files	bundle/the_silver_searcher/src/ignore.c	/^const char *ignore_pattern_files[] = {$/;"	v
ignores	bundle/the_silver_searcher/src/ignore.h	/^struct ignores {$/;"	s
ignores	bundle/the_silver_searcher/src/ignore.h	/^typedef struct ignores ignores;$/;"	t	typeref:struct:ignores
im	bundle/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
imageName	bundle/webapi-vim/example/jugem.vim	/^let imageName = "my-image.gif" $/;"	v
imagePath	bundle/webapi-vim/example/jugem.vim	/^let imagePath = "\/path\/to\/images\/my-image.gif" $/;"	v
imgurl	bundle/webapi-vim/example/jugem.vim	/^let imgurl = api.newMediaObject(jugem_id, jugem_id, password, {$/;"	v
ineff_expands	bundle/the_silver_searcher/src/uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table
info	bundle/project-1.4.1/plugin/project.vim	/^                let info=s:RecursivelyConstructDirectives(line('.'))$/;"	v
initOpenURL	bundle/vim-rails/autoload/rails.vim	/^function! s:initOpenURL()$/;"	f
initPythonModule	bundle/Gundo/autoload/gundo.py	/^def initPythonModule():$/;"	f
initVariable	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
init_ignore	bundle/the_silver_searcher/src/ignore.c	/^ignores *init_ignore(ignores *parent) {$/;"	f
init_options	bundle/the_silver_searcher/src/options.c	/^void init_options() {$/;"	f
init_settings	bundle/vim-multiple-cursors/plugin/multiple_cursors.vim	/^function! s:init_settings(settings)$/;"	f
init_wordchar_table	bundle/the_silver_searcher/src/util.c	/^void init_wordchar_table(void) {$/;"	f
initialize	bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def initialize(path)$/;"	f	class:VimRubyInstaller.BackupDir
initialize	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def initialize(directory, writer)$/;"	f	class:TargetDirectory
initialize	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def initialize(ending, file_permissions=0644, directory_permissions=0755)$/;"	f	class:FileWriter
initialize	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def initialize(source, target)$/;"	f	class:VimRubyInstaller
ino	bundle/the_silver_searcher/src/search.h	/^    ino_t ino;$/;"	m	struct:__anon4
inputreplacement	bundle/vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
inputtarget	bundle/vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
insert	bundle/vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
insertcache	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertcache(str)$/;"	f
insertstr	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertstr()$/;"	f
install	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def install$/;"	f	class:VimRubyInstaller
install_file	bundle/html5.vim/Makefile	/^install_file = \\$/;"	m
install_git_source	bundle/html5.vim/Makefile	/^install_git_source = \\$/;"	m
install_source	bundle/html5.vim/Makefile	/^install_source = \\$/;"	m
instaweb_url	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(repo,rev,commit,path,type,...) abort$/;"	f
invert_match	bundle/the_silver_searcher/src/options.h	/^    int invert_match;$/;"	m	struct:__anon2
invert_matches	bundle/the_silver_searcher/src/util.c	/^int invert_matches(match matches[], int matches_len, const int buf_len) {$/;"	f
invertrange	bundle/vim-rails/autoload/rails.vim	/^function! s:invertrange(beg,end)$/;"	f
is_binary	bundle/the_silver_searcher/src/util.c	/^int is_binary(const void* buf, const int buf_len) {$/;"	f
is_directory	bundle/the_silver_searcher/src/util.c	/^int is_directory(const char *path, const struct dirent *d) {$/;"	f
is_fnmatch	bundle/the_silver_searcher/src/util.c	/^int is_fnmatch(const char* filename) {$/;"	f
is_lowercase	bundle/the_silver_searcher/src/util.c	/^int is_lowercase(const char* s) {$/;"	f
is_named_pipe	bundle/the_silver_searcher/src/util.c	/^int is_named_pipe(const char *path, const struct dirent *d) {$/;"	f
is_regex	bundle/the_silver_searcher/src/util.c	/^int is_regex(const char* query) {$/;"	f
is_symlink	bundle/the_silver_searcher/src/util.c	/^int is_symlink(const char *path, const struct dirent *d) {$/;"	f
is_target_of_rspec_let	bundle/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:is_target_of_rspec_let(name)$/;"	f
is_wordchar	bundle/the_silver_searcher/src/util.c	/^int is_wordchar(char ch) {$/;"	f
is_zipped	bundle/the_silver_searcher/src/decompress.c	/^ag_compression_type is_zipped(const void* buf, const int buf_len) {$/;"	f
iscmdwin	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:iscmdwin()$/;"	f
ispathitem	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ispathitem()$/;"	f
itertools	bundle/Gundo/autoload/gundo.py	/^import itertools$/;"	i
javascriptEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:javascriptEdit(cmd,...)$/;"	f
javascriptList	bundle/vim-rails/autoload/rails.vim	/^function! s:javascriptList(A,L,P)$/;"	f
jugem_id	bundle/webapi-vim/example/jugem.vim	/^let jugem_id = 'your-jugem-id'$/;"	v
jump	bundle/vim-cucumber/ftplugin/cucumber.vim	/^function! s:jump(command,count)$/;"	f
jumpToFirstChild	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToFirstChild(node)$/;"	f
jumpToLastChild	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToLastChild(node)$/;"	f
jumpToNextSibling	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToNextSibling(node)$/;"	f
jumpToParent	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToParent(node)$/;"	f
jumpToPrevSibling	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
jumpToRoot	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:jumpToRoot()$/;"	f
k	bundle/project-1.4.1/plugin/project.vim	/^            let k=k+1$/;"	v
k	bundle/project-1.4.1/plugin/project.vim	/^        let k=1$/;"	v
key	bundle/the_silver_searcher/src/search.h	/^    dirkey_t key;$/;"	m	struct:__anon5
key	bundle/the_silver_searcher/src/uthash.h	/^   void *key;                        \/* ptr to enclosing struct's key  *\/$/;"	m	struct:UT_hash_handle
key	bundle/webapi-vim/autoload/webapi/atom.vim	/^    let key = substitute(s:key, '\\.\\(.\\)', '\\=toupper(submatch(1))', '')$/;"	v
keylen	bundle/the_silver_searcher/src/uthash.h	/^   unsigned keylen;                  \/* enclosing struct's key len     *\/$/;"	m	struct:UT_hash_handle
l9#async#execute	bundle/vim-l9/autoload/l9/async.vim	/^function l9#async#execute(key, cmd, cwd, input, appends)$/;"	f
l9#async#listActiveWorkers	bundle/vim-l9/autoload/l9/async.vim	/^function l9#async#listActiveWorkers()$/;"	f
l9#async#listWorkers	bundle/vim-l9/autoload/l9/async.vim	/^function l9#async#listWorkers()$/;"	f
l9#async#read	bundle/vim-l9/autoload/l9/async.vim	/^function l9#async#read(key)$/;"	f
l9#completeForInputHl	bundle/vim-l9/autoload/l9.vim	/^function l9#completeForInputHl(lead, line, pos)$/;"	f
l9#concat	bundle/vim-l9/autoload/l9.vim	/^function l9#concat(items)$/;"	f
l9#concatPaths	bundle/vim-l9/autoload/l9.vim	/^function l9#concatPaths(paths)$/;"	f
l9#convertWildcardToRegexp	bundle/vim-l9/autoload/l9.vim	/^function l9#convertWildcardToRegexp(expr)$/;"	f
l9#defineVariableDefault	bundle/vim-l9/autoload/l9.vim	/^function l9#defineVariableDefault(name, default)$/;"	f
l9#deleteAllBuffersExcept	bundle/vim-l9/autoload/l9.vim	/^function l9#deleteAllBuffersExcept(files)$/;"	f
l9#echoHl	bundle/vim-l9/autoload/l9.vim	/^function l9#echoHl(hl, msg, prefix, addingHistory)$/;"	f
l9#filterWithLimit	bundle/vim-l9/autoload/l9.vim	/^function l9#filterWithLimit(items, expr, limit)$/;"	f
l9#getPathSeparator	bundle/vim-l9/autoload/l9.vim	/^function l9#getPathSeparator()$/;"	f
l9#getSelectedText	bundle/vim-l9/autoload/l9.vim	/^function l9#getSelectedText()$/;"	f
l9#getVersion	bundle/vim-l9/autoload/l9.vim	/^function l9#getVersion()$/;"	f
l9#grepBuffers	bundle/vim-l9/autoload/l9.vim	/^function l9#grepBuffers(pattern, bufNrs)$/;"	f
l9#grepFiles	bundle/vim-l9/autoload/l9.vim	/^function l9#grepFiles(pattern, files)$/;"	f
l9#guardScriptLoading	bundle/vim-l9/autoload/l9.vim	/^function l9#guardScriptLoading(path, vimVersion, l9Version, exprs)$/;"	f
l9#hash224	bundle/vim-l9/autoload/l9.vim	/^function l9#hash224(str)$/;"	f
l9#inputHl	bundle/vim-l9/autoload/l9.vim	/^function l9#inputHl(hl, ...)$/;"	f
l9#isCompatible	bundle/vim-l9/autoload/l9.vim	/^function l9#isCompatible(ver)$/;"	f
l9#loadFilesToBuffers	bundle/vim-l9/autoload/l9.vim	/^function l9#loadFilesToBuffers(files)$/;"	f
l9#loadScript	bundle/vim-l9/autoload/l9.vim	/^function l9#loadScript(text)$/;"	f
l9#modifyPathRelativeToDir	bundle/vim-l9/autoload/l9.vim	/^function l9#modifyPathRelativeToDir(path, dir)$/;"	f
l9#moveToBufferWindowInCurrentTabpage	bundle/vim-l9/autoload/l9.vim	/^function l9#moveToBufferWindowInCurrentTabpage(bufNr)$/;"	f
l9#moveToBufferWindowInOtherTabpage	bundle/vim-l9/autoload/l9.vim	/^function l9#moveToBufferWindowInOtherTabpage(bufNr)$/;"	f
l9#notifyBalloonly	bundle/vim-l9/autoload/l9.vim	/^function l9#notifyBalloonly(msg)$/;"	f
l9#notifyExternally	bundle/vim-l9/autoload/l9.vim	/^function l9#notifyExternally(msg)$/;"	f
l9#notifyScreen	bundle/vim-l9/autoload/l9.vim	/^function l9#notifyScreen(msg)$/;"	f
l9#notifyTmux	bundle/vim-l9/autoload/l9.vim	/^function l9#notifyTmux(msg)$/;"	f
l9#placeSign	bundle/vim-l9/autoload/l9.vim	/^function l9#placeSign(linehl, text, texthl, locations)$/;"	f
l9#quickfix#compareEntries	bundle/vim-l9/autoload/l9/quickfix.vim	/^function l9#quickfix#compareEntries(e0, e1)$/;"	f
l9#quickfix#isWindowOpened	bundle/vim-l9/autoload/l9/quickfix.vim	/^function l9#quickfix#isWindowOpened()$/;"	f
l9#quickfix#openIfNotEmpty	bundle/vim-l9/autoload/l9/quickfix.vim	/^function l9#quickfix#openIfNotEmpty(onlyRecognized, holdCursor)$/;"	f
l9#quickfix#placeSign	bundle/vim-l9/autoload/l9/quickfix.vim	/^function l9#quickfix#placeSign()$/;"	f
l9#quickfix#setMakeResult	bundle/vim-l9/autoload/l9/quickfix.vim	/^function l9#quickfix#setMakeResult(lines)$/;"	f
l9#quickfix#sort	bundle/vim-l9/autoload/l9/quickfix.vim	/^function l9#quickfix#sort()$/;"	f
l9#quickfix#toggleWindow	bundle/vim-l9/autoload/l9/quickfix.vim	/^function l9#quickfix#toggleWindow()$/;"	f
l9#readFile	bundle/vim-l9/autoload/l9.vim	/^function l9#readFile(...)$/;"	f
l9#removeIf	bundle/vim-l9/autoload/l9.vim	/^function l9#removeIf(items, expr)$/;"	f
l9#removeLinesBetween	bundle/vim-l9/autoload/l9.vim	/^function l9#removeLinesBetween(lines, begin, end)$/;"	f
l9#shiftWinNextTabpage	bundle/vim-l9/autoload/l9.vim	/^function l9#shiftWinNextTabpage()$/;"	f
l9#shiftWinPrevTabpage	bundle/vim-l9/autoload/l9.vim	/^function l9#shiftWinPrevTabpage()$/;"	f
l9#snipHead	bundle/vim-l9/autoload/l9.vim	/^function l9#snipHead(str, len, mask)$/;"	f
l9#snipMid	bundle/vim-l9/autoload/l9.vim	/^function l9#snipMid(str, len, mask)$/;"	f
l9#snipTail	bundle/vim-l9/autoload/l9.vim	/^function l9#snipTail(str, len, mask)$/;"	f
l9#tempbuffer#close	bundle/vim-l9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#close(bufname)$/;"	f
l9#tempbuffer#isOpen	bundle/vim-l9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#isOpen(bufname)$/;"	f
l9#tempbuffer#moveTo	bundle/vim-l9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#moveTo(bufname)$/;"	f
l9#tempbuffer#openReadOnly	bundle/vim-l9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openReadOnly(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempbuffer#openScratch	bundle/vim-l9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openScratch(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempbuffer#openWritable	bundle/vim-l9/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openWritable(bufname, filetype, lines, topleft, vertical, height, listener)$/;"	f
l9#tempvariables#end	bundle/vim-l9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#end(group)$/;"	f
l9#tempvariables#getList	bundle/vim-l9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#getList(group)$/;"	f
l9#tempvariables#set	bundle/vim-l9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#set(group, name, value)$/;"	f
l9#tempvariables#setList	bundle/vim-l9/autoload/l9/tempvariables.vim	/^function l9#tempvariables#setList(group, variables)$/;"	f
l9#unique	bundle/vim-l9/autoload/l9.vim	/^function l9#unique(items)$/;"	f
l9#uniqueStably	bundle/vim-l9/autoload/l9.vim	/^function l9#uniqueStably(items)$/;"	f
l9#writeAll	bundle/vim-l9/autoload/l9.vim	/^function l9#writeAll()$/;"	f
l9#writeFile	bundle/vim-l9/autoload/l9.vim	/^function l9#writeFile(...)$/;"	f
l9#zip	bundle/vim-l9/autoload/l9.vim	/^function l9#zip(items)$/;"	f
landmark_role	bundle/html5.vim/autoload/xml/aria.vim	/^let landmark_role = ['application', 'banner', 'complementary', 'contentinfo', 'form', 'main', 'navigation', 'search']$/;"	v
landmark_role	bundle/html5.vim/autoload/xml/html5.vim	/^    let landmark_role = ['application', 'banner', 'complementary', 'contentinfo', 'form', 'main', 'navigation', 'search']$/;"	v
lang_tag	bundle/html5.vim/autoload/xml/html5.vim	/^let lang_tag = [$/;"	v
lash	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lash(...)$/;"	f
lash	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! s:lash(...)$/;"	f
lastmethod	bundle/vim-rails/autoload/rails.vim	/^function! s:lastmethod(...)$/;"	f
lastmethodline	bundle/vim-rails/autoload/rails.vim	/^function! s:lastmethodline(start)$/;"	f
lastopeningline	bundle/vim-rails/autoload/rails.vim	/^function! s:lastopeningline(pattern,limit,start)$/;"	f
lastvisual	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lastvisual()$/;"	f
layoutEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:layoutEdit(cmd,...)$/;"	f
layoutList	bundle/vim-rails/autoload/rails.vim	/^function! s:layoutList(A,L,P)$/;"	f
leader	bundle/dbext_2000/plugin/dbext.vim	/^        let leader = g:mapleader$/;"	v
leader	bundle/dbext_2000/plugin/dbext.vim	/^    let leader = '\\'$/;"	v
leader	bundle/dbext_2000/plugin/dbext.vim	/^    let leader = escape(leader, '\\')$/;"	v
leavepre	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:leavepre()$/;"	f
lencompare	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:lencompare(a, b)$/;"	f
level	bundle/the_silver_searcher/src/scandir.h	/^    int level;$/;"	m	struct:__anon3
linechars	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:linechars(pattern)$/;"	f
lineout	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:lineout(dict)$/;"	f
linepeak	bundle/vim-rails/autoload/rails.vim	/^function! s:linepeak()$/;"	f
link_file	bundle/html5.vim/Makefile	/^link_file = \\$/;"	m
linkreltypes	bundle/html5.vim/autoload/xml/html5.vim	/^let linkreltypes = linktypes + ['canonical']$/;"	v
linktypes	bundle/html5.vim/autoload/xml/html5.vim	/^let linktypes = ['alternate', 'author', 'bookmark', 'external', 'help', 'icon', 'license', 'next', 'nofollow', 'noreferrer', 'pingback', 'prefetch', 'prev', 'search', 'stylesheet', 'sidebar', 'tag']$/;"	v
literal	bundle/the_silver_searcher/src/options.h	/^    int literal;$/;"	m	struct:__anon2
literal_ends_wordchar	bundle/the_silver_searcher/src/options.h	/^    int literal_ends_wordchar;$/;"	m	struct:__anon2
literal_starts_wordchar	bundle/the_silver_searcher/src/options.h	/^    int literal_starts_wordchar;$/;"	m	struct:__anon2
live_region_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let live_region_attributes = {'aria-atomic': ['true', 'false'], 'aria-busy': ['true', 'false'], 'aria-live': ['off', 'polite', 'assertive'], 'aria-relevant': ['additions', 'removals', 'text', 'all', 'additions text']}$/;"	v
livedoor_id	bundle/webapi-vim/example/livedoor.vim	/^let livedoor_id = 'your-livedoor-id'$/;"	v
load_ignore_patterns	bundle/the_silver_searcher/src/ignore.c	/^void load_ignore_patterns(ignores *ig, const char *path) {$/;"	f
load_svn_ignore_patterns	bundle/the_silver_searcher/src/ignore.c	/^void load_svn_ignore_patterns(ignores *ig, const char *path) {$/;"	f
loaded_genutils	bundle/genutils-2.5/plugin/genutils.vim	/^let loaded_genutils = 205$/;"	v
loaded_gundo	bundle/Gundo/plugin/gundo.vim	/^let loaded_gundo = 1"}}}$/;"	v
loaded_matchit	bundle/matchit/plugin/matchit.vim	/^let loaded_matchit = 1$/;"	v
loaded_minibufexplorer	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^let loaded_minibufexplorer = 1$/;"	v
loaded_mru	bundle/mru.vim/plugin/mru.vim	/^let loaded_mru=1$/;"	v
loaded_multvals	autoload/multvals.vim	/^let loaded_multvals = 310$/;"	v
loaded_nerd_tree	bundle/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_project	bundle/project-1.4.1/plugin/project.vim	/^let loaded_project=1$/;"	v
loaded_snips	bundle/snipmate.vim/plugin/snipMate.vim	/^let loaded_snips = 1$/;"	v
loaded_supertab	bundle/supertab/plugin/supertab.vim	/^let loaded_supertab = 1$/;"	v
loaded_taglist	bundle/taglist_46/plugin/taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	bundle/taglist_46/plugin/taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	bundle/taglist_46/plugin/taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	bundle/taglist_46/plugin/taglist.vim	/^let loaded_taglist = 'available'$/;"	v
loaded_tcomment	bundle/tcomment_vim/plugin/tcomment.vim	/^let loaded_tcomment = 208$/;"	v
loc	bundle/webapi-vim/example/weather.vim	/^let loc = 'Osaka'$/;"	v
localeEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:localeEdit(cmd,...)$/;"	f
localeList	bundle/vim-rails/autoload/rails.vim	/^function! s:localeList(A,L,P)$/;"	f
log	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:log(m)$/;"	f
log2_num_buckets	bundle/the_silver_searcher/src/uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table
log_debug	bundle/the_silver_searcher/src/log.c	/^void log_debug(const char *fmt, ...) {$/;"	f
log_err	bundle/the_silver_searcher/src/log.c	/^void log_err(const char *fmt, ...) {$/;"	f
log_level	bundle/the_silver_searcher/src/log.h	/^enum log_level {$/;"	g
log_msg	bundle/the_silver_searcher/src/log.c	/^void log_msg(const char *fmt, ...) {$/;"	f
log_threshold	bundle/the_silver_searcher/src/log.c	/^static enum log_level log_threshold = LOG_LEVEL_ERR;$/;"	v	typeref:enum:log_level	file:
log_warn	bundle/the_silver_searcher/src/log.c	/^void log_warn(const char *fmt, ...) {$/;"	f
lsCmd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lsCmd()$/;"	f
main	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([FileName | LibDirs]) ->$/;"	f
main	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([FileName | ["-rebar" | [Path | LibDirs]]]) ->$/;"	f
main	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([FileName]) ->$/;"	f
main	bundle/tcomment_vim/spec/tcomment/issue30_test.c	/^int main()$/;"	f
main	bundle/tcomment_vim/spec/tcomment/issue30_test_2.c	/^int main()$/;"	f
main	bundle/tcomment_vim/spec/tcomment/issue30_test_3.c	/^int main()$/;"	f
main	bundle/the_silver_searcher/src/main.c	/^int main(int argc, char **argv) {$/;"	f
main	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function s:main()$/;"	f
main_syntax	bundle/vim-haml/syntax/haml.vim	/^  let main_syntax = 'haml'$/;"	v
main_syntax	bundle/vim-javascript/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	bundle/vim-ruby/syntax/eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
make	bundle/vim-rails/autoload/rails.vim	/^function! s:make(bang, args, ...)$/;"	f
make_nodes	bundle/Gundo/autoload/gundo.py	/^def make_nodes():$/;"	f
map	bundle/supertab/plugin/supertab.vim	/^      let map = maparg('<cr>', 'i')$/;"	v
map	bundle/supertab/plugin/supertab.vim	/^      let map = s:ExpandMap(map)$/;"	v
map_dict	bundle/supertab/plugin/supertab.vim	/^      let map_dict = maparg('<cr>', 'i', 0, 1)$/;"	v
match	bundle/the_silver_searcher/src/util.h	/^} match;$/;"	t	typeref:struct:__anon6
matchNode	bundle/webapi-vim/autoload/webapi/xml.vim	/^function! s:matchNode(node, cond)$/;"	f
match_files	bundle/the_silver_searcher/src/options.h	/^    int match_files;$/;"	m	struct:__anon2
match_type	bundle/vim-rails/autoload/rails.vim	/^function! s:match_type(type,...)$/;"	f
match_window_opts	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:match_window_opts()$/;"	f
matchcursor	bundle/vim-rails/autoload/rails.vim	/^function! s:matchcursor(pat)$/;"	f
matchfname	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchfname(item, pat)$/;"	f
matchlens	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchlens(str, pat, ...)$/;"	f
matchtabe	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabe(item, pat)$/;"	f
matchtabs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabs(item, pat)$/;"	f
max	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:max(len, max)$/;"	f
max_matches_per_file	bundle/the_silver_searcher/src/options.h	/^    int max_matches_per_file;$/;"	m	struct:__anon2
max_search_depth	bundle/the_silver_searcher/src/options.h	/^    int max_search_depth;$/;"	m	struct:__anon2
maxf	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:maxf(len)$/;"	f
menuRoot	bundle/dbext_2000/plugin/dbext.vim	/^        let menuRoot = '&Plugin.&dbext'$/;"	v
menuRoot	bundle/dbext_2000/plugin/dbext.vim	/^        let menuRoot = '&dbext'$/;"	v
menuRoot	bundle/dbext_2000/plugin/dbext.vim	/^        let menuRoot = 'dbext'$/;"	v
mergelists	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:mergelists()$/;"	f
meta	bundle/webapi-vim/example/gistview.vim	/^  let meta = file.childNodes('div')$/;"	v
metadata_elements	bundle/html5.vim/autoload/xml/html5.vim	/^let metadata_elements = ['link', 'style', 'meta', 'script', 'noscript', 'command']$/;"	v
method	bundle/vim-ruby-refactoring/test/testcases.rb	/^def method$/;"	f
method_one	bundle/vim-ruby-refactoring/test/testcases.rb	/^  def method_one$/;"	f	class:Foo
method_two	bundle/vim-ruby-refactoring/test/testcases.rb	/^  def method_two$/;"	f	class:Foo
mextargs	bundle/vim-rails/autoload/rails.vim	/^function! s:mextargs(str,num)$/;"	f
mfunc	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mfunc()$/;"	f
microdata_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^    let microdata_attributes = {'itemid': [], 'itemscope': ['itemscope', ''], 'itemtype': [], 'itemprop': [], 'itemref': []}$/;"	v
microdata_attributes_value	bundle/html5.vim/autoload/xml/html5.vim	/^    let microdata_attributes_value = {$/;"	v
migemo	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:migemo(str)$/;"	f
migrationEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:migrationEdit(cmd,...)$/;"	f
migrationList	bundle/vim-rails/autoload/rails.vim	/^function! s:migrationList(A,L,P)$/;"	f
migspc	bundle/vim-rails/autoload/rails.vim	/^function! s:migspc(line)$/;"	f
mixedsort	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mixedsort(...)$/;"	f
mkeep	bundle/vim-rails/autoload/rails.vim	/^function! s:mkeep(str)$/;"	f
mkpath	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def mkpath(directory)$/;"	f	class:FileWriter
mmode	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mmode()$/;"	f
model	bundle/vim-rails/autoload/rails.vim	/^function! s:model(...)$/;"	f
modevar	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:modevar()$/;"	f
modify	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:modify(entry, type)$/;"	f
moveToOtherTabpageOpeningBuffer	bundle/vim-l9/autoload/l9.vim	/^function s:moveToOtherTabpageOpeningBuffer(bufNr)$/;"	f
msg	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:msg(name, cwd)$/;"	f
mtype	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mtype()$/;"	f
multiple_cursors#debug	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#debug()$/;"	f
multiple_cursors#find	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#find(start, end, pattern)$/;"	f
multiple_cursors#get_latency_debug_file	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#get_latency_debug_file()$/;"	f
multiple_cursors#new	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#new(mode)$/;"	f
multiple_cursors#prev	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#prev()$/;"	f
multiple_cursors#skip	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#skip()$/;"	f
multipliers	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:multipliers(...)$/;"	f
mysearchpair	bundle/vim-endwise/plugin/endwise.vim	/^function! s:mysearchpair(beginpat,endpat,synpat)$/;"	f
names	bundle/the_silver_searcher/src/ignore.h	/^    char **names; \/* Non-regex ignore lines. Sorted so we can binary search them. *\/$/;"	m	struct:ignores
names	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:names() abort$/;"	f
names_len	bundle/the_silver_searcher/src/ignore.h	/^    size_t names_len;$/;"	m	struct:ignores
narrowable	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:narrowable()$/;"	f
navcommand	bundle/vim-rake/plugin/rake.vim	/^function! s:navcommand(name) abort$/;"	f
nerdtree#bookmarkNode	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#bookmarkNode(...)$/;"	f
nerdtree#bufInWindows	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#bufInWindows(bnum)$/;"	f
nerdtree#centerView	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#centerView()$/;"	f
nerdtree#chRoot	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#chRoot(node)$/;"	f
nerdtree#chRootCwd	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#chRootCwd()$/;"	f
nerdtree#checkForBrowse	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#clearBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#clearBookmarks(bookmarks)$/;"	f
nerdtree#closeTree	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTree()$/;"	f
nerdtree#closeTreeIfOpen	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeIfOpen()$/;"	f
nerdtree#closeTreeIfQuitOnOpen	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeIfQuitOnOpen()$/;"	f
nerdtree#compareBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareBookmarks(first, second)$/;"	f
nerdtree#compareNodes	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#completeBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#createDefaultBindings	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#createDefaultBindings()$/;"	f
nerdtree#deprecated	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#dumpHelp	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#dumpHelp()$/;"	f
nerdtree#echo	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#escChars	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#escChars()$/;"	f
nerdtree#exec	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f
nerdtree#findAndRevealPath	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#findAndRevealPath()$/;"	f
nerdtree#firstUsableWindow	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#firstUsableWindow()$/;"	f
nerdtree#getPath	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#getPath(ln)$/;"	f
nerdtree#getTreeWinNum	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#getTreeWinNum()$/;"	f
nerdtree#has_opt	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#indentLevelFor	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#indentLevelFor(line)$/;"	f
nerdtree#invokeKeyMap	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#invokeKeyMap(key)$/;"	f
nerdtree#isTreeOpen	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#isTreeOpen()$/;"	f
nerdtree#isWindowUsable	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#isWindowUsable(winnumber)$/;"	f
nerdtree#jumpToChild	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#jumpToChild(currentNode, direction)$/;"	f
nerdtree#jumpToSibling	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#jumpToSibling(currentNode, forward)$/;"	f
nerdtree#loadClassFiles	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#openBookmark	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#openBookmark(name)$/;"	f
nerdtree#postSourceActions	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#promptToDelBuffer	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#promptToDelBuffer(bufnum, msg)$/;"	f
nerdtree#putCursorInTreeWin	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#putCursorInTreeWin()$/;"	f
nerdtree#putCursorOnBookmarkTable	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#putCursorOnBookmarkTable()$/;"	f
nerdtree#renderBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderBookmarks()$/;"	f
nerdtree#renderView	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#renderViewSavingPosition	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderViewSavingPosition()$/;"	f
nerdtree#restoreScreenState	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#restoreScreenState()$/;"	f
nerdtree#revealBookmark	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#revealBookmark(name)$/;"	f
nerdtree#runningWindows	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#saveScreenState	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#saveScreenState()$/;"	f
nerdtree#stripMarkupFromLine	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#stripMarkupFromLine(line, removeLeadingSpaces)$/;"	f
nerdtree#tabpagevar	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#tabpagevar(tabnr, var)$/;"	f
nerdtree#treeExistsForBuf	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeExistsForBuf()$/;"	f
nerdtree#treeExistsForTab	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeExistsForTab()$/;"	f
nerdtree#treeMarkupReg	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeMarkupReg()$/;"	f
nerdtree#treeUpDirLine	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeUpDirLine()$/;"	f
nerdtree#treeWid	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#treeWid()$/;"	f
nerdtree#unique	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#unique(list)$/;"	f
nerdtree#upDir	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#upDir(keepState)$/;"	f
nerdtree#version	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version()$/;"	f
newcache	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:newcache(cwd)$/;"	f
next	bundle/the_silver_searcher/src/search.h	/^    struct work_queue_t *next;$/;"	m	struct:work_queue_t	typeref:struct:work_queue_t::work_queue_t
next	bundle/the_silver_searcher/src/uthash.h	/^   void *next;                       \/* next element in app order      *\/$/;"	m	struct:UT_hash_handle
no	bundle/webapi-vim/example/gistview.vim	/^let no = 357275$/;"	v
nocache	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nocache(...)$/;"	f
nocache	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:nocache()$/;"	f
nocache	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! s:nocache()$/;"	f
noexpand	bundle/the_silver_searcher/src/uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table
nonamecond	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nonamecond(str, filpath)$/;"	f
nonideal_items	bundle/the_silver_searcher/src/uthash.h	/^   unsigned nonideal_items;$/;"	m	struct:UT_hash_table
normal	bundle/Gundo/autoload/gundo.py	/^normal = lambda s: vim.command('normal %s' % s)$/;"	v
normalize_path	bundle/the_silver_searcher/src/print.c	/^const char* normalize_path(const char* path) {$/;"	f
nosort	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosort()$/;"	f
nosplit	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosplit()$/;"	f
nr2byte	bundle/webapi-vim/autoload/webapi/html.vim	/^function! s:nr2byte(nr)$/;"	f
nr2byte	bundle/webapi-vim/autoload/webapi/http.vim	/^function! s:nr2byte(nr)$/;"	f
nr2byte	bundle/webapi-vim/autoload/webapi/json.vim	/^function! s:nr2byte(nr)$/;"	f
nr2byte	bundle/webapi-vim/autoload/webapi/xml.vim	/^function! s:nr2byte(nr)$/;"	f
nr2enc_char	bundle/webapi-vim/autoload/webapi/html.vim	/^function! s:nr2enc_char(charcode)$/;"	f
nr2enc_char	bundle/webapi-vim/autoload/webapi/http.vim	/^function! s:nr2enc_char(charcode)$/;"	f
nr2enc_char	bundle/webapi-vim/autoload/webapi/json.vim	/^function! s:nr2enc_char(charcode)$/;"	f
nr2enc_char	bundle/webapi-vim/autoload/webapi/xml.vim	/^function! s:nr2enc_char(charcode)$/;"	f
nr2hex	bundle/webapi-vim/autoload/webapi/http.vim	/^function! s:nr2hex(nr)$/;"	f
nr2hex	bundle/webapi-vim/autoload/webapi/xml.vim	/^function! s:nr2hex(nr)$/;"	f
num_buckets	bundle/the_silver_searcher/src/uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table
num_items	bundle/the_silver_searcher/src/uthash.h	/^   unsigned num_items;$/;"	m	struct:UT_hash_table
obj	bundle/webapi-vim/example/gistview.vim	/^let obj = webapi#json#decode(res.content)$/;"	v
offset	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:offset(lines, height)$/;"	f
omni#common#debug#End	autoload/omni/common/debug.vim	/^function! omni#common#debug#End()$/;"	f
omni#common#debug#Start	autoload/omni/common/debug.vim	/^function! omni#common#debug#Start()$/;"	f
omni#common#debug#Trace	autoload/omni/common/debug.vim	/^function! omni#common#debug#Trace(szFuncName, ...)$/;"	f
omni#common#utils#CompareNumber	autoload/omni/common/utils.vim	/^function! omni#common#utils#CompareNumber(i1, i2)$/;"	f
omni#common#utils#GetWordUnderCursor	autoload/omni/common/utils.vim	/^function! omni#common#utils#GetWordUnderCursor()$/;"	f
omni#common#utils#TagList	autoload/omni/common/utils.vim	/^function! omni#common#utils#TagList(szTagQuery)$/;"	f
omni#common#utils#TagListNoThrow	autoload/omni/common/utils.vim	/^function! omni#common#utils#TagListNoThrow(szTagQuery)$/;"	f
omni#cpp#complete#Init	autoload/omni/cpp/complete.vim	/^function! omni#cpp#complete#Init()$/;"	f
omni#cpp#complete#Main	autoload/omni/cpp/complete.vim	/^function! omni#cpp#complete#Main(findstart, base)$/;"	f
omni#cpp#includes#Display	autoload/omni/cpp/includes.vim	/^function! omni#cpp#includes#Display()$/;"	f
omni#cpp#includes#GetList	autoload/omni/cpp/includes.vim	/^function! omni#cpp#includes#GetList(...)$/;"	f
omni#cpp#items#Get	autoload/omni/cpp/items.vim	/^function! omni#cpp#items#Get(tokens, ...)$/;"	f
omni#cpp#items#ResolveItemsTypeInfo	autoload/omni/cpp/items.vim	/^function! omni#cpp#items#ResolveItemsTypeInfo(contextStack, items)$/;"	f
omni#cpp#maycomplete#Arrow	autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Arrow()$/;"	f
omni#cpp#maycomplete#Complete	autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Complete()$/;"	f
omni#cpp#maycomplete#Dot	autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Dot()$/;"	f
omni#cpp#maycomplete#Scope	autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Scope()$/;"	f
omni#cpp#namespaces#GetContexts	autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetContexts()$/;"	f
omni#cpp#namespaces#GetListFromCurrentBuffer	autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetListFromCurrentBuffer(...)$/;"	f
omni#cpp#namespaces#GetMapFromBuffer	autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetMapFromBuffer(szFilePath, ...)$/;"	f
omni#cpp#namespaces#GetMapFromCurrentBuffer	autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetMapFromCurrentBuffer()$/;"	f
omni#cpp#namespaces#GetUsingNamespaces	autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetUsingNamespaces()$/;"	f
omni#cpp#namespaces#ResolveAlias	autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#ResolveAlias(mapNamespaceAlias, szNamespace)$/;"	f
omni#cpp#namespaces#ResolveAll	autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#ResolveAll(namespacesUsed)$/;"	f
omni#cpp#settings#Init	autoload/omni/cpp/settings.vim	/^function! omni#cpp#settings#Init()$/;"	f
omni#cpp#tokenizer#Tokenize	autoload/omni/cpp/tokenizer.vim	/^function! omni#cpp#tokenizer#Tokenize(szCode)$/;"	f
omni#cpp#utils#BuildParenthesisGroups	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#BuildParenthesisGroups(tokens)$/;"	f
omni#cpp#utils#CreateTypeInfo	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#CreateTypeInfo(param)$/;"	f
omni#cpp#utils#ExtractCmdFromTagItem	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractCmdFromTagItem(tagItem)$/;"	f
omni#cpp#utils#ExtractScope	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractScope(tagItem)$/;"	f
omni#cpp#utils#ExtractTypeInfoFromTag	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractTypeInfoFromTag(tagItem)$/;"	f
omni#cpp#utils#ExtractTypeInfoFromTokens	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractTypeInfoFromTokens(tokens)$/;"	f
omni#cpp#utils#GetCastType	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCastType(tokens)$/;"	f
omni#cpp#utils#GetClassInheritanceList	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetClassInheritanceList(namespaces, typeInfo)$/;"	f
omni#cpp#utils#GetCode	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCode(posStart, posEnd)$/;"	f
omni#cpp#utils#GetCodeFromLine	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCodeFromLine(szSingleLine)$/;"	f
omni#cpp#utils#GetPreviewWindowStringFromTagItem	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetPreviewWindowStringFromTagItem(tagItem)$/;"	f
omni#cpp#utils#GetResolvedTagItem	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetResolvedTagItem(namespaces, typeInfo)$/;"	f
omni#cpp#utils#GetResolvedTags	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetResolvedTags(namespaces, typeInfo)$/;"	f
omni#cpp#utils#GetTypeInfoString	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetTypeInfoString(typeInfo)$/;"	f
omni#cpp#utils#IsCursorInCommentOrString	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#IsCursorInCommentOrString()$/;"	f
omni#cpp#utils#IsTypeInfoValid	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#IsTypeInfoValid(typeInfo)$/;"	f
omni#cpp#utils#ResolveFilePath	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ResolveFilePath(szFile)$/;"	f
omni#cpp#utils#SimplifyParenthesis	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#SimplifyParenthesis(tokens)$/;"	f
omni#cpp#utils#SimplifyScope	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#SimplifyScope(szScope)$/;"	f
omni#cpp#utils#TokenizeCurrentInstruction	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#TokenizeCurrentInstruction(...)$/;"	f
omni#cpp#utils#TokenizeCurrentInstructionUntilWord	autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#TokenizeCurrentInstructionUntilWord()$/;"	f
omni#cpp#utils#expIgnoreComments	autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#expIgnoreComments = 'getline(".") =~ g:omni#cpp#utils#reIgnoreComment'$/;"	v
omni#cpp#utils#reIgnoreComment	autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#reIgnoreComment = escape('\\\/\\\/\\|\\\/\\*\\|\\*\\\/', '*\/\\')$/;"	v
omni#cpp#utils#szEscapedCharacters	autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#szEscapedCharacters = ' %#'$/;"	v
onBufDelete	bundle/vim-l9/autoload/l9/tempbuffer.vim	/^function s:onBufDelete(bufname)$/;"	f
onBufWriteCmd	bundle/vim-l9/autoload/l9/tempbuffer.vim	/^function s:onBufWriteCmd(bufname)$/;"	f
one	bundle/vim-ruby/spec/indent/basic_spec.rb	/^      def one$/;"	f
openExplorer	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openExplorer(node)$/;"	f
openHSplit	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openHSplit(target)$/;"	f
openInNewTab	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openInNewTab(target)$/;"	f
openInNewTabSilent	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openInNewTabSilent(target)$/;"	f
openNodeRecursively	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openNodeRecursively(node)$/;"	f
openVSplit	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:openVSplit(target)$/;"	f
open_browser	bundle/Gist.vim/autoload/gist.vim	/^function! s:open_browser(url)$/;"	f
open_quickfix	bundle/vim-dispatch/autoload/dispatch.vim	/^function! s:open_quickfix(request, copen) abort$/;"	f
openfile	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:openfile(cmd, fid, tail, chkmod, ...)$/;"	f
opfunc	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:opfunc(type) abort$/;"	f
opfunc	bundle/vim-surround/plugin/surround.vim	/^function! s:opfunc(type,...) " {{{1$/;"	f
opfunc2	bundle/vim-surround/plugin/surround.vim	/^function! s:opfunc2(arg)$/;"	f
option_map	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:option_map(letter, option)$/;"	f
options	bundle/vim-tags/plugin/tags.vim	/^let options = []$/;"	v
opts	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:opts(...)$/;"	f
opts	bundle/the_silver_searcher/src/options.h	/^cli_options opts;$/;"	v
os	bundle/vim-l9/autoload/l9/async.py	/^import os$/;"	i
osascript	bundle/vim-dispatch/autoload/dispatch/iterm.vim	/^function! s:osascript(...) abort$/;"	f
out	bundle/vim-css-color/after/syntax/css.vim	/^      let out = substitute( out, ' \\+xxx \\+', ' ', '' )$/;"	v
out	bundle/vim-css-color/after/syntax/css.vim	/^      let out = substitute( out, ' contains=\\zs', '@cssColors,', '' )$/;"	v
out_fd	bundle/the_silver_searcher/src/util.h	/^FILE *out_fd;$/;"	v
pager	bundle/the_silver_searcher/src/options.h	/^    char *pager;$/;"	m	struct:__anon2
parallel	bundle/the_silver_searcher/src/options.h	/^    int parallel;$/;"	m	struct:__anon2
parameter_names_of	bundle/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:parameter_names_of(pairs)$/;"	f
parent	bundle/the_silver_searcher/src/ignore.h	/^    struct ignores *parent;$/;"	m	struct:ignores	typeref:struct:ignores::ignores
parse_node	bundle/webapi-vim/autoload/webapi/atom.vim	/^function! s:parse_node(target, parent)$/;"	f
parse_options	bundle/the_silver_searcher/src/options.c	/^void parse_options(int argc, char **argv, char **base_paths[], char **paths[]) {$/;"	f
parse_return	bundle/webapi-vim/autoload/webapi/soap.vim	/^function! s:parse_return(node)$/;"	f
parse_tree	bundle/webapi-vim/autoload/webapi/xml.vim	/^function! s:parse_tree(ctx, top)$/;"	f
parseline	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:parseline(line)$/;"	f
parts	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:parts(str)$/;"	f
password	bundle/webapi-vim/example/hatenadiary.vim	/^let password = 'your-hatena-password'$/;"	v
password	bundle/webapi-vim/example/jugem.vim	/^let password = 'your-jugem-password'$/;"	v
password	bundle/webapi-vim/example/livedoor.vim	/^let password = 'your-livedoor-password'$/;"	v
path	bundle/the_silver_searcher/src/search.h	/^    char *path;$/;"	m	struct:work_queue_t
path	bundle/vim-ruby/bin/vim-ruby-install.rb	/^    def path$/;"	f	class:VimRubyInstaller.BackupDir
path	bundle/vim-ruby/bin/vim-ruby-install.rb	/^  def path$/;"	f	class:TargetDirectory
path_ignore_search	bundle/the_silver_searcher/src/ignore.c	/^static int path_ignore_search(const ignores *ig, const char *path, const char *filename) {$/;"	f	file:
path_to_agignore	bundle/the_silver_searcher/src/options.h	/^    char *path_to_agignore;$/;"	m	struct:__anon2
pathjoin	bundle/vim-rails/autoload/rails.vim	/^function! s:pathjoin(...) abort$/;"	f
pathogen#cycle_filetype	autoload/pathogen.vim	/^function! pathogen#cycle_filetype() " {{{1$/;"	f
pathogen#execute	autoload/pathogen.vim	/^function! pathogen#execute(...) abort " {{{1$/;"	f
pathogen#fnameescape	autoload/pathogen.vim	/^function! pathogen#fnameescape(string) abort " {{{1$/;"	f
pathogen#glob	autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort " {{{1$/;"	f
pathogen#glob_directories	autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort " {{{1$/;"	f
pathogen#helptags	autoload/pathogen.vim	/^function! pathogen#helptags() abort " {{{1$/;"	f
pathogen#incubate	autoload/pathogen.vim	/^function! pathogen#incubate(...) abort " {{{1$/;"	f
pathogen#infect	autoload/pathogen.vim	/^function! pathogen#infect(...) abort " {{{1$/;"	f
pathogen#is_disabled	autoload/pathogen.vim	/^function! pathogen#is_disabled(path) " {{{1$/;"	f
pathogen#join	autoload/pathogen.vim	/^function! pathogen#join(...) abort " {{{1$/;"	f
pathogen#legacyjoin	autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort " {{{1$/;"	f
pathogen#runtime_append_all_bundles	autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) abort " {{{1$/;"	f
pathogen#runtime_findfile	autoload/pathogen.vim	/^function! pathogen#runtime_findfile(file,count) abort "{{{1$/;"	f
pathogen#runtime_prepend_subdirectories	autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) " {{{1$/;"	f
pathogen#separator	autoload/pathogen.vim	/^function! pathogen#separator() abort " {{{1$/;"	f
pathogen#split	autoload/pathogen.vim	/^function! pathogen#split(path) abort " {{{1$/;"	f
pathogen#surround	autoload/pathogen.vim	/^function! pathogen#surround(path) abort " {{{1$/;"	f
pathogen#uniq	autoload/pathogen.vim	/^function! pathogen#uniq(list) abort " {{{1$/;"	f
paths_len	bundle/the_silver_searcher/src/options.h	/^    int paths_len;$/;"	m	struct:__anon2
pathshorten	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:pathshorten(str)$/;"	f
pathsplit	bundle/vim-rails/autoload/rails.vim	/^function! s:pathsplit(path) abort$/;"	f
pattern	bundle/vim-cucumber/syntax/cucumber.vim	/^function! s:pattern(key)$/;"	f
phrasing_elements	bundle/html5.vim/autoload/xml/html5.vim	/^let phrasing_elements = ['a', 'em', 'strong', 'small', 'mark', 'abbr', 'dfn', 'i', 'b', 'u', 'code', 'var', 'samp', 'kbd', 'sup', 'sub', 'q', 'cite', 'span', 'bdo', 'bdi', 'br', 'wbr', 'ins', 'del', 'img', 'embed', 'object', 'iframe', 'map', 'area', 'script', 'noscript', 'ruby', 'video', 'audio', 'input', 'textarea', 'select', 'button', 'label', 'output', 'datalist', 'keygen', 'progress', 'command', 'canvas', 'time', 'meter', 'data']$/;"	v
pin	bundle/webapi-vim/example/twitter.vim	/^  let pin = input("PIN:")$/;"	v
plog	bundle/the_silver_searcher/src/log.c	/^void plog(const unsigned int level, const char *fmt, ...) {$/;"	f
plural	bundle/Gundo/autoload/gundo.py	/^    def plural(t, c):$/;"	f	function:age
pop_command	bundle/vim-bundler/plugin/bundler.vim	/^function! s:pop_command()$/;"	f
pop_command	bundle/vim-rails/autoload/rails.vim	/^function! s:pop_command()$/;"	f
pop_command	bundle/vim-rake/plugin/rake.vim	/^function! s:pop_command()$/;"	f
pos	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:pos(mark)$/;"	f
postUrl	bundle/webapi-vim/example/livedoor.vim	/^let postUrl = "http:\/\/cms.blog.livedoor.com\/atom"$/;"	v
post_url	bundle/webapi-vim/example/google-buzz.vim	/^let post_url = "https:\/\/www.googleapis.com\/buzz\/v1\/activities\/@me\/@self"$/;"	v
post_url	bundle/webapi-vim/example/twitter.vim	/^let post_url = "https:\/\/api.twitter.com\/1\/statuses\/update.xml"$/;"	v
prev	bundle/the_silver_searcher/src/uthash.h	/^   void *prev;                       \/* prev element in app order      *\/$/;"	m	struct:UT_hash_handle
previewNodeCurrent	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeCurrent(node)$/;"	f
previewNodeHSplit	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeHSplit(node)$/;"	f
previewNodeVSplit	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:previewNodeVSplit(node)$/;"	f
previewwindow	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:previewwindow()$/;"	f
print_active_worker_keys	bundle/vim-l9/autoload/l9/async.py	/^    def print_active_worker_keys(self):$/;"	m	class:Asyncer
print_binary_file_matches	bundle/the_silver_searcher/src/print.c	/^void print_binary_file_matches(const char* path) {$/;"	f
print_break	bundle/the_silver_searcher/src/options.h	/^    int print_break;$/;"	m	struct:__anon2
print_file_matches	bundle/the_silver_searcher/src/print.c	/^void print_file_matches(const char* path, const char* buf, const int buf_len, const match matches[], const int matches_len) {$/;"	f
print_file_separator	bundle/the_silver_searcher/src/print.c	/^void print_file_separator() {$/;"	f
print_filename_only	bundle/the_silver_searcher/src/options.h	/^    int print_filename_only;$/;"	m	struct:__anon2
print_heading	bundle/the_silver_searcher/src/options.h	/^    int print_heading;$/;"	m	struct:__anon2
print_line_number	bundle/the_silver_searcher/src/print.c	/^void print_line_number(const int line, const char sep) {$/;"	f
print_line_numbers	bundle/the_silver_searcher/src/options.h	/^    int print_line_numbers;$/;"	m	struct:__anon2
print_long_lines	bundle/the_silver_searcher/src/options.h	/^    int print_long_lines; \/* TODO: support this in print.c *\/$/;"	m	struct:__anon2
print_mtx	bundle/the_silver_searcher/src/search.h	/^pthread_mutex_t print_mtx;$/;"	v
print_output	bundle/vim-l9/autoload/l9/async.py	/^    def print_output(self, var_key):$/;"	m	class:Asyncer
print_path	bundle/the_silver_searcher/src/print.c	/^void print_path(const char* path, const char sep) {$/;"	f
print_version	bundle/the_silver_searcher/src/options.c	/^void print_version() {$/;"	f
print_worker_keys	bundle/vim-l9/autoload/l9/async.py	/^    def print_worker_keys(self):$/;"	m	class:Asyncer
process	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:process(entries, type)$/;"	f
process	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:process(fname, ftype)$/;"	f
process	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:process(clines, ...)$/;"	f
process	bundle/vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
process_user_input	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:process_user_input()$/;"	f
project	bundle/vim-bundler/plugin/bundler.vim	/^function! s:project(...) abort$/;"	f
project	bundle/vim-rake/plugin/rake.vim	/^function! s:project(...)$/;"	f
project_alter_buffer_paths	bundle/vim-bundler/plugin/bundler.vim	/^function! s:project_alter_buffer_paths() dict abort$/;"	f
project_dirglob	bundle/vim-rake/plugin/rake.vim	/^function! s:project_dirglob(base) dict abort$/;"	f
project_first_file	bundle/vim-rake/plugin/rake.vim	/^function! s:project_first_file(...) dict abort$/;"	f
project_gems	bundle/vim-bundler/plugin/bundler.vim	/^function! s:project_gems() dict abort$/;"	f
project_has	bundle/vim-bundler/plugin/bundler.vim	/^function! s:project_has(gem) dict abort$/;"	f
project_has_directory	bundle/vim-rake/plugin/rake.vim	/^function! s:project_has_directory(file) dict$/;"	f
project_has_file	bundle/vim-rake/plugin/rake.vim	/^function! s:project_has_file(file) dict$/;"	f
project_locked	bundle/vim-bundler/plugin/bundler.vim	/^function! s:project_locked() dict abort$/;"	f
project_makeprg	bundle/vim-rake/plugin/rake.vim	/^function! s:project_makeprg()$/;"	f
project_path	bundle/vim-bundler/plugin/bundler.vim	/^function! s:project_path(...) dict abort$/;"	f
project_path	bundle/vim-rake/plugin/rake.vim	/^function! s:project_path(...) dict abort$/;"	f
project_paths	bundle/vim-bundler/plugin/bundler.vim	/^function! s:project_paths(...) dict abort$/;"	f
project_relglob	bundle/vim-rake/plugin/rake.vim	/^function! s:project_relglob(path,glob,...) dict$/;"	f
project_sorted	bundle/vim-bundler/plugin/bundler.vim	/^function! s:project_sorted() dict abort$/;"	f
project_tags_file	bundle/vim-rake/plugin/rake.vim	/^function! s:project_tags_file() dict abort$/;"	f
project_tasks	bundle/vim-rake/plugin/rake.vim	/^function! s:project_tasks()$/;"	f
project_versions	bundle/vim-bundler/plugin/bundler.vim	/^function! s:project_versions() dict abort$/;"	f
projection_pairs	bundle/vim-rails/autoload/rails.vim	/^function! s:projection_pairs(options)$/;"	f
promptToDelBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToRenameBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToRenameBuffer(bufnum, msg, newFileName)$/;"	f
push_chdir	bundle/vim-bundler/plugin/bundler.vim	/^function! s:push_chdir()$/;"	f
push_chdir	bundle/vim-rails/autoload/rails.vim	/^function! s:push_chdir(...)$/;"	f
push_chdir	bundle/vim-rake/plugin/rake.vim	/^function! s:push_chdir(...)$/;"	f
put	bundle/vim-l9/autoload/l9/async.py	/^    def put(self, executor):$/;"	m	class:Worker
putline	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:putline(how) abort$/;"	f
query	bundle/the_silver_searcher/src/options.h	/^    char *query;$/;"	m	struct:__anon2
query_len	bundle/the_silver_searcher/src/options.h	/^    int query_len;$/;"	m	struct:__anon2
query_path	bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:query_path(root)$/;"	f
rails#app	bundle/vim-rails/autoload/rails.vim	/^function! rails#app(...)$/;"	f
rails#buffer	bundle/vim-rails/autoload/rails.vim	/^function! rails#buffer(...)$/;"	f
rails#cache_clear	bundle/vim-rails/autoload/rails.vim	/^function! rails#cache_clear(...)$/;"	f
rails#camelize	bundle/vim-rails/autoload/rails.vim	/^function! rails#camelize(str)$/;"	f
rails#complete_rake	bundle/vim-rails/autoload/rails.vim	/^function! rails#complete_rake(A,L,P)$/;"	f
rails#get_binding_for	bundle/vim-rails/autoload/rails.vim	/^function! rails#get_binding_for(pid)$/;"	f
rails#json_parse	bundle/vim-rails/autoload/rails.vim	/^function! rails#json_parse(string) abort$/;"	f
rails#lencmp	bundle/vim-rails/autoload/rails.vim	/^function! rails#lencmp(i1, i2) abort$/;"	f
rails#log_syntax	bundle/vim-rails/autoload/rails.vim	/^function! rails#log_syntax()$/;"	f
rails#new_app_command	bundle/vim-rails/autoload/rails.vim	/^function! rails#new_app_command(bang,...) abort$/;"	f
rails#pluralize	bundle/vim-rails/autoload/rails.vim	/^function! rails#pluralize(word)$/;"	f
rails#singularize	bundle/vim-rails/autoload/rails.vim	/^function! rails#singularize(word)$/;"	f
rails#underscore	bundle/vim-rails/autoload/rails.vim	/^function! rails#underscore(str)$/;"	f
railsPluginAbolish	bundle/vim-rails/plugin/rails.vim	/^augroup railsPluginAbolish$/;"	a
railsPluginAuto	bundle/vim-rails/autoload/rails.vim	/^augroup railsPluginAuto$/;"	a
railsPluginDetect	bundle/vim-rails/plugin/rails.vim	/^augroup railsPluginDetect$/;"	a
rake	bundle/vim-rake/plugin/rake.vim	/^augroup rake$/;"	a
rake#buffer	bundle/vim-rake/plugin/rake.vim	/^function! rake#buffer(...) abort$/;"	f
rake#project	bundle/vim-rake/plugin/rake.vim	/^function! rake#project(...) abort$/;"	f
rake_path	bundle/vim-rake/plugin/rake.vim	/^augroup rake_path$/;"	a
rake_tags	bundle/vim-rake/plugin/rake.vim	/^augroup rake_tags$/;"	a
rake_utility	bundle/vim-rake/plugin/rake.vim	/^augroup rake_utility$/;"	a
rdfa_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^    let rdfa_attributes = {'about': [], 'content': [], 'datatype': [], 'prefix': [], 'profile': [], 'property': [], 'resource': [], 'rel': relrev, 'rev': relrev, 'typeof': [], 'vocab': []}$/;"	v
rdfa_attributes_value	bundle/html5.vim/autoload/xml/html5.vim	/^    let rdfa_attributes_value = {$/;"	v
re	bundle/the_silver_searcher/src/options.h	/^    pcre *re;$/;"	m	struct:__anon2
re_extra	bundle/the_silver_searcher/src/options.h	/^    pcre_extra *re_extra;$/;"	m	struct:__anon2
readable_absolute	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_absolute() dict abort$/;"	f
readable_alternate	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_alternate(...) dict abort$/;"	f
readable_alternate_candidates	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_alternate_candidates(...) dict abort$/;"	f
readable_app	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_app() dict abort$/;"	f
readable_calculate_file_type	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_calculate_file_type() dict abort$/;"	f
readable_controller_name	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_controller_name(...) dict abort$/;"	f
readable_default_rake_task	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_default_rake_task(...) dict abort$/;"	f
readable_define_pattern	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_define_pattern() dict abort$/;"	f
readable_end_of	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_end_of(lnum) dict abort$/;"	f
readable_find_affinity	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_find_affinity() dict abort$/;"	f
readable_format	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_format(start) dict abort$/;"	f
readable_last_method	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_method(start) dict abort$/;"	f
readable_last_method_line	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_method_line(start) dict abort$/;"	f
readable_last_opening_line	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_opening_line(start,pattern,limit) dict abort$/;"	f
readable_line_count	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_line_count() dict abort$/;"	f
readable_model_name	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_model_name(...) dict abort$/;"	f
readable_open_command	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_open_command(cmd, argument, name, projections) dict abort$/;"	f
readable_preview_urls	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_preview_urls(lnum) dict abort$/;"	f
readable_projected	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_projected(key, ...) dict abort$/;"	f
readable_related	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_related(...) dict abort$/;"	f
readable_relative	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_relative() dict abort$/;"	f
readable_resolve_layout	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_resolve_layout(name, ...) dict abort$/;"	f
readable_resolve_view	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_resolve_view(name,...) dict abort$/;"	f
readable_runner_command	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_runner_command(bang, count, arg) dict abort$/;"	f
readable_spec	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_spec() dict abort$/;"	f
readable_test_file	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_test_file() dict abort$/;"	f
readable_test_file_candidates	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_test_file_candidates() dict abort$/;"	f
readable_type_name	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_type_name(...) dict abort$/;"	f
readfile	bundle/vim-rails/autoload/rails.vim	/^function! s:readfile(path,...)$/;"	f
realpath	bundle/the_silver_searcher/src/options.c	/^char* realpath(const char *path, char *resolved_path) {$/;"	f
recall	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:recall()$/;"	f
record	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:record(bufnr)$/;"	f
record	bundle/vim-dispatch/autoload/dispatch/tmux.vim	/^function! s:record(pane, request)$/;"	f
record_file	bundle/html5.vim/Makefile	/^record_file = \\$/;"	m
record_output	bundle/vim-l9/autoload/l9/async.py	/^    def record_output(self, line):$/;"	m	class:Worker
recurse_dirs	bundle/the_silver_searcher/src/options.h	/^    int recurse_dirs;$/;"	m	struct:__anon2
redraw	bundle/vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
reformat	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:reformat(mrufs, ...)$/;"	f
refreshCurrent	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:refreshCurrent(node)$/;"	f
refreshRoot	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:refreshRoot()$/;"	f
regexes	bundle/the_silver_searcher/src/ignore.h	/^    char **regexes; \/* For patterns that need fnmatch *\/$/;"	m	struct:ignores
regexes_len	bundle/the_silver_searcher/src/ignore.h	/^    size_t regexes_len;$/;"	m	struct:ignores
regexfilter	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regexfilter(str)$/;"	f
region	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:region(start_mark, end_mark)$/;"	f
regisfilter	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regisfilter(reg)$/;"	f
reindent	bundle/vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
relationship_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let relationship_attributes = {'aria-activedescendant': [], 'aria-controls': [], 'aria-describedby': [], 'aria-flowto': [], 'aria-labelledby': [], 'aria-owns': [], 'aria-posinset': [], 'aria-setsize': []}$/;"	v
relglob	bundle/vim-rails/autoload/rails.vim	/^function! s:relglob(...)$/;"	f
relrev	bundle/html5.vim/autoload/xml/html5.vim	/^    let relrev = ['chapter', 'contents', 'copyright', 'first', 'glossary', 'help', 'icon', 'index', 'last', 'license', 'meta', 'next', 'p3pv1', 'prev', 'role', 'section', 'stylesheet', 'subsection', 'start', 'top', 'up']$/;"	v
remarksigns	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:remarksigns()$/;"	f
repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_configured_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_configured_tree() dict abort$/;"	f
repo_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_head_ref	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
request	bundle/vim-dispatch/autoload/dispatch.vim	/^function! s:request(request) abort$/;"	f
request_token_url	bundle/webapi-vim/example/google-buzz.vim	/^  let request_token_url = "https:\/\/www.google.com\/accounts\/OAuthGetRequestToken"$/;"	v
request_token_url	bundle/webapi-vim/example/twitter.vim	/^  let request_token_url = "https:\/\/twitter.com\/oauth\/request_token"$/;"	v
res	bundle/webapi-vim/example/gistview.vim	/^let res = webapi#http#get(printf('http:\/\/gist.github.com\/%d.json', no))$/;"	v
resetomnicomplete	bundle/vim-rails/autoload/rails.vim	/^function! s:resetomnicomplete()$/;"	f
result_of_executing_the_commands	bundle/vim-ruby-refactoring/features/support/shared_methods.rb	/^def result_of_executing_the_commands$/;"	f
ret	bundle/webapi-vim/example/google-buzz.vim	/^let ret = webapi#oauth#post(post_url, ctx, {}, data, {"Content-Type": "application\/atom+xml", "GData-Version": "2.0"})$/;"	v
ret	bundle/webapi-vim/example/twitter.vim	/^let ret = webapi#oauth#post(post_url, ctx, {}, {"status": status})$/;"	v
return_key	bundle/vim-ruby-refactoring/features/support/shared_methods.rb	/^def return_key$/;"	f
retval	bundle/project-1.4.1/plugin/project.vim	/^        let retval=b:fnamelist$/;"	v
revert_highlight_fix	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:revert_highlight_fix()$/;"	f
revert_mode	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:revert_mode(from, to)$/;"	f
rgb	bundle/guicolorscheme/plugin/guicolorscheme.vim	/^function! s:rgb(r, g, b) "{{{$/;"	f
rgblvl	bundle/guicolorscheme/plugin/guicolorscheme.vim	/^function! s:rgblvl(n) "{{{$/;"	f
rgbnum	bundle/guicolorscheme/plugin/guicolorscheme.vim	/^function! s:rgbnum(x) "{{{$/;"	f
role	bundle/html5.vim/autoload/xml/aria.vim	/^let role = extend(role, landmark_role)$/;"	v
role	bundle/html5.vim/autoload/xml/aria.vim	/^let role = extend(widget_role, document_structure)$/;"	v
role	bundle/html5.vim/autoload/xml/html5.vim	/^    let role = extend(role, landmark_role)$/;"	v
role	bundle/html5.vim/autoload/xml/html5.vim	/^    let role = extend(widget_role, document_structure)$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes = {}$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['alert'] = role_attributes['region']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['alertdialog'] = role_attributes['alert'] + role_attributes['dialog']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['application'] = abstract_role['landmark'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['article'] = role_attributes['document'] + role_attributes['region'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['banner'] = abstract_role['landmark'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['button'] = role_attributes['region'] + role_attributes['menuitemcheckbox']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['checkbox'] = abstract_role['input'] + ['aria-checked'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['columnheader'] = role_attributes['gridcell'] + abstract_role['sectionhead'] + ['aria-sort']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['combobox'] = abstract_role['select'] + ['aria-expanded', 'aria-required'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['complementary'] = abstract_role['landmark'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['contentinfo'] = abstract_role['landmark'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['default'] = abstract_role['roletype']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['definition'] = abstract_role['section'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['dialog'] = abstract_role['window']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['directory'] = role_attributes['list'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['document'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['form'] = abstract_role['landmark'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['grid'] = abstract_role['composite'] + role_attributes['region'] + ['aria-level', 'aria-multiselectable', 'aria-readonly']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['gridcell'] = abstract_role['section'] + abstract_role['widget']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['group'] = abstract_role['section']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['heading'] = abstract_role['sectionhead'] + ['aria-level'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['img'] = abstract_role['section'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['link'] = abstract_role['widget'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['list'] = role_attributes['region'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['listbox'] = role_attributes['list'] + abstract_role['select'] + ['aria-multiselectable', 'aria-required']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['listitem'] = abstract_role['section']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['log'] = role_attributes['region'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['main'] = abstract_role['landmark'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['marquee'] = role_attributes['region'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['math'] = abstract_role['section'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menu'] =  role_attributes['list'] + abstract_role['select'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menubar'] = role_attributes['menu'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menuitem'] = abstract_role['input'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menuitemcheckbox'] = role_attributes['menuitem'] + role_attributes['checkbox']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menuitemradio'] = role_attributes['menuitemcheckbox'] + role_attributes['radio']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['navigation'] = abstract_role['landmark'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['note'] = abstract_role['section'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['option'] = abstract_role['input'] + ['aria-checked', 'aria-posinset', 'aria-selected', 'aria-setsize']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['presentation'] = abstract_role['structure']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['progressbar'] = abstract_role['widget'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow', 'aria-valuetext']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['radio'] = role_attributes['checkbox'] + role_attributes['option']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['radiogroup'] = abstract_role['select'] + ['aria-required']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['region'] = abstract_role['section']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['row'] = role_attributes['group'] + ['aria-level', 'aria-selected']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['rowheader'] = role_attributes['gridcell'] + abstract_role['sectionhead']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['scrollbar'] = abstract_role['range'] + ['aria-controls', 'aria-orientation', 'aria-valuemax', 'aria-valuemin', 'aria-valuenow']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['search'] = abstract_role['landmark']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['separator'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['slider'] = abstract_role['range'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['spinbutton'] = abstract_role['composite'] + abstract_role['range'] + ['aria-required'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['status'] = abstract_role['composite'] + role_attributes['region']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tab'] = abstract_role['sectionhead'] + abstract_role['widget'] + ['aria-selected']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tablist'] = abstract_role['composite'] + role_attributes['directory']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tabpanel'] = role_attributes['region']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['textbox'] = abstract_role['input'] + ['aria-autocomplete', 'aria-multiline', 'aria-readonly', 'aria-required']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['timer'] = role_attributes['status'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['toolbar'] = role_attributes['group'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tooltip'] = abstract_role['section'] $/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tree'] = abstract_role['select'] + ['aria-multiselectable', 'aria-required']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['treegrid'] = role_attributes['grid'] + role_attributes['tree']$/;"	v
role_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['treeitem'] = role_attributes['listitem'] + role_attributes['option']$/;"	v
root_ignores	bundle/the_silver_searcher/src/ignore.h	/^ignores *root_ignores;$/;"	v
rquote	bundle/vim-rails/autoload/rails.vim	/^function! s:rquote(str)$/;"	f
ruby_determine_variables	bundle/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:ruby_determine_variables(block) $/;"	f
ruby_identify_methods	bundle/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:ruby_identify_methods( tuples )$/;"	f
ruby_identify_tokens	bundle/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:ruby_identify_tokens( tokenlist )$/;"	f
ruby_identify_variables	bundle/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:ruby_identify_variables( tuples )$/;"	f
ruby_minlines	bundle/vim-ruby/syntax/ruby.vim	/^    let ruby_minlines = 500$/;"	v
ruby_tokenize	bundle/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:ruby_tokenize( block )$/;"	f
rubycomplete#Complete	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Init	bundle/vim-ruby/autoload/rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
run	bundle/vim-l9/autoload/l9/async.py	/^    def run(self):$/;"	m	class:Worker
runtime	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:runtime(bang, ...) abort$/;"	f
runtime_globpath	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:runtime_globpath(file)$/;"	f
s:ASYNC_PY_PATH	bundle/vim-l9/autoload/l9/async.vim	/^let s:ASYNC_PY_PATH = fnamemodify(expand('<sfile>:p:h'), ':p') . 'async.py'$/;"	v
s:BEGIN_BLOCK	bundle/vim-coffee-script/indent/coffee.vim	/^let s:BEGIN_BLOCK = s:BEGIN_BLOCK_KEYWORD . '\\|' . s:COMPOUND_EXPRESSION$/;"	v
s:BEGIN_BLOCK_KEYWORD	bundle/vim-coffee-script/indent/coffee.vim	/^let s:BEGIN_BLOCK_KEYWORD = '\\C^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:BEGIN_BLOCK_OP	bundle/vim-coffee-script/indent/coffee.vim	/^let s:BEGIN_BLOCK_OP = '[([{:=]$'$/;"	v
s:BRACKET_CONTINUATION	bundle/vim-coffee-script/indent/coffee.vim	/^let s:BRACKET_CONTINUATION = '^\\s*[}\\])]\\s*' . s:CONTINUATION_OP$/;"	v
s:BRACKET_PAIRS	bundle/vim-coffee-script/indent/coffee.vim	/^let s:BRACKET_PAIRS = {']': '\\[', '}': '{', ')': '('}$/;"	v
s:BREAK_BLOCK_OP	bundle/vim-coffee-script/indent/coffee.vim	/^let s:BREAK_BLOCK_OP = '\\C^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:Bookmark	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:BufList	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^let s:BufList = []$/;"	v
s:C	bundle/genutils-2.5/autoload/genutils.vim	/^let s:C = 100$/;"	v
s:CACHE_DEBUG_TRACE	autoload/omni/common/debug.vim	/^let s:CACHE_DEBUG_TRACE = []$/;"	v
s:CACHE_OVERLOADED_FUNCTIONS	autoload/omni/cpp/complete.vim	/^let s:CACHE_OVERLOADED_FUNCTIONS = {}$/;"	v
s:CACHE_TAG_ENV	autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_ENV = ''$/;"	v
s:CACHE_TAG_FILES	autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_FILES = {}$/;"	v
s:CACHE_TAG_POPUP_ITEMS	autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_POPUP_ITEMS = {}$/;"	v
s:COMPOUND_EXPRESSION	bundle/vim-coffee-script/indent/coffee.vim	/^let s:COMPOUND_EXPRESSION = '\\C\\%([^-]-\\|[^+]+\\|[^\/]\/\\|[:=*%&|^<>]\\)\\s*'$/;"	v
s:CONTAINED_THEN	bundle/vim-coffee-script/indent/coffee.vim	/^let s:CONTAINED_THEN = '\\C[(\\[].\\{-}\\<then\\>.\\{-\\}[)\\]]'$/;"	v
s:CONTINUATION	bundle/vim-coffee-script/indent/coffee.vim	/^let s:CONTINUATION = s:CONTINUATION_OP . '\\|' . s:BEGIN_BLOCK_OP$/;"	v
s:CONTINUATION_OP	bundle/vim-coffee-script/indent/coffee.vim	/^let s:CONTINUATION_OP = '\\C\\%(\\<\\%(is\\|isnt\\|and\\|or\\)\\>\\|'$/;"	v
s:Creator	bundle/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:Cursor	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:Cursor = {}$/;"	v
s:CursorManager	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:CursorManager = {}$/;"	v
s:D	bundle/genutils-2.5/autoload/genutils.vim	/^let s:D = 500$/;"	v
s:DEFAULT_LEVEL	bundle/vim-coffee-script/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = '-1'$/;"	v
s:DEFAULT_LEVEL	bundle/vim-coffee-script/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = 'indent(prevnlnum)'$/;"	v
s:DOT_ACCESS	bundle/vim-coffee-script/indent/coffee.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:ELSE_COND	bundle/vim-coffee-script/indent/coffee.vim	/^let s:ELSE_COND = '\\C^\\s*else\\s\\+\\<\\%(if\\|unless\\)\\>'$/;"	v
s:FUNCTION	bundle/vim-coffee-script/indent/coffee.vim	/^let s:FUNCTION = '[-=]>$'$/;"	v
s:I	bundle/genutils-2.5/autoload/genutils.vim	/^let s:I = 1$/;"	v
s:KEYWORD_PAIRS	bundle/vim-coffee-script/indent/coffee.vim	/^let s:KEYWORD_PAIRS = [$/;"	v
s:KeyMap	bundle/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:L	bundle/genutils-2.5/autoload/genutils.vim	/^let s:L = 50$/;"	v
s:L9_VERSION_CURRENT	bundle/vim-l9/autoload/l9.vim	/^let s:L9_VERSION_CURRENT  = 101$/;"	v
s:L9_VERSION_PASSABLE	bundle/vim-l9/autoload/l9.vim	/^let s:L9_VERSION_PASSABLE = 101$/;"	v
s:M	bundle/genutils-2.5/autoload/genutils.vim	/^let s:M = 1000$/;"	v
s:MAX_LOOKBACK	bundle/vim-coffee-script/indent/coffee.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MRUEnable	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^let s:MRUEnable = 1$/;"	v
s:MRUList	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^let s:MRUList = []$/;"	v
s:MenuController	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:NERDTreeSortStarIndex	bundle/nerdtree/lib/nerdtree/path.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NewTabCreated	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^let s:NewTabCreated = 0$/;"	v
s:OmniCpp_ShowAccess	autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowAccess = g:OmniCpp_ShowAccess$/;"	v
s:OmniCpp_ShowPrototypeInAbbr	autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowPrototypeInAbbr = g:OmniCpp_ShowPrototypeInAbbr$/;"	v
s:OmniCpp_ShowScopeInAbbr	autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowScopeInAbbr = g:OmniCpp_ShowScopeInAbbr$/;"	v
s:Opener	bundle/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:POSTFIX_CONDITION	bundle/vim-coffee-script/indent/coffee.vim	/^let s:POSTFIX_CONDITION = '\\C\\S\\s\\+\\zs\\<\\%(if\\|unless\\|when\\|while\\|until\\)\\>'$/;"	v
s:Path	bundle/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:PathSeparator	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^    let s:PathSeparator = '\/'$/;"	v
s:PathSeparator	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^    let s:PathSeparator = '\\'$/;"	v
s:SHA1Context	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:SHA1Context = {}$/;"	v
s:SHA1Context	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:SHA1Context.Computed = 0$/;"	v
s:SHA1Context	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:SHA1Context.Corrupted = 0$/;"	v
s:SHA1Context	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:SHA1Context.Intermediate_Hash = repeat([0], s:SHA1HashSize \/ 4)$/;"	v
s:SHA1Context	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:SHA1Context.Length_High = 0$/;"	v
s:SHA1Context	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:SHA1Context.Length_Low = 0$/;"	v
s:SHA1Context	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:SHA1Context.Message_Block = repeat([0], 64)$/;"	v
s:SHA1Context	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:SHA1Context.Message_Block_Index = 0$/;"	v
s:SHA1HashSize	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:SHA1HashSize = 20$/;"	v
s:SINGLE_LINE_ELSE	bundle/vim-coffee-script/indent/coffee.vim	/^let s:SINGLE_LINE_ELSE = '\\C^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SYNTAX_COMMENT	bundle/vim-coffee-script/indent/coffee.vim	/^let s:SYNTAX_COMMENT = 'coffee\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_STRING	bundle/vim-coffee-script/indent/coffee.vim	/^let s:SYNTAX_STRING = 'coffee\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_STRING_COMMENT	bundle/vim-coffee-script/indent/coffee.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
s:ShiftWidth	bundle/vim-coffee-script/indent/coffee.vim	/^  let s:ShiftWidth = function('shiftwidth')$/;"	v
s:TEST1	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:TEST1   = "abc"$/;"	v
s:TEST2	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:TEST2   = s:TEST2a . s:TEST2b$/;"	v
s:TEST2a	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:TEST2a  = "abcdbcdecdefdefgefghfghighijhi"$/;"	v
s:TEST2b	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:TEST2b  = "jkijkljklmklmnlmnomnopnopq"$/;"	v
s:TEST3	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:TEST3   = "a"$/;"	v
s:TEST4	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:TEST4   = s:TEST4a . s:TEST4b$/;"	v
s:TEST4a	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:TEST4a  = "01234567012345670123456701234567"$/;"	v
s:TEST4b	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:TEST4b  = "01234567012345670123456701234567"$/;"	v
s:Tab	bundle/supertab/plugin/supertab.vim	/^      let s:Tab = function(substitute(existing, '()$', '', ''))$/;"	v
s:TabsMBEState	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^let s:TabsMBEState = 0$/;"	v
s:Tlist_Skip_Refresh	bundle/taglist_46/plugin/taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:TreeDirNode	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:UNPROTECTED_CHAR_PRFX	autoload/multvals.vim	/^let s:UNPROTECTED_CHAR_PRFX = '\\%(\\%([^\\\\]\\|^\\)\\\\\\%(\\\\\\\\\\)*\\)\\@<!' " Doesn't eat slashes.$/;"	v
s:UNPROTECTED_CHAR_PRFX	bundle/genutils-2.5/autoload/genutils.vim	/^let s:UNPROTECTED_CHAR_PRFX = '\\%(\\%([^\\\\]\\|^\\)\\\\\\%(\\\\\\\\\\)*\\)\\@<!' " Doesn't eat slashes.$/;"	v
s:V	bundle/genutils-2.5/autoload/genutils.vim	/^let s:V = 5$/;"	v
s:VERSION_FACTOR	bundle/vim-l9/autoload/l9.vim	/^let s:VERSION_FACTOR = str2float('0.01')$/;"	v
s:X	bundle/genutils-2.5/autoload/genutils.vim	/^let s:X = 10$/;"	v
s:abstract_prototype	bundle/vim-bundler/plugin/bundler.vim	/^let s:abstract_prototype = {}$/;"	v
s:abstract_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:abstract_prototype	bundle/vim-rake/plugin/rake.vim	/^let s:abstract_prototype = {}$/;"	v
s:and	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:and = [$/;"	v
s:app_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:app_prototype = {}$/;"	v
s:app_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:app_prototype.cache = s:cache_prototype$/;"	v
s:apps	bundle/vim-rails/autoload/rails.vim	/^  let s:apps = {}$/;"	v
s:ars	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:ars = ['s:maxdepth', 's:maxfiles', 's:compare_lim', 's:glob', 's:caching']$/;"	v
s:attributes	bundle/vim-haml/indent/haml.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:author_template	bundle/webapi-vim/autoload/webapi/atom.vim	/^let s:author_template = {$/;"	v
s:b	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:b           = ""$/;"	v
s:b	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:b           = ",bold"$/;"	v
s:bMayComplete	autoload/omni/cpp/complete.vim	/^let s:bMayComplete = 0$/;"	v
s:back	bundle/vim-colors-solarized/colors/solarized.vim	/^        let s:back    = s:base03$/;"	v
s:back	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = "NONE"$/;"	v
s:back	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:back$/;"	v
s:back	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:base02$/;"	v
s:back	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:base03$/;"	v
s:bad_input	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:bad_input = 0$/;"	v
s:base0	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "#808080"$/;"	v
s:base0	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "#839496"$/;"	v
s:base0	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "12"$/;"	v
s:base0	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "244"$/;"	v
s:base0	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "LightBlue"     " 4*$/;"	v
s:base0	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = s:base1$/;"	v
s:base0	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = s:temp00$/;"	v
s:base00	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "#585858"$/;"	v
s:base00	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "#657b83"$/;"	v
s:base00	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "11"$/;"	v
s:base00	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "240"$/;"	v
s:base00	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "LightYellow"   " 3*$/;"	v
s:base00	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = s:base0$/;"	v
s:base01	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "#4e4e4e"$/;"	v
s:base01	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "#586e75"$/;"	v
s:base01	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "10"$/;"	v
s:base01	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "239"$/;"	v
s:base01	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "LightGreen"    " 2*$/;"	v
s:base01	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base00$/;"	v
s:base01	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base1$/;"	v
s:base02	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "#073642"$/;"	v
s:base02	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "#262626"$/;"	v
s:base02	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "0"$/;"	v
s:base02	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "235"$/;"	v
s:base02	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "Black"         " 0$/;"	v
s:base02	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = s:base2$/;"	v
s:base03	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "#002b36"$/;"	v
s:base03	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "#1c1c1c"$/;"	v
s:base03	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "234"$/;"	v
s:base03	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "8"$/;"	v
s:base03	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "DarkGray"      " 0*$/;"	v
s:base03	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = s:base3$/;"	v
s:base1	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "#8a8a8a"$/;"	v
s:base1	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "#93a1a1"$/;"	v
s:base1	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "14"$/;"	v
s:base1	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "245"$/;"	v
s:base1	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "LightCyan"     " 6*$/;"	v
s:base1	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = s:base2$/;"	v
s:base1	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = s:temp01$/;"	v
s:base2	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "#d7d7af"$/;"	v
s:base2	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "#eee8d5"$/;"	v
s:base2	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "187"$/;"	v
s:base2	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "7"$/;"	v
s:base2	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "LightGray"     " 7$/;"	v
s:base2	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = s:base3$/;"	v
s:base2	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = s:temp02$/;"	v
s:base3	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "#fdf6e3"$/;"	v
s:base3	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "#ffffd7"$/;"	v
s:base3	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "15"$/;"	v
s:base3	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "230"$/;"	v
s:base3	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "White"         " 7*$/;"	v
s:base3	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = s:temp03$/;"	v
s:bb	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:bb          = ""$/;"	v
s:bb	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:bb          = ",bold"$/;"	v
s:bins	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:bins = [$/;"	v
s:black	bundle/vim-css-color/after/syntax/css.vim	/^    let s:black = 0$/;"	v
s:black	bundle/vim-css-color/after/syntax/css.vim	/^let s:black = '#000000'$/;"	v
s:block_continuation_regex	bundle/vim-ruby/indent/ruby.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_regex	bundle/vim-javascript/indent/javascript.vim	/^let s:block_regex = '\\%([{[]\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\)\\=' . s:line_term$/;"	v
s:block_regex	bundle/vim-ruby/indent/ruby.vim	/^let s:block_regex =$/;"	v
s:blocklevel_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:blocklevel_tags = [$/;"	v
s:blue	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "#0087ff"$/;"	v
s:blue	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "#268bd2"$/;"	v
s:blue	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "33"$/;"	v
s:blue	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "4"$/;"	v
s:blue	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "DarkBlue"      " 4$/;"	v
s:bracket_continuation_regex	bundle/vim-ruby/indent/ruby.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bright	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:bright      = "* term=bold cterm=bold"$/;"	v
s:browsefilter	bundle/vim-haml/ftplugin/haml.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	bundle/vim-haml/ftplugin/haml.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	bundle/vim-haml/ftplugin/haml.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	bundle/vim-ruby/ftplugin/eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:bufNameDict	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^let s:bufNameDict = {}$/;"	v
s:bufPathDict	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^let s:bufPathDict = {}$/;"	v
s:bufPathSignDict	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^let s:bufPathSignDict = {}$/;"	v
s:bufStateDict	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^let s:bufStateDict = {}$/;"	v
s:bufUniqNameDict	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^let s:bufUniqNameDict = {}$/;"	v
s:buffer_prototype	bundle/vim-bundler/plugin/bundler.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_prototype	bundle/vim-rake/plugin/rake.vim	/^let s:buffer_prototype = {}$/;"	v
s:bufprefix	bundle/Gist.vim/autoload/gist.vim	/^let s:bufprefix = 'gist' . (has('unix') ? ':' : '_')$/;"	v
s:c	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:c               = ",undercurl"$/;"	v
s:cache_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:cache_prototype = {'dict': {}}$/;"	v
s:category_template	bundle/webapi-vim/autoload/webapi/atom.vim	/^let s:category_template = {$/;"	v
s:ccex	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:ccex = s:pref.'clear_cache_on_exit'$/;"	v
s:char	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:char = ''$/;"	v
s:check_file	bundle/syntastic/syntax_checkers/erlang/erlang.vim	/^let s:check_file = expand('<sfile>:p:h') . '\/erlang_check_file.erl'$/;"	v
s:check_file	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let s:check_file = 'lessc'$/;"	v
s:check_file	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let s:check_file = 'node ' . expand('<sfile>:p:h') . '\/less-lint.js'$/;"	v
s:cm	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:cm = s:CursorManager.new()$/;"	v
s:coffeeIndentExpr	bundle/vim-coffee-script/after/indent/html.vim	/^let s:coffeeIndentExpr = &l:indentexpr$/;"	v
s:color_prefix	bundle/vim-css-color/after/syntax/css.vim	/^    let s:color_prefix  = 'cterm'$/;"	v
s:color_prefix	bundle/vim-css-color/after/syntax/css.vim	/^let s:color_prefix  = 'gui'$/;"	v
s:colorscheme_list	bundle/vim-colors-solarized/colors/solarized.vim	/^let s:colorscheme_list=[$/;"	v
s:comma_first	bundle/vim-javascript/indent/javascript.vim	/^let s:comma_first = '^\\s*,'$/;"	v
s:comma_last	bundle/vim-javascript/indent/javascript.vim	/^let s:comma_last = ',\\s*$'$/;"	v
s:commands	bundle/vim-bundler/plugin/bundler.vim	/^let s:commands = []$/;"	v
s:commands	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:commands	bundle/vim-rake/plugin/rake.vim	/^let s:commands = []$/;"	v
s:compare_lim	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:compare_lim = 3000$/;"	v
s:configfile	bundle/Gist.vim/autoload/gist.vim	/^let s:configfile = expand('~\/.gist-vim')$/;"	v
s:continuation_regex	bundle/vim-javascript/indent/javascript.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:line_term$/;"	v
s:continuation_regex	bundle/vim-ruby/indent/ruby.vim	/^let s:continuation_regex =$/;"	v
s:cpo_save	bundle/dbext_2000/autoload/dbext.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/dbext_2000/autoload/dbext_dbi.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/dbext_2000/plugin/dbext.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/html5.vim/indent/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/mru.vim/plugin/mru.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/taglist_46/plugin/taglist.vim	/^    let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-bundler/compiler/bundler.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-cucumber/compiler/cucumber.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-haml/compiler/haml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-haml/compiler/sass.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-javascript/indent/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-ruby/compiler/eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-ruby/compiler/rake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-ruby/compiler/rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-ruby/compiler/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-ruby/compiler/rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-ruby/ftplugin/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-ruby/indent/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cppKeyword	autoload/omni/cpp/tokenizer.vim	/^let s:cppKeyword = ['asm', 'auto', 'bool', 'break', 'case', 'catch', 'char', 'class', 'const', 'const_cast', 'continue', 'default', 'delete', 'do', 'double', 'dynamic_cast', 'else', 'enum', 'explicit', 'export', 'extern', 'false', 'float', 'for', 'friend', 'goto', 'if', 'inline', 'int', 'long', 'mutable', 'namespace', 'new', 'operator', 'private', 'protected', 'public', 'register', 'reinterpret_cast', 'return', 'short', 'signed', 'sizeof', 'static', 'static_cast', 'struct', 'switch', 'template', 'this', 'throw', 'true', 'try', 'typedef', 'typeid', 'typename', 'union', 'unsigned', 'using', 'virtual', 'void', 'volatile', 'wchar_t', 'while', 'and', 'and_eq', 'bitand', 'bitor', 'compl', 'not', 'not_eq', 'or', 'or_eq', 'xor', 'xor_eq']$/;"	v
s:cppOperatorPunctuator	autoload/omni/cpp/tokenizer.vim	/^let s:cppOperatorPunctuator = ['->*', '->', '--', '-=', '-', '!=', '!', '##', '#', '%:%:', '%=', '%>', '%:', '%', '&&', '&=', '&', '(', ')', '*=', '*', ',', '...', '.*', '.', '\/=', '\/', '::', ':>', ':', ';', '?', '[', ']', '^=', '^', '{', '||', '|=', '|', '}', '~', '++', '+=', '+', '<<=', '<%', '<:', '<<', '<=', '<', '==', '=', '>>=', '>>', '>=', '>']$/;"	v
s:cssindent	bundle/html5.vim/indent/html.vim	/^let s:cssindent = &indentexpr$/;"	v
s:cubergb	bundle/vim-css-color/after/syntax/css.vim	/^    let s:cubergb = [ 0x00, 0x5F, 0x87, 0xAF, 0xD7, 0xFF ]$/;"	v
s:custom_dirs	bundle/vim-tags/plugin/tags.vim	/^let s:custom_dirs = []$/;"	v
s:cyan	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#00afaf"$/;"	v
s:cyan	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#2aa198"$/;"	v
s:cyan	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "37"$/;"	v
s:cyan	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "6"$/;"	v
s:cyan	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "DarkCyan"      " 6$/;"	v
s:dataMap	bundle/vim-l9/autoload/l9/tempbuffer.vim	/^let s:dataMap = {}$/;"	v
s:dbext_buffer_last	bundle/dbext_2000/autoload/dbext.vim	/^let s:dbext_buffer_last       = -1$/;"	v
s:dbext_buffer_last_winnr	bundle/dbext_2000/autoload/dbext.vim	/^let s:dbext_buffer_last_winnr = -1$/;"	v
s:dbext_buffers_with_dict_files	bundle/dbext_2000/autoload/dbext.vim	/^let s:dbext_buffers_with_dict_files = []$/;"	v
s:dbext_prev_sql	bundle/dbext_2000/autoload/dbext.vim	/^let s:dbext_prev_sql     = ''$/;"	v
s:dbext_result_count	bundle/dbext_2000/autoload/dbext.vim	/^let s:dbext_result_count = 0$/;"	v
s:dbext_tempfile	bundle/dbext_2000/autoload/dbext.vim	/^let s:dbext_tempfile = fnamemodify(tempname(), ":h")$/;"	v
s:dbext_tempfile	bundle/dbext_2000/autoload/dbext.vim	/^let s:dbext_tempfile = s:dbext_tempfile.(s:dbext_tempfile =~ '^\/' ? '\/' : '\\').'dbext.sql'$/;"	v
s:debugIndex	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^let s:debugIndex = 0$/;"	v
s:decoder	bundle/syntastic/syntax_checkers/html/validator.vim	/^let s:decoder = 'awk -f ' . syntastic#util#shescape(expand('<sfile>:p:h') . '\/validator_decode.awk')$/;"	v
s:defFCShellInstalled	bundle/genutils-2.5/autoload/genutils.vim	/^let s:defFCShellInstalled = 0$/;"	v
s:defaultCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^let s:defaultCheckers = {$/;"	v
s:defaultCommentString	bundle/tcomment_vim/autoload/tcomment.vim	/^let s:defaultCommentString = s:DefaultValue('commentstring')$/;"	v
s:defaultComments	bundle/tcomment_vim/autoload/tcomment.vim	/^let s:defaultComments      = s:DefaultValue('comments')$/;"	v
s:defaultFiletypeMap	bundle/syntastic/plugin/syntastic/registry.vim	/^let s:defaultFiletypeMap = {$/;"	v
s:default_includes	bundle/syntastic/autoload/syntastic/c.vim	/^let s:default_includes = [$/;"	v
s:defaults_list	bundle/vim-colors-solarized/colors/solarized.vim	/^let s:defaults_list=[$/;"	v
s:definitions	bundle/tcomment_vim/autoload/tcomment.vim	/^let s:definitions = {}$/;"	v
s:deprecationNoticesIssued	bundle/syntastic/autoload/syntastic/util.vim	/^let s:deprecationNoticesIssued = []$/;"	v
s:did_snip_helper	bundle/snipmate.vim/ftplugin/html_snip_helper.vim	/^let s:did_snip_helper = 1$/;"	v
s:did_snips_mappings	bundle/snipmate.vim/after/plugin/snipMate.vim	/^let s:did_snips_mappings = 1$/;"	v
s:dircounts	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:dircounts = {}$/;"	v
s:done_bundles	autoload/pathogen.vim	/^let s:done_bundles = ''$/;"	v
s:efm_generate	bundle/vim-rails/autoload/rails.vim	/^let s:efm_generate =$/;"	v
s:empty_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:empty_tags = [$/;"	v
s:end_end_regex	bundle/vim-ruby/indent/ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_middle_regex	bundle/vim-ruby/indent/ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\|when\\|elsif\\):\\@!\\>'$/;"	v
s:end_skip_expr	bundle/vim-ruby/indent/ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_start_regex	bundle/vim-ruby/indent/ruby.vim	/^let s:end_start_regex =$/;"	v
s:entry_template	bundle/webapi-vim/autoload/webapi/atom.vim	/^let s:entry_template = {$/;"	v
s:esc_filename_chars	bundle/mru.vim/plugin/mru.vim	/^let s:esc_filename_chars = ' *?[{`$%#"|!<>();&' . "'\\t\\n"$/;"	v
s:escapes	bundle/vim-scriptease/plugin/scriptease.vim	/^let s:escapes = {$/;"	v
s:expandable	bundle/vim-dispatch/autoload/dispatch.vim	/^let s:expandable = '\\\\*\\%(<\\w\\+>\\|%\\|#\\d*\\)' . s:flags$/;"	v
s:extend	bundle/vim-haml/indent/sass.vim	/^let s:extend = '^\\s*\\%(@extend\\|@include\\|+\\)'$/;"	v
s:extmap	bundle/Gist.vim/autoload/gist.vim	/^let s:extmap = {$/;"	v
s:fcShellPreFuncs	bundle/genutils-2.5/autoload/genutils.vim	/^  let s:fcShellPreFuncs = {}$/;"	v
s:feed_template	bundle/webapi-vim/autoload/webapi/atom.vim	/^let s:feed_template = {$/;"	v
s:fg_color_calc	bundle/vim-css-color/after/syntax/css.vim	/^    let s:fg_color_calc = 'let color = s:XTermColorForRGB(a:color)'$/;"	v
s:fg_color_calc	bundle/vim-css-color/after/syntax/css.vim	/^let s:fg_color_calc = 'let color = "#" . toupper(a:color)'$/;"	v
s:fg_pdef	bundle/vim-colors-solarized/colors/solarized.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_phead	bundle/vim-colors-solarized/colors/solarized.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:fg_ptable	bundle/vim-colors-solarized/colors/solarized.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:ficounts	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:ficounts = {}$/;"	v
s:file	bundle/vim-rails/autoload/rails.vim	/^let s:file = expand('<sfile>:p')$/;"	v
s:file_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:file_prototype = {}$/;"	v
s:filecounts	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:filecounts = {}$/;"	v
s:files	bundle/vim-dispatch/autoload/dispatch.vim	/^  let s:files = {}$/;"	v
s:first_completion	bundle/tcomment_vim/autoload/tcomment.vim	/^let s:first_completion = 0$/;"	v
s:first_sign_id	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:first_sign_id = 5000$/;"	v
s:flags	bundle/vim-dispatch/autoload/dispatch.vim	/^let s:flags = '\\%(:[p8~.htre]\\|:g\\=s\\(.\\).\\{-\\}\\1.\\{-\\}\\1\\)*'$/;"	v
s:fpats	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:fpats = {$/;"	v
s:from_mode	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:from_mode = ''$/;"	v
s:glbs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:glbs = { 'magic': 1, 'to': 1, 'tm': 0, 'sb': 1, 'hls': 0, 'im': 0,$/;"	v
s:green	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "#5f8700"$/;"	v
s:green	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "#719e07" "experimental$/;"	v
s:green	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "2"$/;"	v
s:green	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "64"$/;"	v
s:green	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "DarkGreen"     " 2$/;"	v
s:hasPreviewWindow	autoload/omni/cpp/complete.vim	/^let s:hasPreviewWindow = match(&completeopt, 'preview')>=0$/;"	v
s:hasPreviewWindowOld	autoload/omni/cpp/complete.vim	/^let s:hasPreviewWindowOld = s:hasPreviewWindow$/;"	v
s:has_highlighting	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let s:has_highlighting = v:version > 701 || (v:version == 701 && has('patch040'))$/;"	v
s:has_maven	bundle/syntastic/syntax_checkers/java/javac.vim	/^let s:has_maven = 0$/;"	v
s:has_supported_python	bundle/Gundo/autoload/gundo.vim	/^    let s:has_supported_python = 1$/;"	v
s:has_supported_python	bundle/Gundo/autoload/gundo.vim	/^    let s:has_supported_python = 2$/;"	v
s:has_supported_python	bundle/Gundo/autoload/gundo.vim	/^let s:has_supported_python = 0$/;"	v
s:hex	bundle/vim-css-color/after/syntax/css.vim	/^  let s:hex[ printf( '%02x', i ) ] = i$/;"	v
s:hex	bundle/vim-css-color/after/syntax/css.vim	/^let s:hex={}$/;"	v
s:hi_group_cursor	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:hi_group_cursor = 'multiple_cursors_cursor'$/;"	v
s:hi_group_visual	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:hi_group_visual = 'multiple_cursors_visual'$/;"	v
s:hlgrps	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:hlgrps = {$/;"	v
s:htmlIndentExpr	bundle/vim-coffee-script/after/indent/html.vim	/^let s:htmlIndentExpr = &l:indentexpr$/;"	v
s:html_indent_tags	bundle/html5.vim/indent/html.vim	/^    let s:html_indent_tags = s:html_indent_tags.'\\|'.g:html_indent_tags$/;"	v
s:html_indent_tags	bundle/html5.vim/indent/html.vim	/^let s:html_indent_tags = join(s:tags, '\\|')$/;"	v
s:i	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:i           = ""$/;"	v
s:i	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:i           = ",italic"$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:ignore_errors	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:ignore_errors = [$/;"	v
s:imports	bundle/syntastic/syntax_checkers/sass/sass.vim	/^    let s:imports = "--compass"$/;"	v
s:imports	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:imports = ""$/;"	v
s:inline_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:inline_tags = [$/;"	v
s:js_keywords	bundle/vim-javascript/indent/javascript.vim	/^let s:js_keywords = '^\\s*\\(break\\|case\\|catch\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|finally\\|for\\|function\\|if\\|in\\|instanceof\\|new\\|return\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\)'$/;"	v
s:jsindent	bundle/html5.vim/indent/html.vim	/^let s:jsindent = &indentexpr$/;"	v
s:k	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:k = [$/;"	v
s:kprange	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:kprange = {$/;"	v
s:last_mps	bundle/matchit/plugin/matchit.vim	/^let s:last_mps = ""$/;"	v
s:last_words	bundle/matchit/plugin/matchit.vim	/^let s:last_words = ":"$/;"	v
s:latency_debug_file	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:latency_debug_file = ''$/;"	v
s:lazycat_list	bundle/vim-colors-solarized/colors/solarized.vim	/^let s:lazycat_list=[$/;"	v
s:line_term	bundle/vim-javascript/indent/javascript.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:lines	bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	bundle/vim-ruby/syntax/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:link_template	bundle/webapi-vim/autoload/webapi/atom.vim	/^let s:link_template = {$/;"	v
s:magenta	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#af005f"$/;"	v
s:magenta	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#d33682"$/;"	v
s:magenta	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "125"$/;"	v
s:magenta	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "5"$/;"	v
s:magenta	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "DarkMagenta"   " 5$/;"	v
s:makeArgumentList	bundle/genutils-2.5/autoload/genutils.vim	/^let s:makeArgumentList = ''$/;"	v
s:makeArgumentString	bundle/genutils-2.5/autoload/genutils.vim	/^let s:makeArgumentString = ''$/;"	v
s:make_pane	bundle/vim-dispatch/autoload/dispatch/tmux.vim	/^let s:make_pane = tempname()$/;"	v
s:makes	bundle/vim-dispatch/autoload/dispatch.vim	/^  let s:makes = []$/;"	v
s:match_words	bundle/vim-haml/ftplugin/haml.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	bundle/vim-haml/ftplugin/haml.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	bundle/vim-haml/ftplugin/haml.vim	/^let s:match_words = ""$/;"	v
s:match_words	bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	bundle/vim-ruby/ftplugin/eruby.vim	/^let s:match_words = ""$/;"	v
s:maxTabWidth	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^let s:maxTabWidth = 0$/;"	v
s:menu_char_prefix	bundle/taglist_46/plugin/taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:miniBufExplBufList	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^let s:miniBufExplBufList = ''$/;"	v
s:miniBufExplInAutoUpdate	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^let s:miniBufExplInAutoUpdate = 0$/;"	v
s:modemap	bundle/syntastic/plugin/syntastic.vim	/^let s:modemap = g:SyntasticModeMap.Instance()$/;"	v
s:modes	bundle/supertab/plugin/supertab.vim	/^  let s:modes = '\/^E\/^Y\/^L\/^N\/^K\/^T\/^I\/^]\/^F\/^D\/^V\/^P\/^U\/^O\/s'$/;"	v
s:modes	bundle/supertab/plugin/supertab.vim	/^  let s:modes = s:modes . '\/n\/p'$/;"	v
s:mru_list_locked	bundle/mru.vim/plugin/mru.vim	/^let s:mru_list_locked = 0$/;"	v
s:msl_regex	bundle/vim-javascript/indent/javascript.vim	/^let s:msl_regex = '\\%([\\\\*+\/.:([]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:line_term$/;"	v
s:mySNR	bundle/genutils-2.5/autoload/genutils.vim	/^let s:mySNR = ''$/;"	v
s:myScriptId	autoload/multvals.vim	/^let s:myScriptId = s:MyScriptId()$/;"	v
s:n	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:n               = "NONE"$/;"	v
s:next_sign_id	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:next_sign_id = s:first_sign_id$/;"	v
s:non_bracket_continuation_regex	bundle/vim-ruby/indent/ruby.vim	/^let s:non_bracket_continuation_regex = '\\%([\\\\.,:*\/%+]\\|\\<and\\|\\<or\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:none	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:none            = "NONE"$/;"	v
s:notifier_types	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let s:notifier_types = ['signs', 'balloons', 'highlighting', 'cursor', 'autoloclist']$/;"	v
s:notifiers	bundle/syntastic/plugin/syntastic.vim	/^let s:notifiers = g:SyntasticNotifiers.Instance()$/;"	v
s:notifyWindow	bundle/genutils-2.5/autoload/genutils.vim	/^let s:notifyWindow = {}$/;"	v
s:notslash	bundle/matchit/plugin/matchit.vim	/^let s:notslash = '\\\\\\@<!\\%(\\\\\\\\\\)*'$/;"	v
s:nullCommentString	bundle/tcomment_vim/autoload/tcomment.vim	/^let s:nullCommentString    = '%s'$/;"	v
s:ob	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:ob              = ""$/;"	v
s:ocamlpp	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp="camlp4o"$/;"	v
s:ocamlpp	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp="camlp4r"$/;"	v
s:old_cpo	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:one_line_scope_regex	bundle/vim-javascript/indent/javascript.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:options	bundle/vim-tags/plugin/tags.vim	/^let s:options = join(options, ' ')$/;"	v
s:options_list	bundle/vim-colors-solarized/colors/solarized.vim	/^let s:options_list=[$/;"	v
s:or	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:or = [$/;"	v
s:orange	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "#cb4b16"$/;"	v
s:orange	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "#d75f00"$/;"	v
s:orange	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "166"$/;"	v
s:orange	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "9"$/;"	v
s:orange	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "LightRed"      " 1*$/;"	v
s:origMap	bundle/vim-l9/autoload/l9/tempvariables.vim	/^let s:origMap = {}$/;"	v
s:ou	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:ou              = ""$/;"	v
s:ou	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:ou          = ",underline"$/;"	v
s:pat	bundle/vim-coffee-script/compiler/coffee.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:plugin_path	bundle/Gundo/autoload/gundo.vim	/^let s:plugin_path = escape(expand('<sfile>:p:h'), '\\')$/;"	v
s:popupItemResultList	autoload/omni/cpp/complete.vim	/^let s:popupItemResultList = []$/;"	v
s:project_prototype	bundle/vim-bundler/plugin/bundler.vim	/^let s:project_prototype = {}$/;"	v
s:project_prototype	bundle/vim-rake/plugin/rake.vim	/^let s:project_prototype = {}$/;"	v
s:projections_for_gems	bundle/vim-rails/autoload/rails.vim	/^let s:projections_for_gems = {}$/;"	v
s:projects	bundle/vim-bundler/plugin/bundler.vim	/^let s:projects = {}$/;"	v
s:projects	bundle/vim-rake/plugin/rake.vim	/^let s:projects = {}$/;"	v
s:property	bundle/vim-haml/indent/sass.vim	/^let s:property = '^\\s*:\\|^\\s*[[:alnum:]#{}-]\\+\\%(:\\|\\s*=\\)'$/;"	v
s:pylint_new	bundle/syntastic/syntax_checkers/python/pylint.vim	/^let s:pylint_new = -1$/;"	v
s:r	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:r               = ",reverse"$/;"	v
s:reCComment	autoload/omni/cpp/tokenizer.vim	/^let s:reCComment = '\\\/\\*\\|\\*\\\/'$/;"	v
s:reComment	autoload/omni/cpp/tokenizer.vim	/^let s:reComment = s:reCComment.'\\|'.s:reCppComment$/;"	v
s:reCppComment	autoload/omni/cpp/tokenizer.vim	/^let s:reCppComment = '\\\/\\\/'$/;"	v
s:reCppKeyword	autoload/omni/cpp/tokenizer.vim	/^let s:reCppKeyword = '\\C\\<'.join(s:cppKeyword, '\\>\\|\\<').'\\>'$/;"	v
s:reCppOperatorOrPunctuator	autoload/omni/cpp/tokenizer.vim	/^let s:reCppOperatorOrPunctuator = escape(join(s:cppOperatorPunctuator, '\\|'), '*.\/^~[]')$/;"	v
s:reIncludeFilePart	autoload/omni/cpp/includes.vim	/^let s:reIncludeFilePart = '\\(<\\|"\\)\\(\\f\\|\\s\\)\\+\\(>\\|"\\)'$/;"	v
s:rePreprocIncludeFile	autoload/omni/cpp/includes.vim	/^let s:rePreprocIncludeFile = s:rePreprocIncludePart . s:reIncludeFilePart$/;"	v
s:rePreprocIncludePart	autoload/omni/cpp/includes.vim	/^let s:rePreprocIncludePart = '\\C#\\s*include\\s*'$/;"	v
s:readable_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:readable_prototype = {}$/;"	v
s:red	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "#af0000"$/;"	v
s:red	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "#dc322f"$/;"	v
s:red	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "1"$/;"	v
s:red	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "124"$/;"	v
s:red	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "DarkRed"       " 1$/;"	v
s:registry	bundle/syntastic/plugin/syntastic.vim	/^let s:registry = g:SyntasticRegistry.Instance()$/;"	v
s:repeatcount	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:repeatcount = [1, 1, 1000000, 10]$/;"	v
s:repo_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:resultarray	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:resultarray = [$/;"	v
s:ruby_deindent_keywords	bundle/vim-ruby/indent/ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_indent_keywords	bundle/vim-ruby/indent/ruby.vim	/^let s:ruby_indent_keywords = '^\\s*\\zs\\<\\%(module\\|class\\|def\\|if\\|for' .$/;"	v
s:ruby_path	bundle/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_path = s:build_path(s:ruby_paths)$/;"	v
s:ruby_path	bundle/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_path = type(g:ruby_path) == type([]) ? join(g:ruby_path, ',') : g:ruby_path$/;"	v
s:ruby_paths	bundle/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_default_path$/;"	v
s:ruby_paths	bundle/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_version_paths[b:ruby_version]$/;"	v
s:rubycomplete_debug	bundle/vim-ruby/autoload/rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rubycomplete_rails_loaded	bundle/vim-ruby/autoload/rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
s:running_windows	bundle/syntastic/plugin/syntastic.vim	/^let s:running_windows = has("win16") || has("win32")$/;"	v
s:s	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:s               = ",standout"$/;"	v
s:sass_cache_location	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:sass_cache_location = tempname()$/;"	v
s:save_cpo	autoload/multvals.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/Gist.vim/autoload/gist.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/genutils-2.5/autoload/genutils.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/matchit/plugin/matchit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/supertab/plugin/supertab.vim	/^let s:save_cpo=&cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/c.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/postprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/make.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/d/dmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vim-haml/ftplugin/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vim-ruby/ftplugin/eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/webapi-vim/autoload/webapi/atom.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/webapi-vim/autoload/webapi/base64.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/webapi-vim/autoload/webapi/bit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/webapi-vim/autoload/webapi/feed.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/webapi-vim/autoload/webapi/html.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/webapi-vim/autoload/webapi/http.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/webapi-vim/autoload/webapi/json.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/webapi-vim/autoload/webapi/jsonrpc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/webapi-vim/autoload/webapi/metaWeblog.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/webapi-vim/autoload/webapi/oauth.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/webapi-vim/autoload/webapi/soap.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/webapi-vim/autoload/webapi/ucs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/webapi-vim/autoload/webapi/xml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/webapi-vim/autoload/webapi/xmlrpc.vim	/^let s:save_cpo = &cpo$/;"	v
s:saved_line	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_line = 0$/;"	v
s:saved_linecount	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_linecount = -1$/;"	v
s:selection	autoload/multvals.vim	/^let s:selection = -1$/;"	v
s:selection	bundle/genutils-2.5/autoload/genutils.vim	/^let s:selection = -1$/;"	v
s:settings	bundle/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:settings = {$/;"	v
s:settings_if_default	bundle/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:settings_if_default = {$/;"	v
s:setup_done	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:setup_done = 0$/;"	v
s:shaInputTooLong	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:shaInputTooLong = 2 " input data too long$/;"	v
s:shaNull	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:shaNull = 1         " Null pointer parameter$/;"	v
s:shaStateError	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:shaStateError = 3   " called Input after Result$/;"	v
s:shaSuccess	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:shaSuccess = 0$/;"	v
s:sid	bundle/vim-rails/autoload/rails.vim	/^let s:sid = s:sub(maparg("<SID>xx"),'xx$','')$/;"	v
s:skip_expr	bundle/vim-javascript/indent/javascript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:skip_expr	bundle/vim-ruby/indent/ruby.vim	/^let s:skip_expr =$/;"	v
s:snippets	bundle/snipmate.vim/plugin/snipMate.vim	/^let s:snippets = {} | let s:multi_snips = {}$/;"	v
s:solarized_termtrans_default	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:solarized_termtrans_default = 0$/;"	v
s:solarized_termtrans_default	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:solarized_termtrans_default = 1$/;"	v
s:sp_back	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_back      = ""$/;"	v
s:sp_base0	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base0     = ""$/;"	v
s:sp_base00	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base00    = ""$/;"	v
s:sp_base01	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base01    = ""$/;"	v
s:sp_base02	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base02    = ""$/;"	v
s:sp_base03	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base03    = ""$/;"	v
s:sp_base1	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base1     = ""$/;"	v
s:sp_base2	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base2     = ""$/;"	v
s:sp_base3	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base3     = ""$/;"	v
s:sp_blue	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_blue      = ""$/;"	v
s:sp_cyan	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_cyan      = ""$/;"	v
s:sp_green	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_green     = ""$/;"	v
s:sp_magenta	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_magenta   = ""$/;"	v
s:sp_none	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_none      = ""$/;"	v
s:sp_orange	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_orange    = ""$/;"	v
s:sp_red	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_red       = ""$/;"	v
s:sp_violet	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_violet    = ""$/;"	v
s:sp_yellow	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_yellow    = ""$/;"	v
s:spacer	bundle/genutils-2.5/autoload/genutils.vim	/^let s:spacer= "                                                               ".$/;"	v
s:special_keys	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:special_keys = {$/;"	v
s:splat_regex	bundle/vim-ruby/indent/ruby.vim	/^let s:splat_regex = '[[,(]\\s*\\*\\s*\\%(#.*\\)\\=$'$/;"	v
s:standard_table	bundle/webapi-vim/autoload/webapi/base64.vim	/^let s:standard_table = [$/;"	v
s:syng_linecom	bundle/vim-javascript/indent/javascript.vim	/^let s:syng_linecom = 'linecomment\\c'$/;"	v
s:syng_multiline	bundle/vim-javascript/indent/javascript.vim	/^let s:syng_multiline = 'comment\\c'$/;"	v
s:syng_strcom	bundle/vim-javascript/indent/javascript.vim	/^let s:syng_strcom = 'string\\|regex\\|comment\\c'$/;"	v
s:syng_strcom	bundle/vim-ruby/indent/ruby.vim	/^let s:syng_strcom = '\\<ruby\\%(Regexp\\|RegexpDelimiter\\|RegexpEscape' .$/;"	v
s:syng_string	bundle/vim-javascript/indent/javascript.vim	/^let s:syng_string = 'regex\\c'$/;"	v
s:syng_string	bundle/vim-ruby/indent/ruby.vim	/^let s:syng_string =$/;"	v
s:syng_stringdoc	bundle/vim-ruby/indent/ruby.vim	/^let s:syng_stringdoc =$/;"	v
s:system	bundle/Gist.vim/autoload/gist.vim	/^  let s:system = function(get(g:, 'webapi#system_function', 'system'))$/;"	v
s:system	bundle/webapi-vim/autoload/webapi/atom.vim	/^let s:system = function(get(g:, 'webapi#system_function', 'system'))$/;"	v
s:system	bundle/webapi-vim/autoload/webapi/http.vim	/^let s:system = function(get(g:, 'webapi#system_function', 'system'))$/;"	v
s:system	bundle/webapi-vim/autoload/webapi/xmlrpc.vim	/^let s:system = function(get(g:, 'webapi#system_function', 'system'))$/;"	v
s:szCurrentWorkingDir	autoload/omni/cpp/complete.vim	/^let s:szCurrentWorkingDir = getcwd()$/;"	v
s:t_none	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:t_none          = "NONE"$/;"	v
s:tabHelp	bundle/supertab/plugin/supertab.vim	/^  let s:tabHelp =$/;"	v
s:tag	bundle/vim-haml/indent/haml.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tags	bundle/html5.vim/indent/html.vim	/^let s:tags = []$/;"	v
s:temp00	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:temp00      = s:base00$/;"	v
s:temp01	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:temp01      = s:base01$/;"	v
s:temp02	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:temp02      = s:base02$/;"	v
s:temp03	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:temp03      = s:base03$/;"	v
s:temp_files	bundle/vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:template	bundle/webapi-vim/autoload/webapi/metaWeblog.vim	/^let s:template = {"uri" : ""}$/;"	v
s:template	bundle/webapi-vim/autoload/webapi/xml.vim	/^let s:template = { 'name': '', 'attr': {}, 'child': [] }$/;"	v
s:terminal_italic	bundle/vim-colors-solarized/colors/solarized.vim	/^            let s:terminal_italic=1$/;"	v
s:terminal_italic	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:terminal_italic=0 " terminals will be guilty until proven compatible$/;"	v
s:terminal_italic	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:terminal_italic=1 " TODO: could refactor to not require this at all$/;"	v
s:terms_italic	bundle/vim-colors-solarized/colors/solarized.vim	/^let s:terms_italic=[$/;"	v
s:terms_noitalic	bundle/vim-colors-solarized/colors/solarized.vim	/^let s:terms_noitalic=[$/;"	v
s:ternary	bundle/vim-javascript/indent/javascript.vim	/^let s:ternary = '^\\s\\+[?|:]'$/;"	v
s:ternary_q	bundle/vim-javascript/indent/javascript.vim	/^let s:ternary_q = '^\\s\\+?'$/;"	v
s:testarray	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:testarray = [$/;"	v
s:text	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:text = map(['second', 'seconds', 'minutes', 'hours', 'days', 'weeks',$/;"	v
s:timerData	bundle/vim-l9/plugin/l9.vim	/^  let s:timerData = []$/;"	v
s:timerTagMaxLen	bundle/vim-l9/plugin/l9.vim	/^  let s:timerTagMaxLen = 0$/;"	v
s:tlist_app_name	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_ant_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_ant_settings = 'ant;p:projects;t:targets'$/;"	v
s:tlist_def_asm_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_aspperl_settings =$/;"	v
s:tlist_def_aspvbs_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_aspvbs_settings =$/;"	v
s:tlist_def_awk_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_basic_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_basic_settings =$/;"	v
s:tlist_def_beta_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_c_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_cobol_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cs_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_csh_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_d_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_d_settings = 'c++;n:namespace;v:variable;t:typedef;' .$/;"	v
s:tlist_def_dosbatch_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_dosbatch_settings = 'dosbatch;l:labels;v:variables'$/;"	v
s:tlist_def_eiffel_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_flex_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_flex_settings = 'flex;v:global;c:classes;p:properties;'.$/;"	v
s:tlist_def_fortran_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_go_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_go_settings = 'go;f:function;p:package;t:struct'$/;"	v
s:tlist_def_html_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:function'$/;"	v
s:tlist_def_java_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_javascript_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_javascript_settings =$/;"	v
s:tlist_def_lisp_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_matlab_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_matlab_settings = 'matlab;f:function'$/;"	v
s:tlist_def_ocamal_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_ocamal_settings = 'ocamal;M:module;v:global;t:type;'.$/;"	v
s:tlist_def_pascal_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_php_settings =$/;"	v
s:tlist_def_python_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_sql_settings = 'sql;f:functions;' .$/;"	v
s:tlist_def_tcl_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_tex_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_tex_settings = 'tex;c:chapters;s:sections;u:subsections;'.$/;"	v
s:tlist_def_vera_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vhdl_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_vhdl_settings = 'vhdl;c:constant;t:type;T:subtype;r:record;e:entity;f:function;p:procedure;P:package'$/;"	v
s:tlist_def_vim_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_vim_settings =$/;"	v
s:tlist_def_yacc_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_names	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_ftype_count	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	bundle/taglist_46/plugin/taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	bundle/taglist_46/plugin/taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_win_maximized	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_winsize_chgd	bundle/taglist_46/plugin/taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:to_mode	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:to_mode = ''$/;"	v
s:tree_up_dir_line	bundle/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:types	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:types = {$/;"	v
s:types	bundle/supertab/plugin/supertab.vim	/^  let s:types = s:types . "np"$/;"	v
s:types	bundle/supertab/plugin/supertab.vim	/^  let s:types =$/;"	v
s:typesDirty	bundle/tcomment_vim/autoload/tcomment.vim	/^let s:typesDirty = 1$/;"	v
s:u	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:u           = ""$/;"	v
s:u	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:u           = ",underline"$/;"	v
s:uname	bundle/syntastic/plugin/syntastic.vim	/^        let s:uname = system('uname')$/;"	v
s:undo_ftplugin	bundle/vim-haml/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	bundle/vim-haml/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	bundle/vim-haml/ftplugin/haml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	bundle/vim-ruby/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	bundle/vim-ruby/ftplugin/eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:urlsafe_table	bundle/webapi-vim/autoload/webapi/base64.vim	/^let s:urlsafe_table = [$/;"	v
s:utf8len	bundle/webapi-vim/autoload/webapi/ucs.vim	/^let s:utf8len = [$/;"	v
s:var_stmt	bundle/vim-javascript/indent/javascript.vim	/^let s:var_stmt = '^\\s*var'$/;"	v
s:version_file	bundle/vim-ruby/ftplugin/ruby.vim	/^  let s:version_file = findfile('.ruby-version', '.;')$/;"	v
s:view_types	bundle/vim-rails/autoload/rails.vim	/^let s:view_types = split('rhtml,erb,rxml,builder,rjs,haml',',')$/;"	v
s:violet	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "#5f5faf"$/;"	v
s:violet	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "#6c71c4"$/;"	v
s:violet	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "13"$/;"	v
s:violet	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "61"$/;"	v
s:violet	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "LightMagenta"  " 5*$/;"	v
s:vmode	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:vmode       = "cterm"$/;"	v
s:vmode	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:vmode       = "gui"$/;"	v
s:vopen_warning	autoload/pathogen.vim	/^let s:vopen_warning = 0$/;"	v
s:waiting	bundle/vim-dispatch/autoload/dispatch/tmux.vim	/^let s:waiting = {}$/;"	v
s:white	bundle/vim-css-color/after/syntax/css.vim	/^    let s:white = 15$/;"	v
s:white	bundle/vim-css-color/after/syntax/css.vim	/^let s:white = '#ffffff'$/;"	v
s:wig_cond	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^let s:wig_cond = v:version > 702 || ( v:version == 702 && has('patch051') )$/;"	v
s:xor	bundle/webapi-vim/autoload/webapi/hmac.vim	/^let s:xor = [$/;"	v
s:xor	bundle/webapi-vim/autoload/webapi/sha1.vim	/^let s:xor = [$/;"	v
s:xtermcolor	bundle/vim-css-color/after/syntax/css.vim	/^    let s:xtermcolor += [$/;"	v
s:xtermcolor	bundle/vim-css-color/after/syntax/css.vim	/^    let s:xtermcolor = [$/;"	v
s:xvquant	bundle/vim-css-color/after/syntax/css.vim	/^    let s:xvquant = repeat([0],48)$/;"	v
s:xvquant	bundle/vim-css-color/after/syntax/css.vim	/^    let s:xvquant[s:cubergb[2]] = 2$/;"	v
s:xvquant	bundle/vim-css-color/after/syntax/css.vim	/^    let s:xvquant[s:cubergb[3]] = 3$/;"	v
s:xvquant	bundle/vim-css-color/after/syntax/css.vim	/^    let s:xvquant[s:cubergb[4]] = 4$/;"	v
s:xvquant	bundle/vim-css-color/after/syntax/css.vim	/^    let s:xvquant[s:cubergb[5]] = 5$/;"	v
s:yellow	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#af8700"$/;"	v
s:yellow	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#b58900"$/;"	v
s:yellow	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "136"$/;"	v
s:yellow	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "3"$/;"	v
s:yellow	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "DarkYellow"    " 3$/;"	v
samerootsyml	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:samerootsyml(each, isfile, cwd)$/;"	f
sanstail	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sanstail(str)$/;"	f
savebookmark	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:savebookmark(name, cwd)$/;"	f
saved_splitbelow	bundle/Gundo/autoload/gundo.vim	/^    let saved_splitbelow = &splitbelow$/;"	v
savetofile	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:savetofile(mrufs)$/;"	f
scandir_baton_t	bundle/the_silver_searcher/src/scandir.h	/^} scandir_baton_t;$/;"	t	typeref:struct:__anon3
scanlineforuris	bundle/vim-rails/autoload/rails.vim	/^function! s:scanlineforuris(line)$/;"	f
schemaEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:schemaEdit(cmd,...)$/;"	f
schemaList	bundle/vim-rails/autoload/rails.vim	/^function! s:schemaList(A,L,P)$/;"	f
scriptease	bundle/vim-scriptease/plugin/scriptease.vim	/^augroup scriptease$/;"	a
scriptease#capture	bundle/vim-scriptease/plugin/scriptease.vim	/^function! scriptease#capture(excmd) abort$/;"	f
scriptease#disarm	bundle/vim-scriptease/plugin/scriptease.vim	/^function! scriptease#disarm(file)$/;"	f
scriptease#dump	bundle/vim-scriptease/plugin/scriptease.vim	/^function! scriptease#dump(object, ...) abort$/;"	f
scriptease#scriptid	bundle/vim-scriptease/plugin/scriptease.vim	/^function! scriptease#scriptid(filename) abort$/;"	f
scriptease#scriptname	bundle/vim-scriptease/plugin/scriptease.vim	/^function! scriptease#scriptname(file) abort$/;"	f
scriptease#synnames	bundle/vim-scriptease/plugin/scriptease.vim	/^function! scriptease#synnames(...) abort$/;"	f
scriptease_breakadd	bundle/vim-scriptease/plugin/scriptease.vim	/^augroup scriptease_breakadd$/;"	a
scriptease_help	bundle/vim-scriptease/plugin/scriptease.vim	/^augroup scriptease_help$/;"	a
search_all_files	bundle/the_silver_searcher/src/options.h	/^    int search_all_files;$/;"	m	struct:__anon2
search_binary_files	bundle/the_silver_searcher/src/options.h	/^    int search_binary_files;$/;"	m	struct:__anon2
search_buf	bundle/the_silver_searcher/src/search.c	/^void search_buf(const char *buf, const int buf_len,$/;"	f
search_dir	bundle/the_silver_searcher/src/search.c	/^void search_dir(ignores *ig, const char *base_path, const char *path, const int depth) {$/;"	f
search_file	bundle/the_silver_searcher/src/search.c	/^void search_file(const char *file_full_path) {$/;"	f
search_file_worker	bundle/the_silver_searcher/src/search.c	/^void *search_file_worker() {$/;"	f
search_hidden_files	bundle/the_silver_searcher/src/options.h	/^    int search_hidden_files;$/;"	m	struct:__anon2
search_stream	bundle/the_silver_searcher/src/options.h	/^    int search_stream; \/* true if tail -F blah | ag *\/$/;"	m	struct:__anon2
search_stream	bundle/the_silver_searcher/src/search.c	/^void search_stream(FILE *stream, const char *path) {$/;"	f
search_zip_files	bundle/the_silver_searcher/src/options.h	/^    int search_zip_files;$/;"	m	struct:__anon2
searchsyn	bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:searchsyn(pattern,syn,flags,mode)$/;"	f
select_in_visual_mode	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:select_in_visual_mode(region)$/;"	f
select_instance_variable	bundle/vim-ruby-refactoring/features/step_definitions/rename_instance_variable_steps.rb	/^def select_instance_variable$/;"	f
select_line	bundle/vim-ruby-refactoring/features/step_definitions/extract_method_steps.rb	/^def select_line$/;"	f
select_lines	bundle/vim-ruby-refactoring/features/step_definitions/extract_method_steps.rb	/^def select_lines$/;"	f
select_local_variable	bundle/vim-ruby-refactoring/features/step_definitions/rename_local_variable_steps.rb	/^def select_local_variable$/;"	f
select_magic_number	bundle/vim-ruby-refactoring/features/step_definitions/extract_constant_steps.rb	/^def select_magic_number$/;"	f
select_method	bundle/vim-ruby-refactoring/features/support/shared_methods.rb	/^def select_method$/;"	f
select_rspec_let	bundle/vim-ruby-refactoring/features/step_definitions/extract_let_steps.rb	/^def select_rspec_let$/;"	f
select_variable_assignment	bundle/vim-ruby-refactoring/features/step_definitions/extract_let_steps.rb	/^def select_variable_assignment$/;"	f
select_variable_contents	bundle/vim-ruby-refactoring/plugin/refactorings/general/extractvariable.vim	/^function! s:select_variable_contents()$/;"	f
selectiveexpand	bundle/vim-rails/autoload/rails.vim	/^function! s:selectiveexpand(pat,good,default,...)$/;"	f
set_current_compiler	bundle/vim-dispatch/autoload/dispatch.vim	/^function! s:set_current_compiler(name)$/;"	f
set_file_content	bundle/vim-multiple-cursors/spec/benchmark_spec.rb	/^def set_file_content(string)$/;"	f
set_file_content	bundle/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def set_file_content(string)$/;"	f
set_filetype	bundle/vim-ruby-refactoring/features/support/shared_methods.rb	/^def set_filetype$/;"	f
set_log_level	bundle/the_silver_searcher/src/log.c	/^void set_log_level(enum log_level threshold) {$/;"	f
setentries	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:setentries()$/;"	f
settype	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:settype(type)$/;"	f
setup	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:setup() abort$/;"	f
setup_paste	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:setup_paste() abort$/;"	f
setupblank	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:setupblank()$/;"	f
setuplock	bundle/vim-bundler/plugin/bundler.vim	/^function! s:setuplock()$/;"	f
shellesc	bundle/vim-bundler/plugin/bundler.vim	/^function! s:shellesc(arg) abort$/;"	f
shellesc	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellesc	bundle/vim-rake/plugin/rake.vim	/^function! s:shellesc(arg) abort$/;"	f
shellesc	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:shellesc(arg) abort$/;"	f
shellslash	bundle/vim-bundler/plugin/bundler.vim	/^function! s:shellslash(path)$/;"	f
shellslash	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path)$/;"	f
shellslash	bundle/vim-rake/plugin/rake.vim	/^function! s:shellslash(path)$/;"	f
shellslash	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:shellslash(path) abort$/;"	f
shellwords	bundle/Gist.vim/autoload/gist.vim	/^function! s:shellwords(str)$/;"	f
shortest	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:shortest(lens)$/;"	f
showMenu	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:showMenu(node)$/;"	f
signature	bundle/the_silver_searcher/src/uthash.h	/^   uint32_t signature; \/* used only to find hash tables in external analysis *\/$/;"	m	struct:UT_hash_table
skip_latency_measure	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:skip_latency_measure()$/;"	f
skip_lookup	bundle/the_silver_searcher/src/search.h	/^size_t skip_lookup[256];$/;"	v
skip_vcs_ignores	bundle/the_silver_searcher/src/options.h	/^    int skip_vcs_ignores;$/;"	m	struct:__anon2
snakecase	bundle/vim-ruby-refactoring/plugin/refactorings/general/introducevariable.vim	/^function! s:snakecase(word)$/;"	f
sname	bundle/vim-rails/autoload/rails.vim	/^function! s:sname()$/;"	f
snipMate#expandSnip	bundle/snipmate.vim/autoload/snipMate.vim	/^fun snipMate#expandSnip(snip, col)$/;"	f
snipMate#jumpTabStop	bundle/snipmate.vim/autoload/snipMate.vim	/^fun snipMate#jumpTabStop(backwards)$/;"	f
snippets_dir	bundle/snipmate.vim/plugin/snipMate.vim	/^	let snippets_dir = substitute(globpath(&rtp, 'snippets\/'), "\\n", ',', 'g')$/;"	v
soap_call	bundle/webapi-vim/autoload/webapi/soap.vim	/^function! s:soap_call(url, func, ...)$/;"	f
sort_parameter_declaration_position_pairs	bundle/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:sort_parameter_declaration_position_pairs(pair1, pair2)$/;"	f
sort_parameters_by_declaration	bundle/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:sort_parameters_by_declaration(parameters)$/;"	f
specEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:specEdit(cmd,...) abort$/;"	f
specList	bundle/vim-rails/autoload/rails.vim	/^function! s:specList(A,L,P)$/;"	f
split	bundle/vim-rails/autoload/rails.vim	/^function! s:split(arg, ...)$/;"	f
stage_info	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:stage_info(lnum) abort$/;"	f
start	bundle/the_silver_searcher/src/util.h	/^    int start; \/* Byte at which the match starts *\/$/;"	m	struct:__anon6
start_latency_measure	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:start_latency_measure()$/;"	f
startswith	bundle/vim-rails/autoload/rails.vim	/^function! s:startswith(string,prefix)$/;"	f
stats	bundle/the_silver_searcher/src/options.h	/^    int stats;$/;"	m	struct:__anon2
stats	bundle/the_silver_searcher/src/util.h	/^ag_stats stats;$/;"	v
stats_mtx	bundle/the_silver_searcher/src/search.h	/^pthread_mutex_t stats_mtx;$/;"	v
status	bundle/webapi-vim/example/twitter.vim	/^let status = "tweeeeeeeeeeeeeet"$/;"	v
stdout_inode	bundle/the_silver_searcher/src/options.h	/^    ino_t stdout_inode;$/;"	m	struct:__anon2
stepmatch	bundle/vim-cucumber/ftplugin/cucumber.vim	/^function! s:stepmatch(receiver,target)$/;"	f
steps	bundle/vim-cucumber/ftplugin/cucumber.vim	/^function! s:steps(lnum)$/;"	f
str2bytes	bundle/webapi-vim/autoload/webapi/base64.vim	/^function! s:str2bytes(str)$/;"	f
str2bytes	bundle/webapi-vim/autoload/webapi/hmac.vim	/^function! s:str2bytes(str)$/;"	f
str2bytes	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function! s:str2bytes(str)$/;"	f
string_decode	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:string_decode(str)$/;"	f
string_encode	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:string_encode(str)$/;"	f
strncmp_fp	bundle/the_silver_searcher/src/util.h	/^typedef const char *(*strncmp_fp)(const char*, const char*, const size_t, const size_t, const size_t[]);$/;"	t
strndup	bundle/the_silver_searcher/src/util.c	/^char *strndup(const char *src, size_t len) {$/;"	f
strwidth	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:strwidth(str)$/;"	f
stylesheetEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:stylesheetEdit(cmd,...)$/;"	f
stylesheetList	bundle/vim-rails/autoload/rails.vim	/^function! s:stylesheetList(A,L,P)$/;"	f
sub	bundle/vim-bundler/plugin/bundler.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sub	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sub	bundle/vim-rails/autoload/rails.vim	/^function! s:sub(str,pat,rep)$/;"	f
sub	bundle/vim-rake/plugin/rake.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sub	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sublist	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist(l, s, e)$/;"	f
sublist7071	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist7071(l, s, e)$/;"	f
subprocess	bundle/vim-l9/autoload/l9/async.py	/^import subprocess$/;"	i
supertab_close_preview	bundle/supertab/plugin/supertab.vim	/^    augroup supertab_close_preview$/;"	a
symdir_t	bundle/the_silver_searcher/src/search.h	/^} symdir_t;$/;"	t	typeref:struct:__anon5
symhash	bundle/the_silver_searcher/src/search.h	/^symdir_t *symhash;$/;"	v
syn	bundle/vim-cucumber/indent/cucumber.vim	/^function! s:syn(lnum)$/;"	f
synname	bundle/vim-endwise/plugin/endwise.vim	/^function! s:synname()$/;"	f
synname	bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:synname()$/;"	f
syntastic	bundle/syntastic/plugin/syntastic.vim	/^    augroup syntastic$/;"	a
syntastic	bundle/syntastic/plugin/syntastic.vim	/^augroup syntastic$/;"	a
syntastic#c#CheckPKG	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckPKG(name, ...)$/;"	f
syntastic#c#CheckPhp	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckPhp()$/;"	f
syntastic#c#CheckPython	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckPython()$/;"	f
syntastic#c#CheckRuby	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#CheckRuby()$/;"	f
syntastic#c#GetLocList	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#GetLocList(filetype, subchecker, options)$/;"	f
syntastic#c#NullOutput	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#NullOutput()$/;"	f
syntastic#c#ReadConfig	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#ReadConfig(file)$/;"	f
syntastic#makeprg#build	bundle/syntastic/autoload/syntastic/makeprg.vim	/^function! syntastic#makeprg#build(opts)$/;"	f
syntastic#postprocess#compressWhitespace	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function syntastic#postprocess#compressWhitespace(errors)$/;"	f
syntastic#postprocess#cygwinRemoveCR	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#cygwinRemoveCR(errors)$/;"	f
syntastic#postprocess#decodeXMLEntities	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#decodeXMLEntities(errors)$/;"	f
syntastic#postprocess#filterForeignErrors	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#filterForeignErrors(errors)$/;"	f
syntastic#postprocess#sort	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#sort(errors)$/;"	f
syntastic#util#DevNull	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#DevNull()$/;"	f
syntastic#util#Slash	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#Slash() abort$/;"	f
syntastic#util#bufIsActive	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#bufIsActive(buffer)$/;"	f
syntastic#util#debug	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#debug(msg)$/;"	f
syntastic#util#decodeXMLEntities	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#decodeXMLEntities(string)$/;"	f
syntastic#util#deprecationWarn	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#deprecationWarn(msg)$/;"	f
syntastic#util#error	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#error(msg)$/;"	f
syntastic#util#findInParent	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#findInParent(what, where)$/;"	f
syntastic#util#getVersion	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#getVersion(command)$/;"	f
syntastic#util#info	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#info(msg)$/;"	f
syntastic#util#parseShebang	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseShebang()$/;"	f
syntastic#util#parseVersion	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseVersion(version)$/;"	f
syntastic#util#shescape	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shescape(string)$/;"	f
syntastic#util#shexpand	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shexpand(string)$/;"	f
syntastic#util#unique	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#unique(list)$/;"	f
syntastic#util#versionIsAtLeast	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#versionIsAtLeast(installed, required)$/;"	f
syntastic#util#warn	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#warn(msg)$/;"	f
syntastic#util#wideMsg	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#wideMsg(msg)$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:syntax()$/;"	f
syntaxfile	bundle/vim-bundler/plugin/bundler.vim	/^function! s:syntaxfile()$/;"	f
syntaxlock	bundle/vim-bundler/plugin/bundler.vim	/^function! s:syntaxlock()$/;"	f
sys	bundle/Gundo/autoload/gundo.py	/^import sys$/;"	i
t:miniBufExplAutoUpdate	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^let t:miniBufExplAutoUpdate = 0$/;"	v
t:miniBufExplSortBy	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^let t:miniBufExplSortBy = g:miniBufExplSortBy$/;"	v
t:skipEligibleBuffersCheck	bundle/minibufexpl.vim/plugin/minibufexpl.vim	/^let t:skipEligibleBuffersCheck = 0$/;"	v
tail	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:tail()$/;"	f
tail	bundle/the_silver_searcher/src/uthash.h	/^   struct UT_hash_handle *tail; \/* tail hh in app order, for fast append    *\/$/;"	m	struct:UT_hash_table	typeref:struct:UT_hash_table::UT_hash_handle
tbl	bundle/the_silver_searcher/src/uthash.h	/^   struct UT_hash_table *tbl;$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_table
tcomment#CollectFileTypes	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#CollectFileTypes()$/;"	f
tcomment#Comment	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#Comment(beg, end, ...)$/;"	f
tcomment#CommentAs	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#CommentAs(beg, end, commentAnyway, filetype, ...)$/;"	f
tcomment#Complete	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#Complete(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
tcomment#CompleteArgs	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#CompleteArgs(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
tcomment#DefineType	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#DefineType(name, commentdef, ...)$/;"	f
tcomment#GetCommentDef	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#GetCommentDef(name)$/;"	f
tcomment#GuessCommentType	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#GuessCommentType(...) "{{{3$/;"	f
tcomment#Operator	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#Operator(type, ...) "{{{3$/;"	f
tcomment#OperatorAnyway	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#OperatorAnyway(type) "{{{3$/;"	f
tcomment#OperatorLine	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#OperatorLine(type) "{{{3$/;"	f
tcomment#OperatorLineAnyway	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#OperatorLineAnyway(type) "{{{3$/;"	f
tcomment#SetOption	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#SetOption(name, arg) "{{{3$/;"	f
tcomment#TextObjectInlineComment	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#TextObjectInlineComment() "{{{3$/;"	f
tcomment#TypeExists	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#TypeExists(name)$/;"	f
template.childNode	bundle/webapi-vim/autoload/webapi/xml.vim	/^function! s:template.childNode(...) dict$/;"	f
template.childNodes	bundle/webapi-vim/autoload/webapi/xml.vim	/^function! s:template.childNodes(...) dict$/;"	f
template.deletePost	bundle/webapi-vim/autoload/webapi/metaWeblog.vim	/^function! s:template.deletePost(appkey, postid, username, password, ...) dict$/;"	f
template.editPost	bundle/webapi-vim/autoload/webapi/metaWeblog.vim	/^function! s:template.editPost(postid, username, password, content, publish) dict$/;"	f
template.find	bundle/webapi-vim/autoload/webapi/xml.vim	/^function! s:template.find(...) dict$/;"	f
template.findAll	bundle/webapi-vim/autoload/webapi/xml.vim	/^function! s:template.findAll(...) dict$/;"	f
template.getPost	bundle/webapi-vim/autoload/webapi/metaWeblog.vim	/^function! s:template.getPost(postid, username, password) dict$/;"	f
template.getRecentPosts	bundle/webapi-vim/autoload/webapi/metaWeblog.vim	/^function! s:template.getRecentPosts(blogid, username, password, numberOfPosts) dict$/;"	f
template.newMediaObject	bundle/webapi-vim/autoload/webapi/metaWeblog.vim	/^function! s:template.newMediaObject(blogid, username, password, file) dict$/;"	f
template.newPost	bundle/webapi-vim/autoload/webapi/metaWeblog.vim	/^function! s:template.newPost(blogid, username, password, content, publish) dict$/;"	f
template.toString	bundle/webapi-vim/autoload/webapi/xml.vim	/^function! s:template.toString() dict$/;"	f
template.value	bundle/webapi-vim/autoload/webapi/xml.vim	/^function! s:template.value(...) dict$/;"	f
test	bundle/webapi-vim/autoload/webapi/hmac.vim	/^function s:test(name, func, key, data, digest)$/;"	f
text	bundle/webapi-vim/example/jugem.vim	/^let text = "How about this?<br \/><img src=\\"".imgurl["url"]."\\">"$/;"	v
textdialog	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:textdialog(str)$/;"	f
threading	bundle/vim-l9/autoload/l9/async.py	/^import threading$/;"	i
throw	bundle/vim-bundler/plugin/bundler.vim	/^function! s:throw(string) abort$/;"	f
throw	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
throw	bundle/vim-rake/plugin/rake.vim	/^function! s:throw(string) abort$/;"	f
time	bundle/Gundo/autoload/gundo.py	/^import time$/;"	i
time	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:time(cmd)$/;"	f
time_end	bundle/the_silver_searcher/src/util.h	/^    struct timeval time_end;$/;"	m	struct:__anon7	typeref:struct:__anon7::timeval
time_start	bundle/the_silver_searcher/src/util.h	/^    struct timeval time_start;$/;"	m	struct:__anon7	typeref:struct:__anon7::timeval
timerBegin	bundle/vim-l9/plugin/l9.vim	/^  function s:timerBegin(tag)$/;"	f
timerDump	bundle/vim-l9/plugin/l9.vim	/^  function s:timerDump()$/;"	f
timerStop	bundle/vim-l9/plugin/l9.vim	/^  function s:timerStop()$/;"	f
tlist_pyrex_settings	bundle/taglist_46/plugin/taglist.vim	/^let tlist_pyrex_settings='python;c:classe;m:memder;f:function'$/;"	v
to_fault	bundle/webapi-vim/autoload/webapi/xmlrpc.vim	/^function! s:to_fault(dom)$/;"	f
to_value	bundle/webapi-vim/autoload/webapi/xmlrpc.vim	/^function! s:to_value(content)$/;"	f
toggle	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:toggle(op)$/;"	f
toggleIgnoreFilter	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:toggleZoom()$/;"	f
togglebg#map	bundle/vim-colors-solarized/autoload/togglebg.vim	/^function! togglebg#map(mapActivation)$/;"	f
total_bytes	bundle/the_silver_searcher/src/util.h	/^    long total_bytes;$/;"	m	struct:__anon7
total_files	bundle/the_silver_searcher/src/util.h	/^    long total_files;$/;"	m	struct:__anon7
total_matches	bundle/the_silver_searcher/src/util.h	/^    long total_matches;$/;"	m	struct:__anon7
type	bundle/vim-multiple-cursors/spec/benchmark_spec.rb	/^def type(string)$/;"	f
type	bundle/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def type(string)$/;"	f
uint32_t	bundle/the_silver_searcher/src/uthash.h	/^typedef unsigned int uint32_t;$/;"	t
uint8	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function! s:uint8(n)$/;"	f
uint8_t	bundle/the_silver_searcher/src/uthash.h	/^typedef unsigned char uint8_t;$/;"	t
uname	bundle/syntastic/plugin/syntastic.vim	/^function! s:uname()$/;"	f
unimpaired_paste	bundle/vim-unimpaired/plugin/unimpaired.vim	/^augroup unimpaired_paste$/;"	a
uniq	bundle/vim-rails/autoload/rails.vim	/^function! s:uniq(list) abort$/;"	f
unlet_for	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:unlet_for(files) abort$/;"	f
unlink_file	bundle/html5.vim/Makefile	/^unlink_file = \\$/;"	m
unmarksigns	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:unmarksigns()$/;"	f
upDirCurrentRootClosed	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
upDirCurrentRootOpen	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
update_visual_markers	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:update_visual_markers(region)$/;"	f
url_decode	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:url_decode(str)$/;"	f
url_encode	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:url_encode(str)$/;"	f
urlencode_char	bundle/webapi-vim/autoload/webapi/http.vim	/^function! s:urlencode_char(c, ...)$/;"	f
usage	bundle/the_silver_searcher/src/options.c	/^void usage() {$/;"	f
usrign	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:usrign(item, type)$/;"	f
uthash_expand_fyi	bundle/the_silver_searcher/src/uthash.h	/^#define uthash_expand_fyi(/;"	d
uthash_fatal	bundle/the_silver_searcher/src/uthash.h	/^#define uthash_fatal(/;"	d
uthash_free	bundle/the_silver_searcher/src/uthash.h	/^#define uthash_free(/;"	d
uthash_malloc	bundle/the_silver_searcher/src/uthash.h	/^#define uthash_malloc(/;"	d
uthash_noexpand_fyi	bundle/the_silver_searcher/src/uthash.h	/^#define uthash_noexpand_fyi(/;"	d
vacantdict	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:vacantdict(dict)$/;"	f
validfile	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:validfile(fname, ftype)$/;"	f
vasprintf	bundle/the_silver_searcher/src/util.c	/^int vasprintf(char **ret, const char *fmt, va_list args) {$/;"	f
verifier	bundle/webapi-vim/example/google-buzz.vim	/^  let verifier = input("VERIFIER:")$/;"	v
view	bundle/vim-css-color/after/syntax/css.vim	/^  let view = winsaveview()$/;"	v
viewEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:viewEdit(cmd,...)$/;"	f
viewList	bundle/vim-rails/autoload/rails.vim	/^function! s:viewList(A,L,P)$/;"	f
vim	bundle/Gundo/autoload/gundo.py	/^import vim$/;"	i
vim	bundle/vim-l9/autoload/l9/async.py	/^import vim$/;"	i
vim_snippets#Filename	bundle/snippets/autoload/vim_snippets.vim	/^fun! vim_snippets#Filename(...)$/;"	f
vplog	bundle/the_silver_searcher/src/log.c	/^void vplog(const unsigned int level, const char *fmt, va_list args) {$/;"	f
wait_for_user_input	bundle/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:wait_for_user_input(mode)$/;"	f
walk_nodes	bundle/Gundo/autoload/gundo.py	/^    def walk_nodes(nodes):$/;"	f	function:GundoRenderGraph
walker	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:walker(m, p, d)$/;"	f
warn	autoload/pathogen.vim	/^function! s:warn(msg)$/;"	f
warn	bundle/vim-bundler/plugin/bundler.vim	/^function! s:warn(str)$/;"	f
warn	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str)$/;"	f
warn	bundle/vim-rails/autoload/rails.vim	/^function! s:warn(str)$/;"	f
warn	bundle/vim-rake/plugin/rake.vim	/^function! s:warn(str)$/;"	f
webapi#atom#createEntry	bundle/webapi-vim/autoload/webapi/atom.vim	/^function! webapi#atom#createEntry(uri, user, pass, entry, ...)$/;"	f
webapi#atom#deleteEntry	bundle/webapi-vim/autoload/webapi/atom.vim	/^function! webapi#atom#deleteEntry(uri, user, pass)$/;"	f
webapi#atom#getEntry	bundle/webapi-vim/autoload/webapi/atom.vim	/^function! webapi#atom#getEntry(uri, user, pass)$/;"	f
webapi#atom#getFeed	bundle/webapi-vim/autoload/webapi/atom.vim	/^function! webapi#atom#getFeed(uri, user, pass)$/;"	f
webapi#atom#getService	bundle/webapi-vim/autoload/webapi/atom.vim	/^function! webapi#atom#getService(uri, user, pass)$/;"	f
webapi#atom#newEntry	bundle/webapi-vim/autoload/webapi/atom.vim	/^function! webapi#atom#newEntry()$/;"	f
webapi#atom#updateEntry	bundle/webapi-vim/autoload/webapi/atom.vim	/^function! webapi#atom#updateEntry(uri, user, pass, entry, ...)$/;"	f
webapi#base64#b64decode	bundle/webapi-vim/autoload/webapi/base64.vim	/^function! webapi#base64#b64decode(data)$/;"	f
webapi#base64#b64encode	bundle/webapi-vim/autoload/webapi/base64.vim	/^function! webapi#base64#b64encode(data)$/;"	f
webapi#base64#b64encodebin	bundle/webapi-vim/autoload/webapi/base64.vim	/^function! webapi#base64#b64encodebin(data)$/;"	f
webapi#base64#test	bundle/webapi-vim/autoload/webapi/base64.vim	/^function! webapi#base64#test()$/;"	f
webapi#bit#and	bundle/webapi-vim/autoload/webapi/bit.vim	/^function! webapi#bit#and(a,b)$/;"	f
webapi#bit#bin2dec	bundle/webapi-vim/autoload/webapi/bit.vim	/^function! webapi#bit#bin2dec(v)$/;"	f
webapi#bit#dec2bin	bundle/webapi-vim/autoload/webapi/bit.vim	/^function! webapi#bit#dec2bin(v)$/;"	f
webapi#bit#or	bundle/webapi-vim/autoload/webapi/bit.vim	/^function! webapi#bit#or(a,b)$/;"	f
webapi#bit#shift	bundle/webapi-vim/autoload/webapi/bit.vim	/^function! webapi#bit#shift(a,b)$/;"	f
webapi#feed#parseURL	bundle/webapi-vim/autoload/webapi/feed.vim	/^function! webapi#feed#parseURL(url)$/;"	f
webapi#hmac#hmac	bundle/webapi-vim/autoload/webapi/hmac.vim	/^function webapi#hmac#hmac(key, text, hash, blocksize)$/;"	f
webapi#hmac#md5	bundle/webapi-vim/autoload/webapi/hmac.vim	/^function webapi#hmac#md5(key, text)$/;"	f
webapi#hmac#sha1	bundle/webapi-vim/autoload/webapi/hmac.vim	/^function webapi#hmac#sha1(key, text)$/;"	f
webapi#hmac#test	bundle/webapi-vim/autoload/webapi/hmac.vim	/^function webapi#hmac#test()$/;"	f
webapi#html#decodeEntityReference	bundle/webapi-vim/autoload/webapi/html.vim	/^function! webapi#html#decodeEntityReference(str)$/;"	f
webapi#html#encodeEntityReference	bundle/webapi-vim/autoload/webapi/html.vim	/^function! webapi#html#encodeEntityReference(str)$/;"	f
webapi#html#parse	bundle/webapi-vim/autoload/webapi/html.vim	/^function! webapi#html#parse(html)$/;"	f
webapi#html#parseFile	bundle/webapi-vim/autoload/webapi/html.vim	/^function! webapi#html#parseFile(fname)$/;"	f
webapi#html#parseURL	bundle/webapi-vim/autoload/webapi/html.vim	/^function! webapi#html#parseURL(url)$/;"	f
webapi#http#decodeURI	bundle/webapi-vim/autoload/webapi/http.vim	/^function! webapi#http#decodeURI(str)$/;"	f
webapi#http#encodeURI	bundle/webapi-vim/autoload/webapi/http.vim	/^function! webapi#http#encodeURI(items, ...)$/;"	f
webapi#http#encodeURIComponent	bundle/webapi-vim/autoload/webapi/http.vim	/^function! webapi#http#encodeURIComponent(items)$/;"	f
webapi#http#escape	bundle/webapi-vim/autoload/webapi/http.vim	/^function! webapi#http#escape(str)$/;"	f
webapi#http#get	bundle/webapi-vim/autoload/webapi/http.vim	/^function! webapi#http#get(url, ...)$/;"	f
webapi#http#post	bundle/webapi-vim/autoload/webapi/http.vim	/^function! webapi#http#post(url, ...)$/;"	f
webapi#json#decode	bundle/webapi-vim/autoload/webapi/json.vim	/^function! webapi#json#decode(json)$/;"	f
webapi#json#encode	bundle/webapi-vim/autoload/webapi/json.vim	/^function! webapi#json#encode(val)$/;"	f
webapi#json#false	bundle/webapi-vim/autoload/webapi/json.vim	/^function! webapi#json#false()$/;"	f
webapi#json#null	bundle/webapi-vim/autoload/webapi/json.vim	/^function! webapi#json#null()$/;"	f
webapi#json#true	bundle/webapi-vim/autoload/webapi/json.vim	/^function! webapi#json#true()$/;"	f
webapi#jsonrpc#call	bundle/webapi-vim/autoload/webapi/jsonrpc.vim	/^function! webapi#jsonrpc#call(uri, func, args)$/;"	f
webapi#jsonrpc#wrap	bundle/webapi-vim/autoload/webapi/jsonrpc.vim	/^function! webapi#jsonrpc#wrap(contexts)$/;"	f
webapi#metaWeblog#proxy	bundle/webapi-vim/autoload/webapi/metaWeblog.vim	/^function! webapi#metaWeblog#proxy(uri)$/;"	f
webapi#oauth#access_token	bundle/webapi-vim/autoload/webapi/oauth.vim	/^function! webapi#oauth#access_token(url, ctx, ...)$/;"	f
webapi#oauth#get	bundle/webapi-vim/autoload/webapi/oauth.vim	/^function! webapi#oauth#get(url, ctx, ...)$/;"	f
webapi#oauth#post	bundle/webapi-vim/autoload/webapi/oauth.vim	/^function! webapi#oauth#post(url, ctx, ...)$/;"	f
webapi#oauth#request_token	bundle/webapi-vim/autoload/webapi/oauth.vim	/^function! webapi#oauth#request_token(url, ctx, ...)$/;"	f
webapi#sha1#sha1	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function! webapi#sha1#sha1(str)$/;"	f
webapi#sha1#sha1bin	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function! webapi#sha1#sha1bin(bin)$/;"	f
webapi#sha1#test	bundle/webapi-vim/autoload/webapi/sha1.vim	/^function! webapi#sha1#test()$/;"	f
webapi#soap#proxy	bundle/webapi-vim/autoload/webapi/soap.vim	/^function! webapi#soap#proxy(url)$/;"	f
webapi#ucs#byte2nr	bundle/webapi-vim/autoload/webapi/ucs.vim	/^function! webapi#ucs#byte2nr(byte)$/;"	f
webapi#xml#createElement	bundle/webapi-vim/autoload/webapi/xml.vim	/^function! webapi#xml#createElement(name)$/;"	f
webapi#xml#parse	bundle/webapi-vim/autoload/webapi/xml.vim	/^function! webapi#xml#parse(xml)$/;"	f
webapi#xml#parseFile	bundle/webapi-vim/autoload/webapi/xml.vim	/^function! webapi#xml#parseFile(fname)$/;"	f
webapi#xml#parseURL	bundle/webapi-vim/autoload/webapi/xml.vim	/^function! webapi#xml#parseURL(url)$/;"	f
webapi#xmlrpc#call	bundle/webapi-vim/autoload/webapi/xmlrpc.vim	/^function! webapi#xmlrpc#call(uri, func, args)$/;"	f
webapi#xmlrpc#false	bundle/webapi-vim/autoload/webapi/xmlrpc.vim	/^function! webapi#xmlrpc#false()$/;"	f
webapi#xmlrpc#nil	bundle/webapi-vim/autoload/webapi/xmlrpc.vim	/^function! webapi#xmlrpc#nil()$/;"	f
webapi#xmlrpc#true	bundle/webapi-vim/autoload/webapi/xmlrpc.vim	/^function! webapi#xmlrpc#true()$/;"	f
webapi#xmlrpc#wrap	bundle/webapi-vim/autoload/webapi/xmlrpc.vim	/^function! webapi#xmlrpc#wrap(contexts)$/;"	f
widget_attributes	bundle/html5.vim/autoload/xml/aria.vim	/^let widget_attributes = {'aria-autocomplete': ['inline', 'list', 'both', 'none'], 'aria-checked': ['true', 'false', 'mixed', 'undefined'], 'aria-disabled': ['true', 'false'], 'aria-expanded': ['true', 'false', 'undefined'], 'aria-haspopup': ['true', 'false'], 'aria-hidden': ['true', 'false'], 'aria-invalid': ['grammar', 'spelling', 'true', 'false'], 'aria-label': [], 'aria-level': [], 'aria-multiline': ['true', 'false'], 'aria-multiselectable': ['true', 'false'], 'aria-orientation': ['horizontal', 'vertical'], 'aria-pressed': ['true', 'false', 'mixed', 'undefined'], 'aria-readonly': ['true', 'false'], 'aria-required': ['true', 'false'], 'aria-selected': ['true', 'false', 'undefined'], 'aria-sort': ['ascending', 'descending', 'none', 'other'], 'aria-valuemax': [], 'aria-valuemin': [], 'aria-valuenow': [], 'aria-valuetext': []}$/;"	v
widget_role	bundle/html5.vim/autoload/xml/aria.vim	/^let widget_role = ['alert', 'alertdialog', 'button', 'checkbox', 'combobox', 'dialog', 'gridcell', 'link', 'log', 'marquee', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'option', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'slider', 'spinbutton', 'status', 'tab', 'tabpanel', 'textbox', 'timer', 'tooltip', 'treeitem', 'combobox', 'grid', 'listbox', 'menu', 'menubar', 'radiogroup', 'tablist', 'tree', 'treegrid']$/;"	v
widget_role	bundle/html5.vim/autoload/xml/html5.vim	/^    let widget_role = ['alert', 'alertdialog', 'button', 'checkbox', 'combobox', 'dialog', 'gridcell', 'link', 'log', 'marquee', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'option', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'slider', 'spinbutton', 'status', 'tab', 'tabpanel', 'textbox', 'timer', 'tooltip', 'treeitem', 'combobox', 'grid', 'listbox', 'menu', 'menubar', 'radiogroup', 'tablist', 'tree', 'treegrid']$/;"	v
with_statement	bundle/vim-l9/autoload/l9/async.py	/^from __future__ import with_statement$/;"	i
word_regexp	bundle/the_silver_searcher/src/options.h	/^    int word_regexp;$/;"	m	struct:__anon2
wordchar_table	bundle/the_silver_searcher/src/util.c	/^static int wordchar_table[256];$/;"	v	file:
work_queue	bundle/the_silver_searcher/src/search.h	/^work_queue_t *work_queue;$/;"	v
work_queue_mtx	bundle/the_silver_searcher/src/search.h	/^pthread_mutex_t work_queue_mtx;$/;"	v
work_queue_t	bundle/the_silver_searcher/src/search.h	/^struct work_queue_t {$/;"	s
work_queue_t	bundle/the_silver_searcher/src/search.h	/^typedef struct work_queue_t work_queue_t;$/;"	t	typeref:struct:work_queue_t
work_queue_tail	bundle/the_silver_searcher/src/search.h	/^work_queue_t *work_queue_tail;$/;"	v
workers	bundle/the_silver_searcher/src/options.h	/^    int workers;$/;"	m	struct:__anon2
wrap	bundle/vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,...)$/;"	f
wrap_a	bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:wrap_a(back,forward)$/;"	f
wrap_i	bundle/vim-ruby/ftplugin/ruby.vim	/^function! s:wrap_i(back,forward)$/;"	f
wrapreg	bundle/vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,...)$/;"	f
write	bundle/Gundo/autoload/gundo.py	/^    def write(self, s):$/;"	m	class:Buffer
writecache	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:writecache(cafile)$/;"	f
writecache	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:writecache(lines)$/;"	f
xml_attributes	bundle/html5.vim/autoload/xml/html5.vim	/^let xml_attributes = {'xml:lang': lang_tag, 'xml:space': ['preserve'], 'xml:base': [], 'xmlns': ['http:\/\/www.w3.org\/1999\/xhtml', 'http:\/\/www.w3.org\/1998\/Math\/MathML', 'http:\/\/www.w3.org\/2000\/svg', 'http:\/\/www.w3.org\/1999\/xlink']}$/;"	v
xml_decode	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:xml_decode(str)$/;"	f
xml_encode	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:xml_encode(str)$/;"	f
xml_entity_decode	bundle/vim-unimpaired/plugin/unimpaired.vim	/^function! s:xml_entity_decode(str)$/;"	f
yA	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> yA  :call <SID>setup_paste()<CR>A$/;"	m
yI	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> yI  :call <SID>setup_paste()<CR>I$/;"	m
yO	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> yO  :call <SID>setup_paste()<CR>O$/;"	m
yP	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> yP  :call <SID>setup_paste()<CR>i$/;"	m
yS	bundle/vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	bundle/vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	bundle/vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
ygI	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> ygI :call <SID>setup_paste()<CR>gI$/;"	m
ygi	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> ygi :call <SID>setup_paste()<CR>gi$/;"	m
yo	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> yo  :call <SID>setup_paste()<CR>o$/;"	m
yp	bundle/vim-unimpaired/plugin/unimpaired.vim	/^nnoremap <silent> yp  :call <SID>setup_paste()<CR>a$/;"	m
ys	bundle/vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	bundle/vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
zS	bundle/vim-scriptease/plugin/scriptease.vim	/^function! s:zS(count)$/;"	f
zS	bundle/vim-scriptease/plugin/scriptease.vim	/^nmap zS <Plug>ScripteaseSynnames$/;"	m
